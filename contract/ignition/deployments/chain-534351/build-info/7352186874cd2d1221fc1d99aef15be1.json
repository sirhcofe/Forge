{
  "id": "7352186874cd2d1221fc1d99aef15be1",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.19",
  "solcLongVersion": "0.8.19+commit.7dd6d404",
  "input": {
    "language": "Solidity",
    "sources": {
      "@ethereum-attestation-service/eas-contracts/contracts/Common.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// A representation of an empty/uninitialized UID.\nbytes32 constant EMPTY_UID = 0;\n\n// A zero expiration represents an non-expiring attestation.\nuint64 constant NO_EXPIRATION_TIME = 0;\n\nerror AccessDenied();\nerror DeadlineExpired();\nerror InvalidEAS();\nerror InvalidLength();\nerror InvalidSignature();\nerror NotFound();\n\n/// @notice A struct representing ECDSA signature data.\nstruct Signature {\n    uint8 v; // The recovery ID.\n    bytes32 r; // The x-coordinate of the nonce R.\n    bytes32 s; // The signature data.\n}\n\n/// @notice A struct representing a single attestation.\nstruct Attestation {\n    bytes32 uid; // A unique identifier of the attestation.\n    bytes32 schema; // The unique identifier of the schema.\n    uint64 time; // The time when the attestation was created (Unix timestamp).\n    uint64 expirationTime; // The time when the attestation expires (Unix timestamp).\n    uint64 revocationTime; // The time when the attestation was revoked (Unix timestamp).\n    bytes32 refUID; // The UID of the related attestation.\n    address recipient; // The recipient of the attestation.\n    address attester; // The attester/sender of the attestation.\n    bool revocable; // Whether the attestation is revocable.\n    bytes data; // Custom attestation data.\n}\n\n/// @notice A helper function to work with unchecked iterators in loops.\nfunction uncheckedInc(uint256 i) pure returns (uint256 j) {\n    unchecked {\n        j = i + 1;\n    }\n}\n"
      },
      "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { ISchemaRegistry } from \"./ISchemaRegistry.sol\";\nimport { ISemver } from \"./ISemver.sol\";\nimport { Attestation, Signature } from \"./Common.sol\";\n\n/// @notice A struct representing the arguments of the attestation request.\nstruct AttestationRequestData {\n    address recipient; // The recipient of the attestation.\n    uint64 expirationTime; // The time when the attestation expires (Unix timestamp).\n    bool revocable; // Whether the attestation is revocable.\n    bytes32 refUID; // The UID of the related attestation.\n    bytes data; // Custom attestation data.\n    uint256 value; // An explicit ETH amount to send to the resolver. This is important to prevent accidental user errors.\n}\n\n/// @notice A struct representing the full arguments of the attestation request.\nstruct AttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData data; // The arguments of the attestation request.\n}\n\n/// @notice A struct representing the full arguments of the full delegated attestation request.\nstruct DelegatedAttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData data; // The arguments of the attestation request.\n    Signature signature; // The ECDSA signature data.\n    address attester; // The attesting account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @notice A struct representing the full arguments of the multi attestation request.\nstruct MultiAttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData[] data; // The arguments of the attestation request.\n}\n\n/// @notice A struct representing the full arguments of the delegated multi attestation request.\nstruct MultiDelegatedAttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData[] data; // The arguments of the attestation requests.\n    Signature[] signatures; // The ECDSA signatures data. Please note that the signatures are assumed to be signed with increasing nonces.\n    address attester; // The attesting account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @notice A struct representing the arguments of the revocation request.\nstruct RevocationRequestData {\n    bytes32 uid; // The UID of the attestation to revoke.\n    uint256 value; // An explicit ETH amount to send to the resolver. This is important to prevent accidental user errors.\n}\n\n/// @notice A struct representing the full arguments of the revocation request.\nstruct RevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData data; // The arguments of the revocation request.\n}\n\n/// @notice A struct representing the arguments of the full delegated revocation request.\nstruct DelegatedRevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData data; // The arguments of the revocation request.\n    Signature signature; // The ECDSA signature data.\n    address revoker; // The revoking account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @notice A struct representing the full arguments of the multi revocation request.\nstruct MultiRevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData[] data; // The arguments of the revocation request.\n}\n\n/// @notice A struct representing the full arguments of the delegated multi revocation request.\nstruct MultiDelegatedRevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData[] data; // The arguments of the revocation requests.\n    Signature[] signatures; // The ECDSA signatures data. Please note that the signatures are assumed to be signed with increasing nonces.\n    address revoker; // The revoking account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @title IEAS\n/// @notice EAS - Ethereum Attestation Service interface.\ninterface IEAS is ISemver {\n    /// @notice Emitted when an attestation has been made.\n    /// @param recipient The recipient of the attestation.\n    /// @param attester The attesting account.\n    /// @param uid The UID of the new attestation.\n    /// @param schemaUID The UID of the schema.\n    event Attested(address indexed recipient, address indexed attester, bytes32 uid, bytes32 indexed schemaUID);\n\n    /// @notice Emitted when an attestation has been revoked.\n    /// @param recipient The recipient of the attestation.\n    /// @param attester The attesting account.\n    /// @param schemaUID The UID of the schema.\n    /// @param uid The UID the revoked attestation.\n    event Revoked(address indexed recipient, address indexed attester, bytes32 uid, bytes32 indexed schemaUID);\n\n    /// @notice Emitted when a data has been timestamped.\n    /// @param data The data.\n    /// @param timestamp The timestamp.\n    event Timestamped(bytes32 indexed data, uint64 indexed timestamp);\n\n    /// @notice Emitted when a data has been revoked.\n    /// @param revoker The address of the revoker.\n    /// @param data The data.\n    /// @param timestamp The timestamp.\n    event RevokedOffchain(address indexed revoker, bytes32 indexed data, uint64 indexed timestamp);\n\n    /// @notice Returns the address of the global schema registry.\n    /// @return The address of the global schema registry.\n    function getSchemaRegistry() external view returns (ISchemaRegistry);\n\n    /// @notice Attests to a specific schema.\n    /// @param request The arguments of the attestation request.\n    /// @return The UID of the new attestation.\n    ///\n    /// Example:\n    ///     attest({\n    ///         schema: \"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\",\n    ///         data: {\n    ///             recipient: \"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\",\n    ///             expirationTime: 0,\n    ///             revocable: true,\n    ///             refUID: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    ///             data: \"0xF00D\",\n    ///             value: 0\n    ///         }\n    ///     })\n    function attest(AttestationRequest calldata request) external payable returns (bytes32);\n\n    /// @notice Attests to a specific schema via the provided ECDSA signature.\n    /// @param delegatedRequest The arguments of the delegated attestation request.\n    /// @return The UID of the new attestation.\n    ///\n    /// Example:\n    ///     attestByDelegation({\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: {\n    ///             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n    ///             expirationTime: 1673891048,\n    ///             revocable: true,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x1234',\n    ///             value: 0\n    ///         },\n    ///         signature: {\n    ///             v: 28,\n    ///             r: '0x148c...b25b',\n    ///             s: '0x5a72...be22'\n    ///         },\n    ///         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',\n    ///         deadline: 1673891048\n    ///     })\n    function attestByDelegation(\n        DelegatedAttestationRequest calldata delegatedRequest\n    ) external payable returns (bytes32);\n\n    /// @notice Attests to multiple schemas.\n    /// @param multiRequests The arguments of the multi attestation requests. The requests should be grouped by distinct\n    ///     schema ids to benefit from the best batching optimization.\n    /// @return The UIDs of the new attestations.\n    ///\n    /// Example:\n    ///     multiAttest([{\n    ///         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',\n    ///         data: [{\n    ///             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n    ///             expirationTime: 1673891048,\n    ///             revocable: true,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x1234',\n    ///             value: 1000\n    ///         },\n    ///         {\n    ///             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n    ///             expirationTime: 0,\n    ///             revocable: false,\n    ///             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',\n    ///             data: '0x00',\n    ///             value: 0\n    ///         }],\n    ///     },\n    ///     {\n    ///         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n    ///         data: [{\n    ///             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n    ///             expirationTime: 0,\n    ///             revocable: true,\n    ///             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',\n    ///             data: '0x12345678',\n    ///             value: 0\n    ///         },\n    ///     }])\n    function multiAttest(MultiAttestationRequest[] calldata multiRequests) external payable returns (bytes32[] memory);\n\n    /// @notice Attests to multiple schemas using via provided ECDSA signatures.\n    /// @param multiDelegatedRequests The arguments of the delegated multi attestation requests. The requests should be\n    ///     grouped by distinct schema ids to benefit from the best batching optimization.\n    /// @return The UIDs of the new attestations.\n    ///\n    /// Example:\n    ///     multiAttestByDelegation([{\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: [{\n    ///             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n    ///             expirationTime: 1673891048,\n    ///             revocable: true,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x1234',\n    ///             value: 0\n    ///         },\n    ///         {\n    ///             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n    ///             expirationTime: 0,\n    ///             revocable: false,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x00',\n    ///             value: 0\n    ///         }],\n    ///         signatures: [{\n    ///             v: 28,\n    ///             r: '0x148c...b25b',\n    ///             s: '0x5a72...be22'\n    ///         },\n    ///         {\n    ///             v: 28,\n    ///             r: '0x487s...67bb',\n    ///             s: '0x12ad...2366'\n    ///         }],\n    ///         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',\n    ///         deadline: 1673891048\n    ///     }])\n    function multiAttestByDelegation(\n        MultiDelegatedAttestationRequest[] calldata multiDelegatedRequests\n    ) external payable returns (bytes32[] memory);\n\n    /// @notice Revokes an existing attestation to a specific schema.\n    /// @param request The arguments of the revocation request.\n    ///\n    /// Example:\n    ///     revoke({\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: {\n    ///             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',\n    ///             value: 0\n    ///         }\n    ///     })\n    function revoke(RevocationRequest calldata request) external payable;\n\n    /// @notice Revokes an existing attestation to a specific schema via the provided ECDSA signature.\n    /// @param delegatedRequest The arguments of the delegated revocation request.\n    ///\n    /// Example:\n    ///     revokeByDelegation({\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: {\n    ///             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',\n    ///             value: 0\n    ///         },\n    ///         signature: {\n    ///             v: 27,\n    ///             r: '0xb593...7142',\n    ///             s: '0x0f5b...2cce'\n    ///         },\n    ///         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n    ///         deadline: 1673891048\n    ///     })\n    function revokeByDelegation(DelegatedRevocationRequest calldata delegatedRequest) external payable;\n\n    /// @notice Revokes existing attestations to multiple schemas.\n    /// @param multiRequests The arguments of the multi revocation requests. The requests should be grouped by distinct\n    ///     schema ids to benefit from the best batching optimization.\n    ///\n    /// Example:\n    ///     multiRevoke([{\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: [{\n    ///             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n    ///             value: 1000\n    ///         },\n    ///         {\n    ///             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n    ///             value: 0\n    ///         }],\n    ///     },\n    ///     {\n    ///         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n    ///         data: [{\n    ///             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',\n    ///             value: 0\n    ///         },\n    ///     }])\n    function multiRevoke(MultiRevocationRequest[] calldata multiRequests) external payable;\n\n    /// @notice Revokes existing attestations to multiple schemas via provided ECDSA signatures.\n    /// @param multiDelegatedRequests The arguments of the delegated multi revocation attestation requests. The requests\n    ///     should be grouped by distinct schema ids to benefit from the best batching optimization.\n    ///\n    /// Example:\n    ///     multiRevokeByDelegation([{\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: [{\n    ///             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n    ///             value: 1000\n    ///         },\n    ///         {\n    ///             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n    ///             value: 0\n    ///         }],\n    ///         signatures: [{\n    ///             v: 28,\n    ///             r: '0x148c...b25b',\n    ///             s: '0x5a72...be22'\n    ///         },\n    ///         {\n    ///             v: 28,\n    ///             r: '0x487s...67bb',\n    ///             s: '0x12ad...2366'\n    ///         }],\n    ///         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n    ///         deadline: 1673891048\n    ///     }])\n    function multiRevokeByDelegation(\n        MultiDelegatedRevocationRequest[] calldata multiDelegatedRequests\n    ) external payable;\n\n    /// @notice Timestamps the specified bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was timestamped with.\n    function timestamp(bytes32 data) external returns (uint64);\n\n    /// @notice Timestamps the specified multiple bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was timestamped with.\n    function multiTimestamp(bytes32[] calldata data) external returns (uint64);\n\n    /// @notice Revokes the specified bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was revoked with.\n    function revokeOffchain(bytes32 data) external returns (uint64);\n\n    /// @notice Revokes the specified multiple bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was revoked with.\n    function multiRevokeOffchain(bytes32[] calldata data) external returns (uint64);\n\n    /// @notice Returns an existing attestation by UID.\n    /// @param uid The UID of the attestation to retrieve.\n    /// @return The attestation data members.\n    function getAttestation(bytes32 uid) external view returns (Attestation memory);\n\n    /// @notice Checks whether an attestation exists.\n    /// @param uid The UID of the attestation to retrieve.\n    /// @return Whether an attestation exists.\n    function isAttestationValid(bytes32 uid) external view returns (bool);\n\n    /// @notice Returns the timestamp that the specified data was timestamped with.\n    /// @param data The data to query.\n    /// @return The timestamp the data was timestamped with.\n    function getTimestamp(bytes32 data) external view returns (uint64);\n\n    /// @notice Returns the timestamp that the specified data was timestamped with.\n    /// @param data The data to query.\n    /// @return The timestamp the data was timestamped with.\n    function getRevokeOffchain(address revoker, bytes32 data) external view returns (uint64);\n}\n"
      },
      "@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { ISemver } from \"./ISemver.sol\";\n\nimport { ISchemaResolver } from \"./resolver/ISchemaResolver.sol\";\n\n/// @notice A struct representing a record for a submitted schema.\nstruct SchemaRecord {\n    bytes32 uid; // The unique identifier of the schema.\n    ISchemaResolver resolver; // Optional schema resolver.\n    bool revocable; // Whether the schema allows revocations explicitly.\n    string schema; // Custom specification of the schema (e.g., an ABI).\n}\n\n/// @title ISchemaRegistry\n/// @notice The interface of global attestation schemas for the Ethereum Attestation Service protocol.\ninterface ISchemaRegistry is ISemver {\n    /// @notice Emitted when a new schema has been registered\n    /// @param uid The schema UID.\n    /// @param registerer The address of the account used to register the schema.\n    /// @param schema The schema data.\n    event Registered(bytes32 indexed uid, address indexed registerer, SchemaRecord schema);\n\n    /// @notice Submits and reserves a new schema\n    /// @param schema The schema data schema.\n    /// @param resolver An optional schema resolver.\n    /// @param revocable Whether the schema allows revocations explicitly.\n    /// @return The UID of the new schema.\n    function register(string calldata schema, ISchemaResolver resolver, bool revocable) external returns (bytes32);\n\n    /// @notice Returns an existing schema by UID\n    /// @param uid The UID of the schema to retrieve.\n    /// @return The schema data members.\n    function getSchema(bytes32 uid) external view returns (SchemaRecord memory);\n}\n"
      },
      "@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title ISemver\n/// @notice A semver interface.\ninterface ISemver {\n    /// @notice Returns the full semver contract version.\n    /// @return Semver contract version as a string.\n    function version() external view returns (string memory);\n}\n"
      },
      "@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { ISemver } from \"../ISemver.sol\";\nimport { Attestation } from \"../Common.sol\";\n\n/// @title ISchemaResolver\n/// @notice The interface of an optional schema resolver.\ninterface ISchemaResolver is ISemver {\n    /// @notice Checks if the resolver can be sent ETH.\n    /// @return Whether the resolver supports ETH transfers.\n    function isPayable() external pure returns (bool);\n\n    /// @notice Processes an attestation and verifies whether it's valid.\n    /// @param attestation The new attestation.\n    /// @return Whether the attestation is valid.\n    function attest(Attestation calldata attestation) external payable returns (bool);\n\n    /// @notice Processes multiple attestations and verifies whether they are valid.\n    /// @param attestations The new attestations.\n    /// @param values Explicit ETH amounts which were sent with each attestation.\n    /// @return Whether all the attestations are valid.\n    function multiAttest(\n        Attestation[] calldata attestations,\n        uint256[] calldata values\n    ) external payable returns (bool);\n\n    /// @notice Processes an attestation revocation and verifies if it can be revoked.\n    /// @param attestation The existing attestation to be revoked.\n    /// @return Whether the attestation can be revoked.\n    function revoke(Attestation calldata attestation) external payable returns (bool);\n\n    /// @notice Processes revocation of multiple attestation and verifies they can be revoked.\n    /// @param attestations The existing attestations to be revoked.\n    /// @param values Explicit ETH amounts which were sent with each revocation.\n    /// @return Whether the attestations can be revoked.\n    function multiRevoke(\n        Attestation[] calldata attestations,\n        uint256[] calldata values\n    ) external payable returns (bool);\n}\n"
      },
      "contracts/Common.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\nuint256 constant MAX_ATTACHED_BADGE_NUM = 48;\n\nstring constant SCROLL_BADGE_SCHEMA = \"address badge, bytes payload\";\n\nfunction decodeBadgeData(bytes memory data) pure returns (address, bytes memory) {\n    return abi.decode(data, (address, bytes));\n}\n"
      },
      "contracts/Errors.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\nerror Unauthorized();\nerror CannotUpgrade(bytes32 uid);\n\n// attestation errors\n// note: these don't include the uid since it is not known prior to the attestation.\nerror BadgeNotAllowed(address badge);\nerror BadgeNotFound(address badge);\nerror ExpirationDisabled();\nerror MissingPayload();\nerror ResolverPaymentsDisabled();\nerror RevocationDisabled();\nerror SingletonBadge();\nerror UnknownSchema();\n\n// query errors\nerror AttestationBadgeMismatch(bytes32 uid);\nerror AttestationExpired(bytes32 uid);\nerror AttestationNotFound(bytes32 uid);\nerror AttestationOwnerMismatch(bytes32 uid);\nerror AttestationRevoked(bytes32 uid);\nerror AttestationSchemaMismatch(bytes32 uid);\n\n// profile errors\nerror BadgeCountReached();\nerror LengthMismatch();\nerror TokenNotOwnedByUser(address token, uint256 tokenId);\n\n// profile registry errors\nerror CallerIsNotUserProfile();\nerror DuplicatedUsername();\nerror ExpiredSignature();\nerror ImplementationNotContract();\nerror InvalidReferrer();\nerror InvalidSignature();\nerror InvalidUsername();\nerror MsgValueMismatchWithMintFee();\nerror ProfileAlreadyMinted();\n"
      },
      "contracts/extensions/IScrollBadgeUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\n/// @title IScrollBadgeUpgradeable\n/// @notice This interface defines functions to facilitate badge upgrades.\ninterface IScrollBadgeUpgradeable {\n    /// @notice Checks if a badge can be upgraded.\n    /// @param uid The unique identifier of the badge.\n    /// @return True if the badge can be upgraded, false otherwise.\n    function canUpgrade(bytes32 uid) external view returns (bool);\n\n    /// @notice Upgrades a badge.\n    /// @param uid The unique identifier of the badge.\n    /// @dev Should revert with CannotUpgrade (from Errors.sol) if the badge cannot be upgraded.\n    /// @dev Should emit an Upgrade event (custom defined) if the upgrade is successful.\n    function upgrade(bytes32 uid) external;\n}\n"
      },
      "contracts/extensions/ScrollBadgeDefaultURI.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\nimport {ScrollBadge} from \"../ScrollBadge.sol\";\n\n/// @title ScrollBadgeDefaultURI\n/// @notice This contract sets a default badge URI.\nabstract contract ScrollBadgeDefaultURI is ScrollBadge {\n    string public defaultBadgeURI;\n\n    constructor(string memory _defaultBadgeURI) {\n        defaultBadgeURI = _defaultBadgeURI;\n    }\n\n    /// @inheritdoc ScrollBadge\n    function badgeTokenURI(bytes32 uid) public view override returns (string memory) {\n        if (uid == bytes32(0)) {\n            return defaultBadgeURI;\n        }\n\n        return getBadgeTokenURI(uid);\n    }\n\n    /// @notice Returns the token URI corresponding to a certain badge UID.\n    /// @param {uid} The badge UID.\n    /// @return The badge token URI (same format as ERC721).\n    function getBadgeTokenURI(bytes32) internal view virtual returns (string memory) {\n        return defaultBadgeURI;\n    }\n}\n"
      },
      "contracts/extensions/ScrollBadgeEligibilityCheck.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\nimport {ScrollBadge} from \"../ScrollBadge.sol\";\n\n/// @title ScrollBadgeEligibilityCheck\n/// @notice This contract adds a standard on-chain eligibility check API.\nabstract contract ScrollBadgeEligibilityCheck is ScrollBadge {\n    /// @notice Check if user is eligible to mint this badge.\n    /// @param recipient The user's wallet address.\n    /// @return Whether the user is eligible to mint.\n    function isEligible(address recipient) external virtual returns (bool) {\n        return !hasBadge(recipient);\n    }\n}\n"
      },
      "contracts/extensions/ScrollBadgeNoExpiry.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\nimport {Attestation} from \"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\";\nimport {NO_EXPIRATION_TIME} from \"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\";\n\nimport {ScrollBadge} from \"../ScrollBadge.sol\";\nimport {ExpirationDisabled} from \"../Errors.sol\";\n\n/// @title ScrollBadgeNoExpiry\n/// @notice This contract disables expiration for this badge.\nabstract contract ScrollBadgeNoExpiry is ScrollBadge {\n    /// @inheritdoc ScrollBadge\n    function onIssueBadge(Attestation calldata attestation) internal virtual override returns (bool) {\n        if (!super.onIssueBadge(attestation)) {\n            return false;\n        }\n\n        if (attestation.expirationTime != NO_EXPIRATION_TIME) {\n            revert ExpirationDisabled();\n        }\n\n        return true;\n    }\n\n    /// @inheritdoc ScrollBadge\n    function onRevokeBadge(Attestation calldata attestation) internal virtual override returns (bool) {\n        return super.onRevokeBadge(attestation);\n    }\n}\n"
      },
      "contracts/extensions/ScrollBadgeSelfAttest.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\n// import {Attestation} from \"@eas/contracts/IEAS.sol\";\nimport {Attestation} from '@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol';\n\nimport {ScrollBadge} from \"../ScrollBadge.sol\";\nimport {Unauthorized} from \"../Errors.sol\";\n\n/// @title ScrollBadgeSelfAttest\n/// @notice This contract ensures that only the badge recipient can attest.\nabstract contract ScrollBadgeSelfAttest is ScrollBadge {\n    /// @inheritdoc ScrollBadge\n    function onIssueBadge(Attestation calldata attestation) internal virtual override returns (bool) {\n        if (!super.onIssueBadge(attestation)) {\n            return false;\n        }\n\n        if (attestation.recipient != attestation.attester) {\n            revert Unauthorized();\n        }\n\n        return true;\n    }\n\n    /// @inheritdoc ScrollBadge\n    function onRevokeBadge(Attestation calldata attestation) internal virtual override returns (bool) {\n        return super.onRevokeBadge(attestation);\n    }\n}\n"
      },
      "contracts/extensions/ScrollBadgeSingleton.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\n// import {Attestation} from \"@eas/contracts/IEAS.sol\";\nimport {Attestation} from '@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol';\n\nimport {ScrollBadge} from \"../ScrollBadge.sol\";\nimport {SingletonBadge} from \"../Errors.sol\";\n\n/// @title ScrollBadgeSingleton\n/// @notice This contract only allows one active badge per wallet.\nabstract contract ScrollBadgeSingleton is ScrollBadge {\n    /// @inheritdoc ScrollBadge\n    function onIssueBadge(Attestation calldata attestation) internal virtual override returns (bool) {\n        if (!super.onIssueBadge(attestation)) {\n            return false;\n        }\n\n        if (hasBadge(attestation.recipient)) {\n            revert SingletonBadge();\n        }\n\n        return true;\n    }\n\n    /// @inheritdoc ScrollBadge\n    function onRevokeBadge(Attestation calldata attestation) internal virtual override returns (bool) {\n        return super.onRevokeBadge(attestation);\n    }\n}\n"
      },
      "contracts/IScrollBadge.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\n// import {Attestation} from \"@eas/contracts/IEAS.sol\";\nimport {Attestation} from '@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol';\n\ninterface IScrollBadge {\n    event IssueBadge(bytes32 indexed uid);\n    event RevokeBadge(bytes32 indexed uid);\n\n    /// @notice A resolver callback invoked in the `issueBadge` function in the parent contract.\n    /// @param attestation The new attestation.\n    /// @return Whether the attestation is valid.\n    function issueBadge(Attestation calldata attestation) external returns (bool);\n\n    /// @notice A resolver callback invoked in the `revokeBadge` function in the parent contract.\n    /// @param attestation The new attestation.\n    /// @return Whether the attestation can be revoked.\n    function revokeBadge(Attestation calldata attestation) external returns (bool);\n\n    /// @notice Validate and return a Scroll badge attestation.\n    /// @param uid The attestation UID.\n    /// @return The attestation.\n    function getAndValidateBadge(bytes32 uid) external view returns (Attestation memory);\n\n    /// @notice Returns the token URI corresponding to a certain badge UID, or the default\n    ///         badge token URI if the pass UID is 0x0.\n    /// @param uid The badge UID, or 0x0.\n    /// @return The badge token URI (same format as ERC721).\n    function badgeTokenURI(bytes32 uid) external view returns (string memory);\n\n    /// @notice Returns true if the user has one or more of this badge.\n    /// @param user The user's wallet address.\n    /// @return True if the user has one or more of this badge.\n    function hasBadge(address user) external view returns (bool);\n}\n"
      },
      "contracts/IScrollBadgeResolver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\n// import {Attestation} from \"@eas/contracts/IEAS.sol\";\nimport {Attestation} from '@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol';\n\ninterface IScrollBadgeResolver {\n    /**\n     *\n     * Events *\n     *\n     */\n\n    /// @dev Emitted when a new badge is issued.\n    /// @param uid The UID of the new badge attestation.\n    event IssueBadge(bytes32 indexed uid);\n\n    /// @dev Emitted when a badge is revoked.\n    /// @param uid The UID of the revoked badge attestation.\n    event RevokeBadge(bytes32 indexed uid);\n\n    /// @dev Emitted when the auto-attach status of a badge is updated.\n    /// @param badge The address of the badge contract.\n    /// @param enable Auto-attach was enabled if true, disabled if false.\n    event UpdateAutoAttachWhitelist(address indexed badge, bool indexed enable);\n\n    /**\n     *\n     * Public View Functions *\n     *\n     */\n\n    /// @notice Return the Scroll badge attestation schema.\n    /// @return The GUID of the Scroll badge attestation schema.\n    function schema() external returns (bytes32);\n\n    /// @notice The profile registry contract.\n    /// @return The address of the profile registry.\n    function registry() external returns (address);\n\n    /// @notice The global EAS contract.\n    /// @return The address of the global EAS contract.\n    function eas() external returns (address);\n\n    /// @notice Validate and return a Scroll badge attestation.\n    /// @param uid The attestation UID.\n    /// @return The attestation.\n    function getAndValidateBadge(bytes32 uid) external view returns (Attestation memory);\n}\n"
      },
      "contracts/ScrollBadge.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\n// import {Attestation} from \"@eas/contracts/IEAS.sol\";\n\nimport {Attestation} from '@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol';\n\nimport {decodeBadgeData} from \"./Common.sol\";\nimport {IScrollBadge} from \"./IScrollBadge.sol\";\nimport {IScrollBadgeResolver} from \"./IScrollBadgeResolver.sol\";\nimport {AttestationBadgeMismatch, Unauthorized} from \"./Errors.sol\";\n\n/// @title ScrollBadge\n/// @notice This contract implements the basic functionalities of a Scroll badge.\n///         It serves as the base contract for more complex badge functionalities.\nabstract contract ScrollBadge is IScrollBadge {\n    // The global Scroll badge resolver contract.\n    address public immutable resolver;\n\n    // wallet address => badge count\n    mapping(address => uint256) private _userBadgeCount;\n\n    /// @dev Creates a new ScrollBadge instance.\n    /// @param resolver_ The address of the global Scroll badge resolver contract.\n    constructor(address resolver_) {\n        resolver = resolver_;\n    }\n\n    /// @inheritdoc IScrollBadge\n    function issueBadge(Attestation calldata attestation) public returns (bool) {\n        // only callable from resolver\n        if (msg.sender != address(resolver)) {\n            revert Unauthorized();\n        }\n\n        // delegate logic to subcontract\n        if (!onIssueBadge(attestation)) {\n            return false;\n        }\n\n        _userBadgeCount[attestation.recipient] += 1;\n\n        emit IssueBadge(attestation.uid);\n        return true;\n    }\n\n    /// @inheritdoc IScrollBadge\n    function revokeBadge(Attestation calldata attestation) public returns (bool) {\n        // only callable from resolver\n        if (msg.sender != address(resolver)) {\n            revert Unauthorized();\n        }\n\n        // delegate logic to subcontract\n        if (!onRevokeBadge(attestation)) {\n            return false;\n        }\n\n        _userBadgeCount[attestation.recipient] -= 1;\n\n        emit RevokeBadge(attestation.uid);\n        return true;\n    }\n\n    /// @notice A resolver callback that should be implemented by child contracts.\n    /// @param {attestation} The new attestation.\n    /// @return Whether the attestation is valid.\n    function onIssueBadge(Attestation calldata /*attestation*/ ) internal virtual returns (bool) {\n        return true;\n    }\n\n    /// @notice A resolver callback that should be implemented by child contracts.\n    /// @param {attestation} The existing attestation to be revoked.\n    /// @return Whether the attestation can be revoked.\n    function onRevokeBadge(Attestation calldata /*attestation*/ ) internal virtual returns (bool) {\n        return true;\n    }\n\n    /// @inheritdoc IScrollBadge\n    function getAndValidateBadge(bytes32 uid) public view returns (Attestation memory) {\n        Attestation memory attestation = IScrollBadgeResolver(resolver).getAndValidateBadge(uid);\n\n        (address badge,) = decodeBadgeData(attestation.data);\n\n        if (badge != address(this)) {\n            revert AttestationBadgeMismatch(uid);\n        }\n\n        return attestation;\n    }\n\n    /// @inheritdoc IScrollBadge\n    function badgeTokenURI(bytes32 uid) public view virtual returns (string memory);\n\n    /// @inheritdoc IScrollBadge\n    function hasBadge(address user) public view virtual returns (bool) {\n        return _userBadgeCount[user] > 0;\n    }\n}\n"
      },
      "contracts/ScrollBadgePermissionless.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.19;\n\n// import {Attestation} from \"@eas/contracts/IEAS.sol\";\nimport {Attestation} from '@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol';\n\nimport {ScrollBadge} from \"./ScrollBadge.sol\";\nimport {ScrollBadgeDefaultURI} from \"./extensions/ScrollBadgeDefaultURI.sol\";\nimport {ScrollBadgeEligibilityCheck} from \"./extensions/ScrollBadgeEligibilityCheck.sol\";\nimport {ScrollBadgeSelfAttest} from \"./extensions/ScrollBadgeSelfAttest.sol\";\nimport {ScrollBadgeSingleton} from \"./extensions/ScrollBadgeSingleton.sol\";\n\n/// @title ScrollBadgePermissionless\n/// @notice A simple badge that anyone can mint in a permissionless manner.\ncontract ScrollBadgePermissionless is\n    ScrollBadgeDefaultURI,\n    ScrollBadgeEligibilityCheck,\n    ScrollBadgeSelfAttest,\n    ScrollBadgeSingleton\n{\n    constructor(address resolver_, string memory _defaultBadgeURI)\n        ScrollBadge(resolver_)\n        ScrollBadgeDefaultURI(_defaultBadgeURI)\n    {\n        // empty\n    }\n\n    /// @inheritdoc ScrollBadge\n    function onIssueBadge(Attestation calldata attestation)\n        internal\n        virtual\n        override (ScrollBadge, ScrollBadgeSelfAttest, ScrollBadgeSingleton)\n        returns (bool)\n    {\n        return super.onIssueBadge(attestation);\n    }\n\n    /// @inheritdoc ScrollBadge\n    function onRevokeBadge(Attestation calldata attestation)\n        internal\n        virtual\n        override (ScrollBadge, ScrollBadgeSelfAttest, ScrollBadgeSingleton)\n        returns (bool)\n    {\n        return super.onRevokeBadge(attestation);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@ethereum-attestation-service/eas-contracts/contracts/Common.sol": {
        "ast": {
          "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/Common.sol",
          "exportedSymbols": {
            "AccessDenied": [
              9
            ],
            "Attestation": [
              47
            ],
            "DeadlineExpired": [
              11
            ],
            "EMPTY_UID": [
              4
            ],
            "InvalidEAS": [
              13
            ],
            "InvalidLength": [
              15
            ],
            "InvalidSignature": [
              17
            ],
            "NO_EXPIRATION_TIME": [
              7
            ],
            "NotFound": [
              19
            ],
            "Signature": [
              26
            ],
            "uncheckedInc": [
              63
            ]
          },
          "id": 64,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "constant": true,
              "id": 4,
              "mutability": "constant",
              "name": "EMPTY_UID",
              "nameLocation": "126:9:0",
              "nodeType": "VariableDeclaration",
              "scope": 64,
              "src": "109:30:0",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              },
              "typeName": {
                "id": 2,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "109:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "value": {
                "hexValue": "30",
                "id": 3,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "138:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 7,
              "mutability": "constant",
              "name": "NO_EXPIRATION_TIME",
              "nameLocation": "219:18:0",
              "nodeType": "VariableDeclaration",
              "scope": 64,
              "src": "203:38:0",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              },
              "typeName": {
                "id": 5,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "203:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "value": {
                "hexValue": "30",
                "id": 6,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "240:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0"
              },
              "visibility": "internal"
            },
            {
              "errorSelector": "4ca88867",
              "id": 9,
              "name": "AccessDenied",
              "nameLocation": "250:12:0",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 8,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "262:2:0"
              },
              "src": "244:21:0"
            },
            {
              "errorSelector": "1ab7da6b",
              "id": 11,
              "name": "DeadlineExpired",
              "nameLocation": "272:15:0",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 10,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "287:2:0"
              },
              "src": "266:24:0"
            },
            {
              "errorSelector": "83780ffe",
              "id": 13,
              "name": "InvalidEAS",
              "nameLocation": "297:10:0",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 12,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "307:2:0"
              },
              "src": "291:19:0"
            },
            {
              "errorSelector": "947d5a84",
              "id": 15,
              "name": "InvalidLength",
              "nameLocation": "317:13:0",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 14,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "330:2:0"
              },
              "src": "311:22:0"
            },
            {
              "errorSelector": "8baa579f",
              "id": 17,
              "name": "InvalidSignature",
              "nameLocation": "340:16:0",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 16,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "356:2:0"
              },
              "src": "334:25:0"
            },
            {
              "errorSelector": "c5723b51",
              "id": 19,
              "name": "NotFound",
              "nameLocation": "366:8:0",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 18,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "374:2:0"
              },
              "src": "360:17:0"
            },
            {
              "canonicalName": "Signature",
              "id": 26,
              "members": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "464:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "458:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "499:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "491:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "550:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "542:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Signature",
              "nameLocation": "442:9:0",
              "nodeType": "StructDefinition",
              "scope": 64,
              "src": "435:142:0",
              "visibility": "public"
            },
            {
              "canonicalName": "Attestation",
              "id": 47,
              "members": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "668:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "660:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "728:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "720:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "787:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "780:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "expirationTime",
                  "nameLocation": "867:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "860:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "revocationTime",
                  "nameLocation": "953:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "946:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "refUID",
                  "nameLocation": "1044:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1036:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1103:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1095:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "attester",
                  "nameLocation": "1163:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1155:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "revocable",
                  "nameLocation": "1225:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1220:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1287:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1281:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Attestation",
              "nameLocation": "642:11:0",
              "nodeType": "StructDefinition",
              "scope": 64,
              "src": "635:687:0",
              "visibility": "public"
            },
            {
              "body": {
                "id": 62,
                "nodeType": "Block",
                "src": "1455:44:0",
                "statements": [
                  {
                    "id": 61,
                    "nodeType": "UncheckedBlock",
                    "src": "1461:36:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 55,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1481:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 56,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "1485:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1489:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1485:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1481:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60,
                        "nodeType": "ExpressionStatement",
                        "src": "1481:9:0"
                      }
                    ]
                  }
                ]
              },
              "documentation": {
                "id": 48,
                "nodeType": "StructuredDocumentation",
                "src": "1324:73:0",
                "text": "@notice A helper function to work with unchecked iterators in loops."
              },
              "id": 63,
              "implemented": true,
              "kind": "freeFunction",
              "modifiers": [],
              "name": "uncheckedInc",
              "nameLocation": "1406:12:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 51,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 50,
                    "mutability": "mutable",
                    "name": "i",
                    "nameLocation": "1427:1:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 63,
                    "src": "1419:9:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 49,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1419:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1418:11:0"
              },
              "returnParameters": {
                "id": 54,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 53,
                    "mutability": "mutable",
                    "name": "j",
                    "nameLocation": "1452:1:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 63,
                    "src": "1444:9:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 52,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1444:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1443:11:0"
              },
              "scope": 64,
              "src": "1397:102:0",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            }
          ],
          "src": "33:1467:0"
        },
        "id": 0
      },
      "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol": {
        "ast": {
          "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
          "exportedSymbols": {
            "Attestation": [
              47
            ],
            "AttestationRequest": [
              91
            ],
            "AttestationRequestData": [
              85
            ],
            "DelegatedAttestationRequest": [
              104
            ],
            "DelegatedRevocationRequest": [
              150
            ],
            "IEAS": [
              360
            ],
            "ISchemaRegistry": [
              412
            ],
            "ISemver": [
              422
            ],
            "MultiAttestationRequest": [
              111
            ],
            "MultiDelegatedAttestationRequest": [
              126
            ],
            "MultiDelegatedRevocationRequest": [
              172
            ],
            "MultiRevocationRequest": [
              157
            ],
            "RevocationRequest": [
              137
            ],
            "RevocationRequestData": [
              131
            ],
            "Signature": [
              26
            ]
          },
          "id": 361,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 65,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol",
              "file": "./ISchemaRegistry.sol",
              "id": 67,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 361,
              "sourceUnit": 413,
              "src": "58:56:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 66,
                    "name": "ISchemaRegistry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 412,
                    "src": "67:15:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol",
              "file": "./ISemver.sol",
              "id": 69,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 361,
              "sourceUnit": 423,
              "src": "115:40:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 68,
                    "name": "ISemver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 422,
                    "src": "124:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/Common.sol",
              "file": "./Common.sol",
              "id": 72,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 361,
              "sourceUnit": 64,
              "src": "156:54:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 70,
                    "name": "Attestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "165:11:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 71,
                    "name": "Signature",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "178:9:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "canonicalName": "AttestationRequestData",
              "id": 85,
              "members": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "332:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "324:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "expirationTime",
                  "nameLocation": "391:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "384:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "revocable",
                  "nameLocation": "475:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "470:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "refUID",
                  "nameLocation": "539:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "531:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "596:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "590:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "642:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "634:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "AttestationRequestData",
              "nameLocation": "295:22:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "288:466:1",
              "visibility": "public"
            },
            {
              "canonicalName": "AttestationRequest",
              "id": 91,
              "members": [
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "877:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "869:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "952:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "929:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AttestationRequestData_$85_storage_ptr",
                    "typeString": "struct AttestationRequestData"
                  },
                  "typeName": {
                    "id": 89,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88,
                      "name": "AttestationRequestData",
                      "nameLocations": [
                        "929:22:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 85,
                      "src": "929:22:1"
                    },
                    "referencedDeclaration": 85,
                    "src": "929:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationRequestData_$85_storage_ptr",
                      "typeString": "struct AttestationRequestData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "AttestationRequest",
              "nameLocation": "844:18:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "837:167:1",
              "visibility": "public"
            },
            {
              "canonicalName": "DelegatedAttestationRequest",
              "id": 104,
              "members": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "1151:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1143:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1226:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1203:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AttestationRequestData_$85_storage_ptr",
                    "typeString": "struct AttestationRequestData"
                  },
                  "typeName": {
                    "id": 95,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 94,
                      "name": "AttestationRequestData",
                      "nameLocations": [
                        "1203:22:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 85,
                      "src": "1203:22:1"
                    },
                    "referencedDeclaration": 85,
                    "src": "1203:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationRequestData_$85_storage_ptr",
                      "typeString": "struct AttestationRequestData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1291:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1281:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Signature_$26_storage_ptr",
                    "typeString": "struct Signature"
                  },
                  "typeName": {
                    "id": 98,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 97,
                      "name": "Signature",
                      "nameLocations": [
                        "1281:9:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26,
                      "src": "1281:9:1"
                    },
                    "referencedDeclaration": 26,
                    "src": "1281:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Signature_$26_storage_ptr",
                      "typeString": "struct Signature"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "attester",
                  "nameLocation": "1343:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1335:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1390:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1383:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "DelegatedAttestationRequest",
              "nameLocation": "1109:27:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "1102:341:1",
              "visibility": "public"
            },
            {
              "canonicalName": "MultiAttestationRequest",
              "id": 111,
              "members": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "1577:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1569:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1654:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1629:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AttestationRequestData_$85_storage_$dyn_storage_ptr",
                    "typeString": "struct AttestationRequestData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 108,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 107,
                        "name": "AttestationRequestData",
                        "nameLocations": [
                          "1629:22:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 85,
                        "src": "1629:22:1"
                      },
                      "referencedDeclaration": 85,
                      "src": "1629:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationRequestData_$85_storage_ptr",
                        "typeString": "struct AttestationRequestData"
                      }
                    },
                    "id": 109,
                    "nodeType": "ArrayTypeName",
                    "src": "1629:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationRequestData_$85_storage_$dyn_storage_ptr",
                      "typeString": "struct AttestationRequestData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "MultiAttestationRequest",
              "nameLocation": "1539:23:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "1532:174:1",
              "visibility": "public"
            },
            {
              "canonicalName": "MultiDelegatedAttestationRequest",
              "id": 126,
              "members": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "1859:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "1851:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1851:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1936:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "1911:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AttestationRequestData_$85_storage_$dyn_storage_ptr",
                    "typeString": "struct AttestationRequestData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 114,
                        "name": "AttestationRequestData",
                        "nameLocations": [
                          "1911:22:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 85,
                        "src": "1911:22:1"
                      },
                      "referencedDeclaration": 85,
                      "src": "1911:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationRequestData_$85_storage_ptr",
                        "typeString": "struct AttestationRequestData"
                      }
                    },
                    "id": 116,
                    "nodeType": "ArrayTypeName",
                    "src": "1911:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationRequestData_$85_storage_$dyn_storage_ptr",
                      "typeString": "struct AttestationRequestData[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "2004:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "1992:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Signature_$26_storage_$dyn_storage_ptr",
                    "typeString": "struct Signature[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 119,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 118,
                        "name": "Signature",
                        "nameLocations": [
                          "1992:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 26,
                        "src": "1992:9:1"
                      },
                      "referencedDeclaration": 26,
                      "src": "1992:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Signature_$26_storage_ptr",
                        "typeString": "struct Signature"
                      }
                    },
                    "id": 120,
                    "nodeType": "ArrayTypeName",
                    "src": "1992:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Signature_$26_storage_$dyn_storage_ptr",
                      "typeString": "struct Signature[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "attester",
                  "nameLocation": "2139:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "2131:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "2186:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "2179:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "MultiDelegatedAttestationRequest",
              "nameLocation": "1812:32:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "1805:434:1",
              "visibility": "public"
            },
            {
              "canonicalName": "RevocationRequestData",
              "id": 131,
              "members": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "2359:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2351:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2417:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2409:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2409:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "RevocationRequestData",
              "nameLocation": "2323:21:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "2316:213:1",
              "visibility": "public"
            },
            {
              "canonicalName": "RevocationRequest",
              "id": 137,
              "members": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "2650:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2642:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2724:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2702:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RevocationRequestData_$131_storage_ptr",
                    "typeString": "struct RevocationRequestData"
                  },
                  "typeName": {
                    "id": 135,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 134,
                      "name": "RevocationRequestData",
                      "nameLocations": [
                        "2702:21:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 131,
                      "src": "2702:21:1"
                    },
                    "referencedDeclaration": 131,
                    "src": "2702:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RevocationRequestData_$131_storage_ptr",
                      "typeString": "struct RevocationRequestData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "RevocationRequest",
              "nameLocation": "2618:17:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "2611:164:1",
              "visibility": "public"
            },
            {
              "canonicalName": "DelegatedRevocationRequest",
              "id": 150,
              "members": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "2915:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "2907:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2989:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "2967:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RevocationRequestData_$131_storage_ptr",
                    "typeString": "struct RevocationRequestData"
                  },
                  "typeName": {
                    "id": 141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 140,
                      "name": "RevocationRequestData",
                      "nameLocations": [
                        "2967:21:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 131,
                      "src": "2967:21:1"
                    },
                    "referencedDeclaration": 131,
                    "src": "2967:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RevocationRequestData_$131_storage_ptr",
                      "typeString": "struct RevocationRequestData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "3053:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "3043:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Signature_$26_storage_ptr",
                    "typeString": "struct Signature"
                  },
                  "typeName": {
                    "id": 144,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 143,
                      "name": "Signature",
                      "nameLocations": [
                        "3043:9:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26,
                      "src": "3043:9:1"
                    },
                    "referencedDeclaration": 26,
                    "src": "3043:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Signature_$26_storage_ptr",
                      "typeString": "struct Signature"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "revoker",
                  "nameLocation": "3105:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "3097:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3097:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "3150:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "3143:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3143:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "DelegatedRevocationRequest",
              "nameLocation": "2874:26:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "2867:336:1",
              "visibility": "public"
            },
            {
              "canonicalName": "MultiRevocationRequest",
              "id": 157,
              "members": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "3335:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3327:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3327:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3411:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3387:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RevocationRequestData_$131_storage_$dyn_storage_ptr",
                    "typeString": "struct RevocationRequestData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 154,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 153,
                        "name": "RevocationRequestData",
                        "nameLocations": [
                          "3387:21:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 131,
                        "src": "3387:21:1"
                      },
                      "referencedDeclaration": 131,
                      "src": "3387:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RevocationRequestData_$131_storage_ptr",
                        "typeString": "struct RevocationRequestData"
                      }
                    },
                    "id": 155,
                    "nodeType": "ArrayTypeName",
                    "src": "3387:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RevocationRequestData_$131_storage_$dyn_storage_ptr",
                      "typeString": "struct RevocationRequestData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "MultiRevocationRequest",
              "nameLocation": "3298:22:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "3291:171:1",
              "visibility": "public"
            },
            {
              "canonicalName": "MultiDelegatedRevocationRequest",
              "id": 172,
              "members": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "3613:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "3605:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3689:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "3665:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RevocationRequestData_$131_storage_$dyn_storage_ptr",
                    "typeString": "struct RevocationRequestData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 161,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 160,
                        "name": "RevocationRequestData",
                        "nameLocations": [
                          "3665:21:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 131,
                        "src": "3665:21:1"
                      },
                      "referencedDeclaration": 131,
                      "src": "3665:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RevocationRequestData_$131_storage_ptr",
                        "typeString": "struct RevocationRequestData"
                      }
                    },
                    "id": 162,
                    "nodeType": "ArrayTypeName",
                    "src": "3665:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RevocationRequestData_$131_storage_$dyn_storage_ptr",
                      "typeString": "struct RevocationRequestData[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "3756:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "3744:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Signature_$26_storage_$dyn_storage_ptr",
                    "typeString": "struct Signature[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 165,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 164,
                        "name": "Signature",
                        "nameLocations": [
                          "3744:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 26,
                        "src": "3744:9:1"
                      },
                      "referencedDeclaration": 26,
                      "src": "3744:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Signature_$26_storage_ptr",
                        "typeString": "struct Signature"
                      }
                    },
                    "id": 166,
                    "nodeType": "ArrayTypeName",
                    "src": "3744:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Signature_$26_storage_$dyn_storage_ptr",
                      "typeString": "struct Signature[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "revoker",
                  "nameLocation": "3891:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "3883:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3883:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "3936:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "3929:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3929:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "MultiDelegatedRevocationRequest",
              "nameLocation": "3567:31:1",
              "nodeType": "StructDefinition",
              "scope": 361,
              "src": "3560:429:1",
              "visibility": "public"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 174,
                    "name": "ISemver",
                    "nameLocations": [
                      "4083:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 422,
                    "src": "4083:7:1"
                  },
                  "id": 175,
                  "nodeType": "InheritanceSpecifier",
                  "src": "4083:7:1"
                }
              ],
              "canonicalName": "IEAS",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 173,
                "nodeType": "StructuredDocumentation",
                "src": "3991:74:1",
                "text": "@title IEAS\n @notice EAS - Ethereum Attestation Service interface."
              },
              "fullyImplemented": false,
              "id": 360,
              "linearizedBaseContracts": [
                360,
                422
              ],
              "name": "IEAS",
              "nameLocation": "4075:4:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 176,
                    "nodeType": "StructuredDocumentation",
                    "src": "4097:259:1",
                    "text": "@notice Emitted when an attestation has been made.\n @param recipient The recipient of the attestation.\n @param attester The attesting account.\n @param uid The UID of the new attestation.\n @param schemaUID The UID of the schema."
                  },
                  "eventSelector": "8bf46bf4cfd674fa735a3d63ec1c9ad4153f033c290341f3a588b75685141b35",
                  "id": 186,
                  "name": "Attested",
                  "nameLocation": "4367:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "4392:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "4376:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4376:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "attester",
                        "nameLocation": "4419:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "4403:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4403:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 182,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "4437:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "4429:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4429:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 184,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "schemaUID",
                        "nameLocation": "4458:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "4442:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4442:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4375:93:1"
                  },
                  "src": "4361:108:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 187,
                    "nodeType": "StructuredDocumentation",
                    "src": "4475:263:1",
                    "text": "@notice Emitted when an attestation has been revoked.\n @param recipient The recipient of the attestation.\n @param attester The attesting account.\n @param schemaUID The UID of the schema.\n @param uid The UID the revoked attestation."
                  },
                  "eventSelector": "f930a6e2523c9cc298691873087a740550b8fc85a0680830414c148ed927f615",
                  "id": 197,
                  "name": "Revoked",
                  "nameLocation": "4749:7:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 189,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "4773:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "4757:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4757:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 191,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "attester",
                        "nameLocation": "4800:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "4784:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4784:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "4818:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "4810:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4810:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "schemaUID",
                        "nameLocation": "4839:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "4823:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4823:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4756:93:1"
                  },
                  "src": "4743:107:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "4856:123:1",
                    "text": "@notice Emitted when a data has been timestamped.\n @param data The data.\n @param timestamp The timestamp."
                  },
                  "eventSelector": "5aafceeb1c7ad58e4a84898bdee37c02c0fc46e7d24e6b60e8209449f183459f",
                  "id": 204,
                  "name": "Timestamped",
                  "nameLocation": "4990:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5018:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "5002:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5002:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 202,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "5039:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "5024:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5024:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5001:48:1"
                  },
                  "src": "4984:66:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 205,
                    "nodeType": "StructuredDocumentation",
                    "src": "5056:170:1",
                    "text": "@notice Emitted when a data has been revoked.\n @param revoker The address of the revoker.\n @param data The data.\n @param timestamp The timestamp."
                  },
                  "eventSelector": "92a1f7a41a7c585a8b09e25b195e225b1d43248daca46b0faf9e0792777a2229",
                  "id": 213,
                  "name": "RevokedOffchain",
                  "nameLocation": "5237:15:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 207,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "revoker",
                        "nameLocation": "5269:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "5253:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5253:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 209,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5294:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "5278:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5278:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "5315:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "5300:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5300:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5252:73:1"
                  },
                  "src": "5231:95:1"
                },
                {
                  "documentation": {
                    "id": 214,
                    "nodeType": "StructuredDocumentation",
                    "src": "5332:121:1",
                    "text": "@notice Returns the address of the global schema registry.\n @return The address of the global schema registry."
                  },
                  "functionSelector": "f10b5cc8",
                  "id": 220,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSchemaRegistry",
                  "nameLocation": "5467:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5484:2:1"
                  },
                  "returnParameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "5510:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISchemaRegistry_$412",
                          "typeString": "contract ISchemaRegistry"
                        },
                        "typeName": {
                          "id": 217,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 216,
                            "name": "ISchemaRegistry",
                            "nameLocations": [
                              "5510:15:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 412,
                            "src": "5510:15:1"
                          },
                          "referencedDeclaration": 412,
                          "src": "5510:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISchemaRegistry_$412",
                            "typeString": "contract ISchemaRegistry"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5509:17:1"
                  },
                  "scope": 360,
                  "src": "5458:69:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 221,
                    "nodeType": "StructuredDocumentation",
                    "src": "5533:665:1",
                    "text": "@notice Attests to a specific schema.\n @param request The arguments of the attestation request.\n @return The UID of the new attestation.\n Example:\n     attest({\n         schema: \"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\",\n         data: {\n             recipient: \"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\",\n             expirationTime: 0,\n             revocable: true,\n             refUID: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n             data: \"0xF00D\",\n             value: 0\n         }\n     })"
                  },
                  "functionSelector": "f17325e7",
                  "id": 229,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "attest",
                  "nameLocation": "6212:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "request",
                        "nameLocation": "6247:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "6219:35:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestationRequest_$91_calldata_ptr",
                          "typeString": "struct AttestationRequest"
                        },
                        "typeName": {
                          "id": 223,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 222,
                            "name": "AttestationRequest",
                            "nameLocations": [
                              "6219:18:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 91,
                            "src": "6219:18:1"
                          },
                          "referencedDeclaration": 91,
                          "src": "6219:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationRequest_$91_storage_ptr",
                            "typeString": "struct AttestationRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6218:37:1"
                  },
                  "returnParameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "6282:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6282:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6281:9:1"
                  },
                  "scope": 360,
                  "src": "6203:88:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 230,
                    "nodeType": "StructuredDocumentation",
                    "src": "6297:1004:1",
                    "text": "@notice Attests to a specific schema via the provided ECDSA signature.\n @param delegatedRequest The arguments of the delegated attestation request.\n @return The UID of the new attestation.\n Example:\n     attestByDelegation({\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: {\n             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n             expirationTime: 1673891048,\n             revocable: true,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x1234',\n             value: 0\n         },\n         signature: {\n             v: 28,\n             r: '0x148c...b25b',\n             s: '0x5a72...be22'\n         },\n         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',\n         deadline: 1673891048\n     })"
                  },
                  "functionSelector": "3c042715",
                  "id": 238,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "attestByDelegation",
                  "nameLocation": "7315:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "delegatedRequest",
                        "nameLocation": "7380:16:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "7343:53:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DelegatedAttestationRequest_$104_calldata_ptr",
                          "typeString": "struct DelegatedAttestationRequest"
                        },
                        "typeName": {
                          "id": 232,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 231,
                            "name": "DelegatedAttestationRequest",
                            "nameLocations": [
                              "7343:27:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 104,
                            "src": "7343:27:1"
                          },
                          "referencedDeclaration": 104,
                          "src": "7343:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelegatedAttestationRequest_$104_storage_ptr",
                            "typeString": "struct DelegatedAttestationRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7333:69:1"
                  },
                  "returnParameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "7429:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7429:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7428:9:1"
                  },
                  "scope": 360,
                  "src": "7306:132:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "7444:1656:1",
                    "text": "@notice Attests to multiple schemas.\n @param multiRequests The arguments of the multi attestation requests. The requests should be grouped by distinct\n     schema ids to benefit from the best batching optimization.\n @return The UIDs of the new attestations.\n Example:\n     multiAttest([{\n         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',\n         data: [{\n             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n             expirationTime: 1673891048,\n             revocable: true,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x1234',\n             value: 1000\n         },\n         {\n             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n             expirationTime: 0,\n             revocable: false,\n             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',\n             data: '0x00',\n             value: 0\n         }],\n     },\n     {\n         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n         data: [{\n             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n             expirationTime: 0,\n             revocable: true,\n             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',\n             data: '0x12345678',\n             value: 0\n         },\n     }])"
                  },
                  "functionSelector": "44adc90e",
                  "id": 249,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multiAttest",
                  "nameLocation": "9114:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "multiRequests",
                        "nameLocation": "9161:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "9126:48:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MultiAttestationRequest_$111_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct MultiAttestationRequest[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 241,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 240,
                              "name": "MultiAttestationRequest",
                              "nameLocations": [
                                "9126:23:1"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 111,
                              "src": "9126:23:1"
                            },
                            "referencedDeclaration": 111,
                            "src": "9126:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MultiAttestationRequest_$111_storage_ptr",
                              "typeString": "struct MultiAttestationRequest"
                            }
                          },
                          "id": 242,
                          "nodeType": "ArrayTypeName",
                          "src": "9126:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_MultiAttestationRequest_$111_storage_$dyn_storage_ptr",
                            "typeString": "struct MultiAttestationRequest[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9125:50:1"
                  },
                  "returnParameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "9202:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 245,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "9202:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 246,
                          "nodeType": "ArrayTypeName",
                          "src": "9202:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9201:18:1"
                  },
                  "scope": 360,
                  "src": "9105:115:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "9226:1642:1",
                    "text": "@notice Attests to multiple schemas using via provided ECDSA signatures.\n @param multiDelegatedRequests The arguments of the delegated multi attestation requests. The requests should be\n     grouped by distinct schema ids to benefit from the best batching optimization.\n @return The UIDs of the new attestations.\n Example:\n     multiAttestByDelegation([{\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: [{\n             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n             expirationTime: 1673891048,\n             revocable: true,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x1234',\n             value: 0\n         },\n         {\n             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n             expirationTime: 0,\n             revocable: false,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x00',\n             value: 0\n         }],\n         signatures: [{\n             v: 28,\n             r: '0x148c...b25b',\n             s: '0x5a72...be22'\n         },\n         {\n             v: 28,\n             r: '0x487s...67bb',\n             s: '0x12ad...2366'\n         }],\n         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',\n         deadline: 1673891048\n     }])"
                  },
                  "functionSelector": "95411525",
                  "id": 260,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multiAttestByDelegation",
                  "nameLocation": "10882:23:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "multiDelegatedRequests",
                        "nameLocation": "10959:22:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "10915:66:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MultiDelegatedAttestationRequest_$126_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct MultiDelegatedAttestationRequest[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 252,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 251,
                              "name": "MultiDelegatedAttestationRequest",
                              "nameLocations": [
                                "10915:32:1"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 126,
                              "src": "10915:32:1"
                            },
                            "referencedDeclaration": 126,
                            "src": "10915:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MultiDelegatedAttestationRequest_$126_storage_ptr",
                              "typeString": "struct MultiDelegatedAttestationRequest"
                            }
                          },
                          "id": 253,
                          "nodeType": "ArrayTypeName",
                          "src": "10915:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_MultiDelegatedAttestationRequest_$126_storage_$dyn_storage_ptr",
                            "typeString": "struct MultiDelegatedAttestationRequest[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10905:82:1"
                  },
                  "returnParameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "11014:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 256,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11014:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 257,
                          "nodeType": "ArrayTypeName",
                          "src": "11014:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11013:18:1"
                  },
                  "scope": 360,
                  "src": "10873:159:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 261,
                    "nodeType": "StructuredDocumentation",
                    "src": "11038:450:1",
                    "text": "@notice Revokes an existing attestation to a specific schema.\n @param request The arguments of the revocation request.\n Example:\n     revoke({\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: {\n             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',\n             value: 0\n         }\n     })"
                  },
                  "functionSelector": "46926267",
                  "id": 267,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revoke",
                  "nameLocation": "11502:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "request",
                        "nameLocation": "11536:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "11509:34:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RevocationRequest_$137_calldata_ptr",
                          "typeString": "struct RevocationRequest"
                        },
                        "typeName": {
                          "id": 263,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 262,
                            "name": "RevocationRequest",
                            "nameLocations": [
                              "11509:17:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 137,
                            "src": "11509:17:1"
                          },
                          "referencedDeclaration": 137,
                          "src": "11509:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RevocationRequest_$137_storage_ptr",
                            "typeString": "struct RevocationRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11508:36:1"
                  },
                  "returnParameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11561:0:1"
                  },
                  "scope": 360,
                  "src": "11493:69:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 268,
                    "nodeType": "StructuredDocumentation",
                    "src": "11568:777:1",
                    "text": "@notice Revokes an existing attestation to a specific schema via the provided ECDSA signature.\n @param delegatedRequest The arguments of the delegated revocation request.\n Example:\n     revokeByDelegation({\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: {\n             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',\n             value: 0\n         },\n         signature: {\n             v: 27,\n             r: '0xb593...7142',\n             s: '0x0f5b...2cce'\n         },\n         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n         deadline: 1673891048\n     })"
                  },
                  "functionSelector": "a6d4dbc7",
                  "id": 274,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeByDelegation",
                  "nameLocation": "12359:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "delegatedRequest",
                        "nameLocation": "12414:16:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 274,
                        "src": "12378:52:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DelegatedRevocationRequest_$150_calldata_ptr",
                          "typeString": "struct DelegatedRevocationRequest"
                        },
                        "typeName": {
                          "id": 270,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 269,
                            "name": "DelegatedRevocationRequest",
                            "nameLocations": [
                              "12378:26:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 150,
                            "src": "12378:26:1"
                          },
                          "referencedDeclaration": 150,
                          "src": "12378:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelegatedRevocationRequest_$150_storage_ptr",
                            "typeString": "struct DelegatedRevocationRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12377:54:1"
                  },
                  "returnParameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12448:0:1"
                  },
                  "scope": 360,
                  "src": "12350:99:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 275,
                    "nodeType": "StructuredDocumentation",
                    "src": "12455:1039:1",
                    "text": "@notice Revokes existing attestations to multiple schemas.\n @param multiRequests The arguments of the multi revocation requests. The requests should be grouped by distinct\n     schema ids to benefit from the best batching optimization.\n Example:\n     multiRevoke([{\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: [{\n             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n             value: 1000\n         },\n         {\n             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n             value: 0\n         }],\n     },\n     {\n         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n         data: [{\n             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',\n             value: 0\n         },\n     }])"
                  },
                  "functionSelector": "4cb7e9e5",
                  "id": 282,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multiRevoke",
                  "nameLocation": "13508:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "multiRequests",
                        "nameLocation": "13554:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "13520:47:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MultiRevocationRequest_$157_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct MultiRevocationRequest[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 277,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 276,
                              "name": "MultiRevocationRequest",
                              "nameLocations": [
                                "13520:22:1"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 157,
                              "src": "13520:22:1"
                            },
                            "referencedDeclaration": 157,
                            "src": "13520:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MultiRevocationRequest_$157_storage_ptr",
                              "typeString": "struct MultiRevocationRequest"
                            }
                          },
                          "id": 278,
                          "nodeType": "ArrayTypeName",
                          "src": "13520:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_MultiRevocationRequest_$157_storage_$dyn_storage_ptr",
                            "typeString": "struct MultiRevocationRequest[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13519:49:1"
                  },
                  "returnParameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13585:0:1"
                  },
                  "scope": 360,
                  "src": "13499:87:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 283,
                    "nodeType": "StructuredDocumentation",
                    "src": "13592:1229:1",
                    "text": "@notice Revokes existing attestations to multiple schemas via provided ECDSA signatures.\n @param multiDelegatedRequests The arguments of the delegated multi revocation attestation requests. The requests\n     should be grouped by distinct schema ids to benefit from the best batching optimization.\n Example:\n     multiRevokeByDelegation([{\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: [{\n             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n             value: 1000\n         },\n         {\n             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n             value: 0\n         }],\n         signatures: [{\n             v: 28,\n             r: '0x148c...b25b',\n             s: '0x5a72...be22'\n         },\n         {\n             v: 28,\n             r: '0x487s...67bb',\n             s: '0x12ad...2366'\n         }],\n         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n         deadline: 1673891048\n     }])"
                  },
                  "functionSelector": "0eabf660",
                  "id": 290,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multiRevokeByDelegation",
                  "nameLocation": "14835:23:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "multiDelegatedRequests",
                        "nameLocation": "14911:22:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "14868:65:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MultiDelegatedRevocationRequest_$172_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct MultiDelegatedRevocationRequest[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 285,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 284,
                              "name": "MultiDelegatedRevocationRequest",
                              "nameLocations": [
                                "14868:31:1"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 172,
                              "src": "14868:31:1"
                            },
                            "referencedDeclaration": 172,
                            "src": "14868:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MultiDelegatedRevocationRequest_$172_storage_ptr",
                              "typeString": "struct MultiDelegatedRevocationRequest"
                            }
                          },
                          "id": 286,
                          "nodeType": "ArrayTypeName",
                          "src": "14868:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_MultiDelegatedRevocationRequest_$172_storage_$dyn_storage_ptr",
                            "typeString": "struct MultiDelegatedRevocationRequest[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14858:81:1"
                  },
                  "returnParameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14956:0:1"
                  },
                  "scope": 360,
                  "src": "14826:131:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 291,
                    "nodeType": "StructuredDocumentation",
                    "src": "14963:154:1",
                    "text": "@notice Timestamps the specified bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was timestamped with."
                  },
                  "functionSelector": "4d003070",
                  "id": 298,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "timestamp",
                  "nameLocation": "15131:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 293,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "15149:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "15141:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15141:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15140:14:1"
                  },
                  "returnParameters": {
                    "id": 297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 296,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "15173:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "15173:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15172:8:1"
                  },
                  "scope": 360,
                  "src": "15122:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "15187:163:1",
                    "text": "@notice Timestamps the specified multiple bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was timestamped with."
                  },
                  "functionSelector": "e71ff365",
                  "id": 307,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multiTimestamp",
                  "nameLocation": "15364:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 302,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "15398:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 307,
                        "src": "15379:23:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 300,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "15379:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 301,
                          "nodeType": "ArrayTypeName",
                          "src": "15379:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15378:25:1"
                  },
                  "returnParameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 307,
                        "src": "15422:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "15422:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15421:8:1"
                  },
                  "scope": 360,
                  "src": "15355:75:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 308,
                    "nodeType": "StructuredDocumentation",
                    "src": "15436:147:1",
                    "text": "@notice Revokes the specified bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was revoked with."
                  },
                  "functionSelector": "cf190f34",
                  "id": 315,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeOffchain",
                  "nameLocation": "15597:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "15620:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "15612:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15612:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15611:14:1"
                  },
                  "returnParameters": {
                    "id": 314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 313,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "15644:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "15644:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15643:8:1"
                  },
                  "scope": 360,
                  "src": "15588:64:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 316,
                    "nodeType": "StructuredDocumentation",
                    "src": "15658:156:1",
                    "text": "@notice Revokes the specified multiple bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was revoked with."
                  },
                  "functionSelector": "13893f61",
                  "id": 324,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multiRevokeOffchain",
                  "nameLocation": "15828:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 319,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "15867:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "15848:23:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 317,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "15848:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 318,
                          "nodeType": "ArrayTypeName",
                          "src": "15848:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15847:25:1"
                  },
                  "returnParameters": {
                    "id": 323,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "15891:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "15891:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15890:8:1"
                  },
                  "scope": 360,
                  "src": "15819:80:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 325,
                    "nodeType": "StructuredDocumentation",
                    "src": "15905:156:1",
                    "text": "@notice Returns an existing attestation by UID.\n @param uid The UID of the attestation to retrieve.\n @return The attestation data members."
                  },
                  "functionSelector": "a3112a64",
                  "id": 333,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAttestation",
                  "nameLocation": "16075:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 328,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 327,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "16098:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "16090:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 326,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16090:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16089:13:1"
                  },
                  "returnParameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "16126:18:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_memory_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 330,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 329,
                            "name": "Attestation",
                            "nameLocations": [
                              "16126:11:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "16126:11:1"
                          },
                          "referencedDeclaration": 47,
                          "src": "16126:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16125:20:1"
                  },
                  "scope": 360,
                  "src": "16066:80:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 334,
                    "nodeType": "StructuredDocumentation",
                    "src": "16152:155:1",
                    "text": "@notice Checks whether an attestation exists.\n @param uid The UID of the attestation to retrieve.\n @return Whether an attestation exists."
                  },
                  "functionSelector": "e30bb563",
                  "id": 341,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAttestationValid",
                  "nameLocation": "16321:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "16348:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "16340:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16340:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16339:13:1"
                  },
                  "returnParameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "16376:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16376:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16375:6:1"
                  },
                  "scope": 360,
                  "src": "16312:70:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 342,
                    "nodeType": "StructuredDocumentation",
                    "src": "16388:179:1",
                    "text": "@notice Returns the timestamp that the specified data was timestamped with.\n @param data The data to query.\n @return The timestamp the data was timestamped with."
                  },
                  "functionSelector": "d45c4435",
                  "id": 349,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimestamp",
                  "nameLocation": "16581:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "16602:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "16594:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16594:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16593:14:1"
                  },
                  "returnParameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "16631:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "16631:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16630:8:1"
                  },
                  "scope": 360,
                  "src": "16572:67:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 350,
                    "nodeType": "StructuredDocumentation",
                    "src": "16645:179:1",
                    "text": "@notice Returns the timestamp that the specified data was timestamped with.\n @param data The data to query.\n @return The timestamp the data was timestamped with."
                  },
                  "functionSelector": "b469318d",
                  "id": 359,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRevokeOffchain",
                  "nameLocation": "16838:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "revoker",
                        "nameLocation": "16864:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 359,
                        "src": "16856:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16856:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "16881:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 359,
                        "src": "16873:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16873:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16855:31:1"
                  },
                  "returnParameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 359,
                        "src": "16910:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "16910:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16909:8:1"
                  },
                  "scope": 360,
                  "src": "16829:89:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 361,
              "src": "4065:12855:1",
              "usedErrors": []
            }
          ],
          "src": "33:16888:1"
        },
        "id": 1
      },
      "@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol": {
        "ast": {
          "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol",
          "exportedSymbols": {
            "ISchemaRegistry": [
              412
            ],
            "ISchemaResolver": [
              482
            ],
            "ISemver": [
              422
            ],
            "SchemaRecord": [
              376
            ]
          },
          "id": 413,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 362,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:2"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol",
              "file": "./ISemver.sol",
              "id": 364,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 413,
              "sourceUnit": 423,
              "src": "58:40:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 363,
                    "name": "ISemver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 422,
                    "src": "67:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol",
              "file": "./resolver/ISchemaResolver.sol",
              "id": 366,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 413,
              "sourceUnit": 483,
              "src": "100:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 365,
                    "name": "ISchemaResolver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 482,
                    "src": "109:15:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "canonicalName": "SchemaRecord",
              "id": 376,
              "members": [
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "268:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "260:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "333:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "317:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISchemaResolver_$482",
                    "typeString": "contract ISchemaResolver"
                  },
                  "typeName": {
                    "id": 370,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 369,
                      "name": "ISchemaResolver",
                      "nameLocations": [
                        "317:15:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 482,
                      "src": "317:15:2"
                    },
                    "referencedDeclaration": 482,
                    "src": "317:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISchemaResolver_$482",
                      "typeString": "contract ISchemaResolver"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "revocable",
                  "nameLocation": "381:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "376:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "456:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "449:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "SchemaRecord",
              "nameLocation": "241:12:2",
              "nodeType": "StructDefinition",
              "scope": 413,
              "src": "234:285:2",
              "visibility": "public"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 378,
                    "name": "ISemver",
                    "nameLocations": [
                      "680:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 422,
                    "src": "680:7:2"
                  },
                  "id": 379,
                  "nodeType": "InheritanceSpecifier",
                  "src": "680:7:2"
                }
              ],
              "canonicalName": "ISchemaRegistry",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 377,
                "nodeType": "StructuredDocumentation",
                "src": "521:130:2",
                "text": "@title ISchemaRegistry\n @notice The interface of global attestation schemas for the Ethereum Attestation Service protocol."
              },
              "fullyImplemented": false,
              "id": 412,
              "linearizedBaseContracts": [
                412,
                422
              ],
              "name": "ISchemaRegistry",
              "nameLocation": "661:15:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 380,
                    "nodeType": "StructuredDocumentation",
                    "src": "694:213:2",
                    "text": "@notice Emitted when a new schema has been registered\n @param uid The schema UID.\n @param registerer The address of the account used to register the schema.\n @param schema The schema data."
                  },
                  "eventSelector": "d0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e",
                  "id": 389,
                  "name": "Registered",
                  "nameLocation": "918:10:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 382,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "945:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "929:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "929:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "registerer",
                        "nameLocation": "966:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "950:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "950:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 387,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "schema",
                        "nameLocation": "991:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "978:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$376_memory_ptr",
                          "typeString": "struct SchemaRecord"
                        },
                        "typeName": {
                          "id": 386,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 385,
                            "name": "SchemaRecord",
                            "nameLocations": [
                              "978:12:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 376,
                            "src": "978:12:2"
                          },
                          "referencedDeclaration": 376,
                          "src": "978:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SchemaRecord_$376_storage_ptr",
                            "typeString": "struct SchemaRecord"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "928:70:2"
                  },
                  "src": "912:87:2"
                },
                {
                  "documentation": {
                    "id": 390,
                    "nodeType": "StructuredDocumentation",
                    "src": "1005:262:2",
                    "text": "@notice Submits and reserves a new schema\n @param schema The schema data schema.\n @param resolver An optional schema resolver.\n @param revocable Whether the schema allows revocations explicitly.\n @return The UID of the new schema."
                  },
                  "functionSelector": "60d7a278",
                  "id": 402,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "register",
                  "nameLocation": "1281:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "schema",
                        "nameLocation": "1306:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 402,
                        "src": "1290:22:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1290:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "resolver",
                        "nameLocation": "1330:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 402,
                        "src": "1314:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISchemaResolver_$482",
                          "typeString": "contract ISchemaResolver"
                        },
                        "typeName": {
                          "id": 394,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 393,
                            "name": "ISchemaResolver",
                            "nameLocations": [
                              "1314:15:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 482,
                            "src": "1314:15:2"
                          },
                          "referencedDeclaration": 482,
                          "src": "1314:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISchemaResolver_$482",
                            "typeString": "contract ISchemaResolver"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 397,
                        "mutability": "mutable",
                        "name": "revocable",
                        "nameLocation": "1345:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 402,
                        "src": "1340:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1340:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1289:66:2"
                  },
                  "returnParameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 400,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 402,
                        "src": "1374:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 399,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1374:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1373:9:2"
                  },
                  "scope": 412,
                  "src": "1272:111:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 403,
                    "nodeType": "StructuredDocumentation",
                    "src": "1389:140:2",
                    "text": "@notice Returns an existing schema by UID\n @param uid The UID of the schema to retrieve.\n @return The schema data members."
                  },
                  "functionSelector": "a2ea7c6e",
                  "id": 411,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSchema",
                  "nameLocation": "1543:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 406,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "1561:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "1553:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1553:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1552:13:2"
                  },
                  "returnParameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 409,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "1589:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$376_memory_ptr",
                          "typeString": "struct SchemaRecord"
                        },
                        "typeName": {
                          "id": 408,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 407,
                            "name": "SchemaRecord",
                            "nameLocations": [
                              "1589:12:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 376,
                            "src": "1589:12:2"
                          },
                          "referencedDeclaration": 376,
                          "src": "1589:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SchemaRecord_$376_storage_ptr",
                            "typeString": "struct SchemaRecord"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1588:21:2"
                  },
                  "scope": 412,
                  "src": "1534:76:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 413,
              "src": "651:961:2",
              "usedErrors": []
            }
          ],
          "src": "33:1580:2"
        },
        "id": 2
      },
      "@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol": {
        "ast": {
          "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol",
          "exportedSymbols": {
            "ISemver": [
              422
            ]
          },
          "id": 423,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 414,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISemver",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 415,
                "nodeType": "StructuredDocumentation",
                "src": "58:51:3",
                "text": "@title ISemver\n @notice A semver interface."
              },
              "fullyImplemented": false,
              "id": 422,
              "linearizedBaseContracts": [
                422
              ],
              "name": "ISemver",
              "nameLocation": "119:7:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 416,
                    "nodeType": "StructuredDocumentation",
                    "src": "133:106:3",
                    "text": "@notice Returns the full semver contract version.\n @return Semver contract version as a string."
                  },
                  "functionSelector": "54fd4d50",
                  "id": 421,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nameLocation": "253:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 417,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "260:2:3"
                  },
                  "returnParameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 421,
                        "src": "286:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "286:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "285:15:3"
                  },
                  "scope": 422,
                  "src": "244:57:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 423,
              "src": "109:194:3",
              "usedErrors": []
            }
          ],
          "src": "33:271:3"
        },
        "id": 3
      },
      "@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "ast": {
          "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol",
          "exportedSymbols": {
            "Attestation": [
              47
            ],
            "ISchemaResolver": [
              482
            ],
            "ISemver": [
              422
            ]
          },
          "id": 483,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 424,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:4"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol",
              "file": "../ISemver.sol",
              "id": 426,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 483,
              "sourceUnit": 423,
              "src": "58:41:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 425,
                    "name": "ISemver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 422,
                    "src": "67:7:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/Common.sol",
              "file": "../Common.sol",
              "id": 428,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 483,
              "sourceUnit": 64,
              "src": "100:44:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 427,
                    "name": "Attestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "109:11:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 430,
                    "name": "ISemver",
                    "nameLocations": [
                      "260:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 422,
                    "src": "260:7:4"
                  },
                  "id": 431,
                  "nodeType": "InheritanceSpecifier",
                  "src": "260:7:4"
                }
              ],
              "canonicalName": "ISchemaResolver",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 429,
                "nodeType": "StructuredDocumentation",
                "src": "146:85:4",
                "text": "@title ISchemaResolver\n @notice The interface of an optional schema resolver."
              },
              "fullyImplemented": false,
              "id": 482,
              "linearizedBaseContracts": [
                482,
                422
              ],
              "name": "ISchemaResolver",
              "nameLocation": "241:15:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 432,
                    "nodeType": "StructuredDocumentation",
                    "src": "274:112:4",
                    "text": "@notice Checks if the resolver can be sent ETH.\n @return Whether the resolver supports ETH transfers."
                  },
                  "functionSelector": "ce46e046",
                  "id": 437,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isPayable",
                  "nameLocation": "400:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 433,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "409:2:4"
                  },
                  "returnParameters": {
                    "id": 436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 437,
                        "src": "435:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "435:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "434:6:4"
                  },
                  "scope": 482,
                  "src": "391:50:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 438,
                    "nodeType": "StructuredDocumentation",
                    "src": "447:167:4",
                    "text": "@notice Processes an attestation and verifies whether it's valid.\n @param attestation The new attestation.\n @return Whether the attestation is valid."
                  },
                  "functionSelector": "e60c3505",
                  "id": 446,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "attest",
                  "nameLocation": "628:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "656:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "635:32:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 440,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 439,
                            "name": "Attestation",
                            "nameLocations": [
                              "635:11:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "635:11:4"
                          },
                          "referencedDeclaration": 47,
                          "src": "635:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:34:4"
                  },
                  "returnParameters": {
                    "id": 445,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 444,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "695:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "695:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "694:6:4"
                  },
                  "scope": 482,
                  "src": "619:82:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 447,
                    "nodeType": "StructuredDocumentation",
                    "src": "707:268:4",
                    "text": "@notice Processes multiple attestations and verifies whether they are valid.\n @param attestations The new attestations.\n @param values Explicit ETH amounts which were sent with each attestation.\n @return Whether all the attestations are valid."
                  },
                  "functionSelector": "91db0b7e",
                  "id": 459,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multiAttest",
                  "nameLocation": "989:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 455,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "attestations",
                        "nameLocation": "1033:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "1010:35:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Attestation_$47_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Attestation[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 449,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 448,
                              "name": "Attestation",
                              "nameLocations": [
                                "1010:11:4"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 47,
                              "src": "1010:11:4"
                            },
                            "referencedDeclaration": 47,
                            "src": "1010:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                              "typeString": "struct Attestation"
                            }
                          },
                          "id": 450,
                          "nodeType": "ArrayTypeName",
                          "src": "1010:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Attestation_$47_storage_$dyn_storage_ptr",
                            "typeString": "struct Attestation[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 454,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "1074:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "1055:25:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 452,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1055:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 453,
                          "nodeType": "ArrayTypeName",
                          "src": "1055:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1000:86:4"
                  },
                  "returnParameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "1113:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1112:6:4"
                  },
                  "scope": 482,
                  "src": "980:139:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 460,
                    "nodeType": "StructuredDocumentation",
                    "src": "1125:205:4",
                    "text": "@notice Processes an attestation revocation and verifies if it can be revoked.\n @param attestation The existing attestation to be revoked.\n @return Whether the attestation can be revoked."
                  },
                  "functionSelector": "e49617e1",
                  "id": 468,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revoke",
                  "nameLocation": "1344:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "1372:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "1351:32:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 462,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 461,
                            "name": "Attestation",
                            "nameLocations": [
                              "1351:11:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "1351:11:4"
                          },
                          "referencedDeclaration": 47,
                          "src": "1351:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1350:34:4"
                  },
                  "returnParameters": {
                    "id": 467,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 466,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "1411:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 465,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1411:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1410:6:4"
                  },
                  "scope": 482,
                  "src": "1335:82:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 469,
                    "nodeType": "StructuredDocumentation",
                    "src": "1423:297:4",
                    "text": "@notice Processes revocation of multiple attestation and verifies they can be revoked.\n @param attestations The existing attestations to be revoked.\n @param values Explicit ETH amounts which were sent with each revocation.\n @return Whether the attestations can be revoked."
                  },
                  "functionSelector": "88e5b2d9",
                  "id": 481,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multiRevoke",
                  "nameLocation": "1734:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 473,
                        "mutability": "mutable",
                        "name": "attestations",
                        "nameLocation": "1778:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "1755:35:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Attestation_$47_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Attestation[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 471,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 470,
                              "name": "Attestation",
                              "nameLocations": [
                                "1755:11:4"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 47,
                              "src": "1755:11:4"
                            },
                            "referencedDeclaration": 47,
                            "src": "1755:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                              "typeString": "struct Attestation"
                            }
                          },
                          "id": 472,
                          "nodeType": "ArrayTypeName",
                          "src": "1755:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Attestation_$47_storage_$dyn_storage_ptr",
                            "typeString": "struct Attestation[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "1819:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "1800:25:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 474,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1800:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 475,
                          "nodeType": "ArrayTypeName",
                          "src": "1800:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1745:86:4"
                  },
                  "returnParameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "1858:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1858:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1857:6:4"
                  },
                  "scope": 482,
                  "src": "1725:139:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 483,
              "src": "231:1635:4",
              "usedErrors": []
            }
          ],
          "src": "33:1834:4"
        },
        "id": 4
      },
      "contracts/Common.sol": {
        "ast": {
          "absolutePath": "contracts/Common.sol",
          "exportedSymbols": {
            "MAX_ATTACHED_BADGE_NUM": [
              487
            ],
            "SCROLL_BADGE_SCHEMA": [
              490
            ],
            "decodeBadgeData": [
              510
            ]
          },
          "id": 511,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 484,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:5"
            },
            {
              "constant": true,
              "id": 487,
              "mutability": "constant",
              "name": "MAX_ATTACHED_BADGE_NUM",
              "nameLocation": "75:22:5",
              "nodeType": "VariableDeclaration",
              "scope": 511,
              "src": "58:44:5",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 485,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "58:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "3438",
                "id": 486,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "100:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_48_by_1",
                  "typeString": "int_const 48"
                },
                "value": "48"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 490,
              "mutability": "constant",
              "name": "SCROLL_BADGE_SCHEMA",
              "nameLocation": "121:19:5",
              "nodeType": "VariableDeclaration",
              "scope": 511,
              "src": "105:68:5",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string"
              },
              "typeName": {
                "id": 488,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "105:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "value": {
                "hexValue": "616464726573732062616467652c206279746573207061796c6f6164",
                "id": 489,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "143:30:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_63c07928bdd04db7915017340ea7d92f56986cb6e706a670e74def499a198aac",
                  "typeString": "literal_string \"address badge, bytes payload\""
                },
                "value": "address badge, bytes payload"
              },
              "visibility": "internal"
            },
            {
              "body": {
                "id": 509,
                "nodeType": "Block",
                "src": "257:50:5",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 501,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 492,
                          "src": "281:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "288:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 502,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "288:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "297:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 504,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "297:5:5",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 506,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "287:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                            "typeString": "tuple(type(address),type(bytes storage pointer))"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                            "typeString": "tuple(type(address),type(bytes storage pointer))"
                          }
                        ],
                        "expression": {
                          "id": 499,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "270:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "274:6:5",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "270:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "270:34:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(address payable,bytes memory)"
                      }
                    },
                    "functionReturnParameters": 498,
                    "id": 508,
                    "nodeType": "Return",
                    "src": "263:41:5"
                  }
                ]
              },
              "id": 510,
              "implemented": true,
              "kind": "freeFunction",
              "modifiers": [],
              "name": "decodeBadgeData",
              "nameLocation": "185:15:5",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 493,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 492,
                    "mutability": "mutable",
                    "name": "data",
                    "nameLocation": "214:4:5",
                    "nodeType": "VariableDeclaration",
                    "scope": 510,
                    "src": "201:17:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 491,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "201:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "200:19:5"
              },
              "returnParameters": {
                "id": 498,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 495,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 510,
                    "src": "234:7:5",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 494,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "234:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 497,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 510,
                    "src": "243:12:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 496,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "243:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "233:23:5"
              },
              "scope": 511,
              "src": "176:131:5",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            }
          ],
          "src": "33:275:5"
        },
        "id": 5
      },
      "contracts/Errors.sol": {
        "ast": {
          "absolutePath": "contracts/Errors.sol",
          "exportedSymbols": {
            "AttestationBadgeMismatch": [
              542
            ],
            "AttestationExpired": [
              546
            ],
            "AttestationNotFound": [
              550
            ],
            "AttestationOwnerMismatch": [
              554
            ],
            "AttestationRevoked": [
              558
            ],
            "AttestationSchemaMismatch": [
              562
            ],
            "BadgeCountReached": [
              564
            ],
            "BadgeNotAllowed": [
              522
            ],
            "BadgeNotFound": [
              526
            ],
            "CallerIsNotUserProfile": [
              574
            ],
            "CannotUpgrade": [
              518
            ],
            "DuplicatedUsername": [
              576
            ],
            "ExpirationDisabled": [
              528
            ],
            "ExpiredSignature": [
              578
            ],
            "ImplementationNotContract": [
              580
            ],
            "InvalidReferrer": [
              582
            ],
            "InvalidSignature": [
              584
            ],
            "InvalidUsername": [
              586
            ],
            "LengthMismatch": [
              566
            ],
            "MissingPayload": [
              530
            ],
            "MsgValueMismatchWithMintFee": [
              588
            ],
            "ProfileAlreadyMinted": [
              590
            ],
            "ResolverPaymentsDisabled": [
              532
            ],
            "RevocationDisabled": [
              534
            ],
            "SingletonBadge": [
              536
            ],
            "TokenNotOwnedByUser": [
              572
            ],
            "Unauthorized": [
              514
            ],
            "UnknownSchema": [
              538
            ]
          },
          "id": 591,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 512,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "errorSelector": "82b42900",
              "id": 514,
              "name": "Unauthorized",
              "nameLocation": "64:12:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 513,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "76:2:6"
              },
              "src": "58:21:6"
            },
            {
              "errorSelector": "864f1016",
              "id": 518,
              "name": "CannotUpgrade",
              "nameLocation": "86:13:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 517,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 516,
                    "mutability": "mutable",
                    "name": "uid",
                    "nameLocation": "108:3:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 518,
                    "src": "100:11:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 515,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "100:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "99:13:6"
              },
              "src": "80:33:6"
            },
            {
              "errorSelector": "0469ec92",
              "id": 522,
              "name": "BadgeNotAllowed",
              "nameLocation": "228:15:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 521,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 520,
                    "mutability": "mutable",
                    "name": "badge",
                    "nameLocation": "252:5:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 522,
                    "src": "244:13:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 519,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "244:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "243:15:6"
              },
              "src": "222:37:6"
            },
            {
              "errorSelector": "27bca328",
              "id": 526,
              "name": "BadgeNotFound",
              "nameLocation": "266:13:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 525,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 524,
                    "mutability": "mutable",
                    "name": "badge",
                    "nameLocation": "288:5:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 526,
                    "src": "280:13:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 523,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "280:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "279:15:6"
              },
              "src": "260:35:6"
            },
            {
              "errorSelector": "f7fb0ca6",
              "id": 528,
              "name": "ExpirationDisabled",
              "nameLocation": "302:18:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 527,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "320:2:6"
              },
              "src": "296:27:6"
            },
            {
              "errorSelector": "6de4b347",
              "id": 530,
              "name": "MissingPayload",
              "nameLocation": "330:14:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 529,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "344:2:6"
              },
              "src": "324:23:6"
            },
            {
              "errorSelector": "2c015322",
              "id": 532,
              "name": "ResolverPaymentsDisabled",
              "nameLocation": "354:24:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 531,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "378:2:6"
              },
              "src": "348:33:6"
            },
            {
              "errorSelector": "27fe635a",
              "id": 534,
              "name": "RevocationDisabled",
              "nameLocation": "388:18:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 533,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "406:2:6"
              },
              "src": "382:27:6"
            },
            {
              "errorSelector": "18b26232",
              "id": 536,
              "name": "SingletonBadge",
              "nameLocation": "416:14:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 535,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "430:2:6"
              },
              "src": "410:23:6"
            },
            {
              "errorSelector": "e7a9fb26",
              "id": 538,
              "name": "UnknownSchema",
              "nameLocation": "440:13:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 537,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "453:2:6"
              },
              "src": "434:22:6"
            },
            {
              "errorSelector": "b923d261",
              "id": 542,
              "name": "AttestationBadgeMismatch",
              "nameLocation": "480:24:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 541,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 540,
                    "mutability": "mutable",
                    "name": "uid",
                    "nameLocation": "513:3:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 542,
                    "src": "505:11:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 539,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "505:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "504:13:6"
              },
              "src": "474:44:6"
            },
            {
              "errorSelector": "4f51d3f5",
              "id": 546,
              "name": "AttestationExpired",
              "nameLocation": "525:18:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 545,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 544,
                    "mutability": "mutable",
                    "name": "uid",
                    "nameLocation": "552:3:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 546,
                    "src": "544:11:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 543,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "544:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "543:13:6"
              },
              "src": "519:38:6"
            },
            {
              "errorSelector": "01fb6dd1",
              "id": 550,
              "name": "AttestationNotFound",
              "nameLocation": "564:19:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 549,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 548,
                    "mutability": "mutable",
                    "name": "uid",
                    "nameLocation": "592:3:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 550,
                    "src": "584:11:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 547,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "584:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "583:13:6"
              },
              "src": "558:39:6"
            },
            {
              "errorSelector": "6e768865",
              "id": 554,
              "name": "AttestationOwnerMismatch",
              "nameLocation": "604:24:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 553,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 552,
                    "mutability": "mutable",
                    "name": "uid",
                    "nameLocation": "637:3:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 554,
                    "src": "629:11:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 551,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "629:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "628:13:6"
              },
              "src": "598:44:6"
            },
            {
              "errorSelector": "04bed256",
              "id": 558,
              "name": "AttestationRevoked",
              "nameLocation": "649:18:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 557,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 556,
                    "mutability": "mutable",
                    "name": "uid",
                    "nameLocation": "676:3:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 558,
                    "src": "668:11:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 555,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "668:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "667:13:6"
              },
              "src": "643:38:6"
            },
            {
              "errorSelector": "030f9073",
              "id": 562,
              "name": "AttestationSchemaMismatch",
              "nameLocation": "688:25:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 561,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 560,
                    "mutability": "mutable",
                    "name": "uid",
                    "nameLocation": "722:3:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 562,
                    "src": "714:11:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 559,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "714:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "713:13:6"
              },
              "src": "682:45:6"
            },
            {
              "errorSelector": "63d1c40f",
              "id": 564,
              "name": "BadgeCountReached",
              "nameLocation": "753:17:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 563,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "770:2:6"
              },
              "src": "747:26:6"
            },
            {
              "errorSelector": "ff633a38",
              "id": 566,
              "name": "LengthMismatch",
              "nameLocation": "780:14:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 565,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "794:2:6"
              },
              "src": "774:23:6"
            },
            {
              "errorSelector": "d36517ce",
              "id": 572,
              "name": "TokenNotOwnedByUser",
              "nameLocation": "804:19:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 571,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 568,
                    "mutability": "mutable",
                    "name": "token",
                    "nameLocation": "832:5:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 572,
                    "src": "824:13:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 567,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "824:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 570,
                    "mutability": "mutable",
                    "name": "tokenId",
                    "nameLocation": "847:7:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 572,
                    "src": "839:15:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 569,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "839:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "823:32:6"
              },
              "src": "798:58:6"
            },
            {
              "errorSelector": "fb02f696",
              "id": 574,
              "name": "CallerIsNotUserProfile",
              "nameLocation": "891:22:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 573,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "913:2:6"
              },
              "src": "885:31:6"
            },
            {
              "errorSelector": "1a6ec150",
              "id": 576,
              "name": "DuplicatedUsername",
              "nameLocation": "923:18:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 575,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "941:2:6"
              },
              "src": "917:27:6"
            },
            {
              "errorSelector": "df4cc36d",
              "id": 578,
              "name": "ExpiredSignature",
              "nameLocation": "951:16:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 577,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "967:2:6"
              },
              "src": "945:25:6"
            },
            {
              "errorSelector": "f994e610",
              "id": 580,
              "name": "ImplementationNotContract",
              "nameLocation": "977:25:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 579,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1002:2:6"
              },
              "src": "971:34:6"
            },
            {
              "errorSelector": "61104228",
              "id": 582,
              "name": "InvalidReferrer",
              "nameLocation": "1012:15:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 581,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1027:2:6"
              },
              "src": "1006:24:6"
            },
            {
              "errorSelector": "8baa579f",
              "id": 584,
              "name": "InvalidSignature",
              "nameLocation": "1037:16:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 583,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1053:2:6"
              },
              "src": "1031:25:6"
            },
            {
              "errorSelector": "50ef3288",
              "id": 586,
              "name": "InvalidUsername",
              "nameLocation": "1063:15:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 585,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1078:2:6"
              },
              "src": "1057:24:6"
            },
            {
              "errorSelector": "d93675ed",
              "id": 588,
              "name": "MsgValueMismatchWithMintFee",
              "nameLocation": "1088:27:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 587,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1115:2:6"
              },
              "src": "1082:36:6"
            },
            {
              "errorSelector": "6a752df9",
              "id": 590,
              "name": "ProfileAlreadyMinted",
              "nameLocation": "1125:20:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 589,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1145:2:6"
              },
              "src": "1119:29:6"
            }
          ],
          "src": "33:1116:6"
        },
        "id": 6
      },
      "contracts/IScrollBadge.sol": {
        "ast": {
          "absolutePath": "contracts/IScrollBadge.sol",
          "exportedSymbols": {
            "Attestation": [
              47
            ],
            "IScrollBadge": [
              646
            ]
          },
          "id": 647,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 592,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:7"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "file": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "id": 594,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 647,
              "sourceUnit": 361,
              "src": "114:91:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 593,
                    "name": "Attestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "122:11:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IScrollBadge",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 646,
              "linearizedBaseContracts": [
                646
              ],
              "name": "IScrollBadge",
              "nameLocation": "217:12:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "a0785ec0b9bf31a5475d33c716fb9f500f0ea0bb9e4bc10ec39d5db763c1da15",
                  "id": 598,
                  "name": "IssueBadge",
                  "nameLocation": "242:10:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 596,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "269:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "253:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "253:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "252:21:7"
                  },
                  "src": "236:38:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "504e4727721de18c6bf7f66448a6ff6da00aa4b1f00b6034e71723ae7ce6373a",
                  "id": 602,
                  "name": "RevokeBadge",
                  "nameLocation": "285:11:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 601,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 600,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "313:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "297:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "297:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "296:21:7"
                  },
                  "src": "279:39:7"
                },
                {
                  "documentation": {
                    "id": 603,
                    "nodeType": "StructuredDocumentation",
                    "src": "324:190:7",
                    "text": "@notice A resolver callback invoked in the `issueBadge` function in the parent contract.\n @param attestation The new attestation.\n @return Whether the attestation is valid."
                  },
                  "functionSelector": "d753a63d",
                  "id": 611,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "issueBadge",
                  "nameLocation": "528:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "560:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 611,
                        "src": "539:32:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 605,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 604,
                            "name": "Attestation",
                            "nameLocations": [
                              "539:11:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "539:11:7"
                          },
                          "referencedDeclaration": 47,
                          "src": "539:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:34:7"
                  },
                  "returnParameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 611,
                        "src": "591:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "591:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "590:6:7"
                  },
                  "scope": 646,
                  "src": "519:78:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 612,
                    "nodeType": "StructuredDocumentation",
                    "src": "603:197:7",
                    "text": "@notice A resolver callback invoked in the `revokeBadge` function in the parent contract.\n @param attestation The new attestation.\n @return Whether the attestation can be revoked."
                  },
                  "functionSelector": "8298b030",
                  "id": 620,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeBadge",
                  "nameLocation": "814:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 616,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 615,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "847:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "826:32:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 614,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 613,
                            "name": "Attestation",
                            "nameLocations": [
                              "826:11:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "826:11:7"
                          },
                          "referencedDeclaration": 47,
                          "src": "826:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "825:34:7"
                  },
                  "returnParameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 618,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "878:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 617,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "877:6:7"
                  },
                  "scope": 646,
                  "src": "805:79:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 621,
                    "nodeType": "StructuredDocumentation",
                    "src": "890:132:7",
                    "text": "@notice Validate and return a Scroll badge attestation.\n @param uid The attestation UID.\n @return The attestation."
                  },
                  "functionSelector": "8c6f12f0",
                  "id": 629,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAndValidateBadge",
                  "nameLocation": "1036:19:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "1064:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 629,
                        "src": "1056:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1055:13:7"
                  },
                  "returnParameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 629,
                        "src": "1092:18:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_memory_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 626,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 625,
                            "name": "Attestation",
                            "nameLocations": [
                              "1092:11:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "1092:11:7"
                          },
                          "referencedDeclaration": 47,
                          "src": "1092:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1091:20:7"
                  },
                  "scope": 646,
                  "src": "1027:85:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 630,
                    "nodeType": "StructuredDocumentation",
                    "src": "1118:245:7",
                    "text": "@notice Returns the token URI corresponding to a certain badge UID, or the default\n         badge token URI if the pass UID is 0x0.\n @param uid The badge UID, or 0x0.\n @return The badge token URI (same format as ERC721)."
                  },
                  "functionSelector": "24830563",
                  "id": 637,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "badgeTokenURI",
                  "nameLocation": "1377:13:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 632,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "1399:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "1391:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 631,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1391:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1390:13:7"
                  },
                  "returnParameters": {
                    "id": 636,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "1427:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1427:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1426:15:7"
                  },
                  "scope": 646,
                  "src": "1368:74:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 638,
                    "nodeType": "StructuredDocumentation",
                    "src": "1448:178:7",
                    "text": "@notice Returns true if the user has one or more of this badge.\n @param user The user's wallet address.\n @return True if the user has one or more of this badge."
                  },
                  "functionSelector": "5e50864f",
                  "id": 645,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasBadge",
                  "nameLocation": "1640:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 641,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 640,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1657:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 645,
                        "src": "1649:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 639,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1649:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1648:14:7"
                  },
                  "returnParameters": {
                    "id": 644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 645,
                        "src": "1686:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1685:6:7"
                  },
                  "scope": 646,
                  "src": "1631:61:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 647,
              "src": "207:1487:7",
              "usedErrors": []
            }
          ],
          "src": "33:1662:7"
        },
        "id": 7
      },
      "contracts/IScrollBadgeResolver.sol": {
        "ast": {
          "absolutePath": "contracts/IScrollBadgeResolver.sol",
          "exportedSymbols": {
            "Attestation": [
              47
            ],
            "IScrollBadgeResolver": [
              695
            ]
          },
          "id": 696,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 648,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:8"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "file": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "id": 650,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 696,
              "sourceUnit": 361,
              "src": "114:91:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 649,
                    "name": "Attestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "122:11:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IScrollBadgeResolver",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 695,
              "linearizedBaseContracts": [
                695
              ],
              "name": "IScrollBadgeResolver",
              "nameLocation": "217:20:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 651,
                    "nodeType": "StructuredDocumentation",
                    "src": "291:101:8",
                    "text": "@dev Emitted when a new badge is issued.\n @param uid The UID of the new badge attestation."
                  },
                  "eventSelector": "a0785ec0b9bf31a5475d33c716fb9f500f0ea0bb9e4bc10ec39d5db763c1da15",
                  "id": 655,
                  "name": "IssueBadge",
                  "nameLocation": "403:10:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 653,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "430:3:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "414:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "414:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "413:21:8"
                  },
                  "src": "397:38:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 656,
                    "nodeType": "StructuredDocumentation",
                    "src": "441:102:8",
                    "text": "@dev Emitted when a badge is revoked.\n @param uid The UID of the revoked badge attestation."
                  },
                  "eventSelector": "504e4727721de18c6bf7f66448a6ff6da00aa4b1f00b6034e71723ae7ce6373a",
                  "id": 660,
                  "name": "RevokeBadge",
                  "nameLocation": "554:11:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 658,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "582:3:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 660,
                        "src": "566:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 657,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "566:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "565:21:8"
                  },
                  "src": "548:39:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 661,
                    "nodeType": "StructuredDocumentation",
                    "src": "593:197:8",
                    "text": "@dev Emitted when the auto-attach status of a badge is updated.\n @param badge The address of the badge contract.\n @param enable Auto-attach was enabled if true, disabled if false."
                  },
                  "eventSelector": "d8ec3f79812ad31373f33d3d98622bae87bed3cbea6218e7afccd06b7822d554",
                  "id": 667,
                  "name": "UpdateAutoAttachWhitelist",
                  "nameLocation": "801:25:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 663,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "badge",
                        "nameLocation": "843:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "827:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "827:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 665,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "enable",
                        "nameLocation": "863:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "850:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "826:44:8"
                  },
                  "src": "795:76:8"
                },
                {
                  "documentation": {
                    "id": 668,
                    "nodeType": "StructuredDocumentation",
                    "src": "939:120:8",
                    "text": "@notice Return the Scroll badge attestation schema.\n @return The GUID of the Scroll badge attestation schema."
                  },
                  "functionSelector": "f8895cc8",
                  "id": 673,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "schema",
                  "nameLocation": "1073:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 669,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1079:2:8"
                  },
                  "returnParameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 671,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 673,
                        "src": "1100:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1100:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1099:9:8"
                  },
                  "scope": 695,
                  "src": "1064:45:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 674,
                    "nodeType": "StructuredDocumentation",
                    "src": "1115:95:8",
                    "text": "@notice The profile registry contract.\n @return The address of the profile registry."
                  },
                  "functionSelector": "7b103999",
                  "id": 679,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registry",
                  "nameLocation": "1224:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1232:2:8"
                  },
                  "returnParameters": {
                    "id": 678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 679,
                        "src": "1253:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1253:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1252:9:8"
                  },
                  "scope": 695,
                  "src": "1215:47:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 680,
                    "nodeType": "StructuredDocumentation",
                    "src": "1268:92:8",
                    "text": "@notice The global EAS contract.\n @return The address of the global EAS contract."
                  },
                  "functionSelector": "8150864d",
                  "id": 685,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "eas",
                  "nameLocation": "1374:3:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1377:2:8"
                  },
                  "returnParameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "1398:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1398:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1397:9:8"
                  },
                  "scope": 695,
                  "src": "1365:42:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 686,
                    "nodeType": "StructuredDocumentation",
                    "src": "1413:132:8",
                    "text": "@notice Validate and return a Scroll badge attestation.\n @param uid The attestation UID.\n @return The attestation."
                  },
                  "functionSelector": "8c6f12f0",
                  "id": 694,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAndValidateBadge",
                  "nameLocation": "1559:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "1587:3:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 694,
                        "src": "1579:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1579:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1578:13:8"
                  },
                  "returnParameters": {
                    "id": 693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 692,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 694,
                        "src": "1615:18:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_memory_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 691,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 690,
                            "name": "Attestation",
                            "nameLocations": [
                              "1615:11:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "1615:11:8"
                          },
                          "referencedDeclaration": 47,
                          "src": "1615:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1614:20:8"
                  },
                  "scope": 695,
                  "src": "1550:85:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 696,
              "src": "207:1430:8",
              "usedErrors": []
            }
          ],
          "src": "33:1605:8"
        },
        "id": 8
      },
      "contracts/ScrollBadge.sol": {
        "ast": {
          "absolutePath": "contracts/ScrollBadge.sol",
          "exportedSymbols": {
            "Attestation": [
              47
            ],
            "AttestationBadgeMismatch": [
              542
            ],
            "IScrollBadge": [
              646
            ],
            "IScrollBadgeResolver": [
              695
            ],
            "ScrollBadge": [
              905
            ],
            "Unauthorized": [
              514
            ],
            "decodeBadgeData": [
              510
            ]
          },
          "id": 906,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 697,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:9"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "file": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "id": 699,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 906,
              "sourceUnit": 361,
              "src": "115:91:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 698,
                    "name": "Attestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "123:11:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Common.sol",
              "file": "./Common.sol",
              "id": 701,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 906,
              "sourceUnit": 511,
              "src": "208:45:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 700,
                    "name": "decodeBadgeData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 510,
                    "src": "216:15:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IScrollBadge.sol",
              "file": "./IScrollBadge.sol",
              "id": 703,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 906,
              "sourceUnit": 647,
              "src": "254:48:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 702,
                    "name": "IScrollBadge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 646,
                    "src": "262:12:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IScrollBadgeResolver.sol",
              "file": "./IScrollBadgeResolver.sol",
              "id": 705,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 906,
              "sourceUnit": 696,
              "src": "303:64:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 704,
                    "name": "IScrollBadgeResolver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 695,
                    "src": "311:20:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Errors.sol",
              "file": "./Errors.sol",
              "id": 708,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 906,
              "sourceUnit": 591,
              "src": "368:68:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 706,
                    "name": "AttestationBadgeMismatch",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 542,
                    "src": "376:24:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 707,
                    "name": "Unauthorized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 514,
                    "src": "402:12:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 710,
                    "name": "IScrollBadge",
                    "nameLocations": [
                      "659:12:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 646,
                    "src": "659:12:9"
                  },
                  "id": 711,
                  "nodeType": "InheritanceSpecifier",
                  "src": "659:12:9"
                }
              ],
              "canonicalName": "ScrollBadge",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 709,
                "nodeType": "StructuredDocumentation",
                "src": "438:188:9",
                "text": "@title ScrollBadge\n @notice This contract implements the basic functionalities of a Scroll badge.\n         It serves as the base contract for more complex badge functionalities."
              },
              "fullyImplemented": false,
              "id": 905,
              "linearizedBaseContracts": [
                905,
                646
              ],
              "name": "ScrollBadge",
              "nameLocation": "644:11:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "04f3bcec",
                  "id": 713,
                  "mutability": "immutable",
                  "name": "resolver",
                  "nameLocation": "753:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "728:33:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "_userBadgeCount",
                  "nameLocation": "841:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "805:51:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 716,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 714,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "813:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "805:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 715,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "824:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 727,
                    "nodeType": "Block",
                    "src": "1026:37:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 723,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "1036:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 724,
                            "name": "resolver_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "1047:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1036:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 726,
                        "nodeType": "ExpressionStatement",
                        "src": "1036:20:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 718,
                    "nodeType": "StructuredDocumentation",
                    "src": "863:127:9",
                    "text": "@dev Creates a new ScrollBadge instance.\n @param resolver_ The address of the global Scroll badge resolver contract."
                  },
                  "id": 728,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "resolver_",
                        "nameLocation": "1015:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "1007:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1007:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1006:19:9"
                  },
                  "returnParameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1026:0:9"
                  },
                  "scope": 905,
                  "src": "995:68:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    611
                  ],
                  "body": {
                    "id": 771,
                    "nodeType": "Block",
                    "src": "1178:376:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 737,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1231:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1235:6:9",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1231:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 741,
                                "name": "resolver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 713,
                                "src": "1253:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1245:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 739,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1245:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1245:17:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1231:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "nodeType": "IfStatement",
                        "src": "1227:83:9",
                        "trueBody": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "1264:46:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 744,
                                  "name": "Unauthorized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 514,
                                  "src": "1285:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1285:14:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 746,
                              "nodeType": "RevertStatement",
                              "src": "1278:21:9"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1365:26:9",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 750,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "1379:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              ],
                              "id": 749,
                              "name": "onIssueBadge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 828,
                              "src": "1366:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function (struct Attestation calldata) returns (bool)"
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1366:25:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 756,
                        "nodeType": "IfStatement",
                        "src": "1361:69:9",
                        "trueBody": {
                          "id": 755,
                          "nodeType": "Block",
                          "src": "1393:37:9",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1414:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 736,
                              "id": 754,
                              "nodeType": "Return",
                              "src": "1407:12:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 757,
                              "name": "_userBadgeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "1440:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 760,
                            "indexExpression": {
                              "expression": {
                                "id": 758,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "1456:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              },
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1468:9:9",
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "1456:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1440:38:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1482:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1440:43:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 763,
                        "nodeType": "ExpressionStatement",
                        "src": "1440:43:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 765,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "1510:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1522:3:9",
                              "memberName": "uid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28,
                              "src": "1510:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 764,
                            "name": "IssueBadge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 598,
                            "src": "1499:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1499:27:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 768,
                        "nodeType": "EmitStatement",
                        "src": "1494:32:9"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1543:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 736,
                        "id": 770,
                        "nodeType": "Return",
                        "src": "1536:11:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 729,
                    "nodeType": "StructuredDocumentation",
                    "src": "1069:28:9",
                    "text": "@inheritdoc IScrollBadge"
                  },
                  "functionSelector": "d753a63d",
                  "id": 772,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "issueBadge",
                  "nameLocation": "1111:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 733,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 732,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "1143:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "1122:32:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 731,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 730,
                            "name": "Attestation",
                            "nameLocations": [
                              "1122:11:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "1122:11:9"
                          },
                          "referencedDeclaration": 47,
                          "src": "1122:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1121:34:9"
                  },
                  "returnParameters": {
                    "id": 736,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 735,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "1172:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1172:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1171:6:9"
                  },
                  "scope": 905,
                  "src": "1102:452:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    620
                  ],
                  "body": {
                    "id": 815,
                    "nodeType": "Block",
                    "src": "1670:378:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 781,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1723:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1727:6:9",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1723:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 785,
                                "name": "resolver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 713,
                                "src": "1745:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1737:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 783,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1737:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1737:17:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1723:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 792,
                        "nodeType": "IfStatement",
                        "src": "1719:83:9",
                        "trueBody": {
                          "id": 791,
                          "nodeType": "Block",
                          "src": "1756:46:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 788,
                                  "name": "Unauthorized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 514,
                                  "src": "1777:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1777:14:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 790,
                              "nodeType": "RevertStatement",
                              "src": "1770:21:9"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1857:27:9",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 794,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "1872:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              ],
                              "id": 793,
                              "name": "onRevokeBadge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "1858:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function (struct Attestation calldata) returns (bool)"
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1858:26:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 800,
                        "nodeType": "IfStatement",
                        "src": "1853:70:9",
                        "trueBody": {
                          "id": 799,
                          "nodeType": "Block",
                          "src": "1886:37:9",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1907:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 780,
                              "id": 798,
                              "nodeType": "Return",
                              "src": "1900:12:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 801,
                              "name": "_userBadgeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "1933:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 804,
                            "indexExpression": {
                              "expression": {
                                "id": 802,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "1949:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1961:9:9",
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "1949:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1933:38:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1975:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1933:43:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 807,
                        "nodeType": "ExpressionStatement",
                        "src": "1933:43:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 809,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "2004:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              },
                              "id": 810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2016:3:9",
                              "memberName": "uid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28,
                              "src": "2004:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 808,
                            "name": "RevokeBadge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "1992:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1992:28:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 812,
                        "nodeType": "EmitStatement",
                        "src": "1987:33:9"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2037:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 780,
                        "id": 814,
                        "nodeType": "Return",
                        "src": "2030:11:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 773,
                    "nodeType": "StructuredDocumentation",
                    "src": "1560:28:9",
                    "text": "@inheritdoc IScrollBadge"
                  },
                  "functionSelector": "8298b030",
                  "id": 816,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeBadge",
                  "nameLocation": "1602:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 777,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 776,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "1635:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 816,
                        "src": "1614:32:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 775,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 774,
                            "name": "Attestation",
                            "nameLocations": [
                              "1614:11:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "1614:11:9"
                          },
                          "referencedDeclaration": 47,
                          "src": "1614:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1613:34:9"
                  },
                  "returnParameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 816,
                        "src": "1664:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:6:9"
                  },
                  "scope": 905,
                  "src": "1593:455:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 827,
                    "nodeType": "Block",
                    "src": "2330:28:9",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2347:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 824,
                        "id": 826,
                        "nodeType": "Return",
                        "src": "2340:11:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 817,
                    "nodeType": "StructuredDocumentation",
                    "src": "2054:178:9",
                    "text": "@notice A resolver callback that should be implemented by child contracts.\n @param {attestation} The new attestation.\n @return Whether the attestation is valid."
                  },
                  "id": 828,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onIssueBadge",
                  "nameLocation": "2246:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 821,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 820,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "2259:20:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 819,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 818,
                            "name": "Attestation",
                            "nameLocations": [
                              "2259:11:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "2259:11:9"
                          },
                          "referencedDeclaration": 47,
                          "src": "2259:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2258:39:9"
                  },
                  "returnParameters": {
                    "id": 824,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 823,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "2324:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 822,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2324:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2323:6:9"
                  },
                  "scope": 905,
                  "src": "2237:121:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 839,
                    "nodeType": "Block",
                    "src": "2666:28:9",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2683:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 836,
                        "id": 838,
                        "nodeType": "Return",
                        "src": "2676:11:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 829,
                    "nodeType": "StructuredDocumentation",
                    "src": "2364:203:9",
                    "text": "@notice A resolver callback that should be implemented by child contracts.\n @param {attestation} The existing attestation to be revoked.\n @return Whether the attestation can be revoked."
                  },
                  "id": 840,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onRevokeBadge",
                  "nameLocation": "2581:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "2595:20:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 831,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 830,
                            "name": "Attestation",
                            "nameLocations": [
                              "2595:11:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "2595:11:9"
                          },
                          "referencedDeclaration": 47,
                          "src": "2595:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2594:39:9"
                  },
                  "returnParameters": {
                    "id": 836,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 835,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "2660:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 834,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2660:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2659:6:9"
                  },
                  "scope": 905,
                  "src": "2572:122:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    629
                  ],
                  "body": {
                    "id": 880,
                    "nodeType": "Block",
                    "src": "2816:296:9",
                    "statements": [
                      {
                        "assignments": [
                          851
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 851,
                            "mutability": "mutable",
                            "name": "attestation",
                            "nameLocation": "2845:11:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 880,
                            "src": "2826:30:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Attestation_$47_memory_ptr",
                              "typeString": "struct Attestation"
                            },
                            "typeName": {
                              "id": 850,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 849,
                                "name": "Attestation",
                                "nameLocations": [
                                  "2826:11:9"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 47,
                                "src": "2826:11:9"
                              },
                              "referencedDeclaration": 47,
                              "src": "2826:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                                "typeString": "struct Attestation"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 858,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 856,
                              "name": "uid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "2910:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 853,
                                  "name": "resolver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 713,
                                  "src": "2880:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 852,
                                "name": "IScrollBadgeResolver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 695,
                                "src": "2859:20:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IScrollBadgeResolver_$695_$",
                                  "typeString": "type(contract IScrollBadgeResolver)"
                                }
                              },
                              "id": 854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2859:30:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IScrollBadgeResolver_$695",
                                "typeString": "contract IScrollBadgeResolver"
                              }
                            },
                            "id": 855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2890:19:9",
                            "memberName": "getAndValidateBadge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 694,
                            "src": "2859:50:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Attestation_$47_memory_ptr_$",
                              "typeString": "function (bytes32) view external returns (struct Attestation memory)"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2859:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_memory_ptr",
                            "typeString": "struct Attestation memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2826:88:9"
                      },
                      {
                        "assignments": [
                          860,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 860,
                            "mutability": "mutable",
                            "name": "badge",
                            "nameLocation": "2934:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 880,
                            "src": "2926:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 859,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2926:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 865,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 862,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 851,
                                "src": "2960:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_memory_ptr",
                                  "typeString": "struct Attestation memory"
                                }
                              },
                              "id": 863,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2972:4:9",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46,
                              "src": "2960:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 861,
                            "name": "decodeBadgeData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "2944:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (address,bytes memory)"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2944:33:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(address,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2925:52:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 866,
                            "name": "badge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 860,
                            "src": "2992:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 869,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3009:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ScrollBadge_$905",
                                  "typeString": "contract ScrollBadge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ScrollBadge_$905",
                                  "typeString": "contract ScrollBadge"
                                }
                              ],
                              "id": 868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3001:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 867,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3001:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3001:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2992:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 877,
                        "nodeType": "IfStatement",
                        "src": "2988:89:9",
                        "trueBody": {
                          "id": 876,
                          "nodeType": "Block",
                          "src": "3016:61:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 873,
                                    "name": "uid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 843,
                                    "src": "3062:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 872,
                                  "name": "AttestationBadgeMismatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 542,
                                  "src": "3037:24:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3037:29:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 875,
                              "nodeType": "RevertStatement",
                              "src": "3030:36:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 878,
                          "name": "attestation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 851,
                          "src": "3094:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_memory_ptr",
                            "typeString": "struct Attestation memory"
                          }
                        },
                        "functionReturnParameters": 848,
                        "id": 879,
                        "nodeType": "Return",
                        "src": "3087:18:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 841,
                    "nodeType": "StructuredDocumentation",
                    "src": "2700:28:9",
                    "text": "@inheritdoc IScrollBadge"
                  },
                  "functionSelector": "8c6f12f0",
                  "id": 881,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAndValidateBadge",
                  "nameLocation": "2742:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "2770:3:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 881,
                        "src": "2762:11:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2762:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2761:13:9"
                  },
                  "returnParameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 881,
                        "src": "2796:18:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_memory_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 846,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 845,
                            "name": "Attestation",
                            "nameLocations": [
                              "2796:11:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "2796:11:9"
                          },
                          "referencedDeclaration": 47,
                          "src": "2796:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2795:20:9"
                  },
                  "scope": 905,
                  "src": "2733:379:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    637
                  ],
                  "documentation": {
                    "id": 882,
                    "nodeType": "StructuredDocumentation",
                    "src": "3118:28:9",
                    "text": "@inheritdoc IScrollBadge"
                  },
                  "functionSelector": "24830563",
                  "id": 889,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "badgeTokenURI",
                  "nameLocation": "3160:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 885,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 884,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "3182:3:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 889,
                        "src": "3174:11:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 883,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3174:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3173:13:9"
                  },
                  "returnParameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 887,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 889,
                        "src": "3216:13:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 886,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3216:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3215:15:9"
                  },
                  "scope": 905,
                  "src": "3151:80:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    645
                  ],
                  "body": {
                    "id": 903,
                    "nodeType": "Block",
                    "src": "3337:49:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 897,
                              "name": "_userBadgeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "3354:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 899,
                            "indexExpression": {
                              "id": 898,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 892,
                              "src": "3370:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3354:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3378:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3354:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 896,
                        "id": 902,
                        "nodeType": "Return",
                        "src": "3347:32:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 890,
                    "nodeType": "StructuredDocumentation",
                    "src": "3237:28:9",
                    "text": "@inheritdoc IScrollBadge"
                  },
                  "functionSelector": "5e50864f",
                  "id": 904,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasBadge",
                  "nameLocation": "3279:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 893,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 892,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3296:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "3288:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 891,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3288:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3287:14:9"
                  },
                  "returnParameters": {
                    "id": 896,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 895,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "3331:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3331:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3330:6:9"
                  },
                  "scope": 905,
                  "src": "3270:116:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 906,
              "src": "626:2762:9",
              "usedErrors": [
                514,
                542
              ]
            }
          ],
          "src": "33:3356:9"
        },
        "id": 9
      },
      "contracts/ScrollBadgePermissionless.sol": {
        "ast": {
          "absolutePath": "contracts/ScrollBadgePermissionless.sol",
          "exportedSymbols": {
            "Attestation": [
              47
            ],
            "ScrollBadge": [
              905
            ],
            "ScrollBadgeDefaultURI": [
              1054
            ],
            "ScrollBadgeEligibilityCheck": [
              1076
            ],
            "ScrollBadgePermissionless": [
              981
            ],
            "ScrollBadgeSelfAttest": [
              1197
            ],
            "ScrollBadgeSingleton": [
              1256
            ]
          },
          "id": 982,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 907,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:10"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "file": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "id": 909,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 982,
              "sourceUnit": 361,
              "src": "114:91:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 908,
                    "name": "Attestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "122:11:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ScrollBadge.sol",
              "file": "./ScrollBadge.sol",
              "id": 911,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 982,
              "sourceUnit": 906,
              "src": "207:46:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 910,
                    "name": "ScrollBadge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 905,
                    "src": "215:11:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/extensions/ScrollBadgeDefaultURI.sol",
              "file": "./extensions/ScrollBadgeDefaultURI.sol",
              "id": 913,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 982,
              "sourceUnit": 1055,
              "src": "254:77:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 912,
                    "name": "ScrollBadgeDefaultURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1054,
                    "src": "262:21:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/extensions/ScrollBadgeEligibilityCheck.sol",
              "file": "./extensions/ScrollBadgeEligibilityCheck.sol",
              "id": 915,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 982,
              "sourceUnit": 1077,
              "src": "332:89:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 914,
                    "name": "ScrollBadgeEligibilityCheck",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1076,
                    "src": "340:27:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/extensions/ScrollBadgeSelfAttest.sol",
              "file": "./extensions/ScrollBadgeSelfAttest.sol",
              "id": 917,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 982,
              "sourceUnit": 1198,
              "src": "422:77:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 916,
                    "name": "ScrollBadgeSelfAttest",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1197,
                    "src": "430:21:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/extensions/ScrollBadgeSingleton.sol",
              "file": "./extensions/ScrollBadgeSingleton.sol",
              "id": 919,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 982,
              "sourceUnit": 1257,
              "src": "500:75:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 918,
                    "name": "ScrollBadgeSingleton",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "508:20:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 921,
                    "name": "ScrollBadgeDefaultURI",
                    "nameLocations": [
                      "732:21:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1054,
                    "src": "732:21:10"
                  },
                  "id": 922,
                  "nodeType": "InheritanceSpecifier",
                  "src": "732:21:10"
                },
                {
                  "baseName": {
                    "id": 923,
                    "name": "ScrollBadgeEligibilityCheck",
                    "nameLocations": [
                      "759:27:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1076,
                    "src": "759:27:10"
                  },
                  "id": 924,
                  "nodeType": "InheritanceSpecifier",
                  "src": "759:27:10"
                },
                {
                  "baseName": {
                    "id": 925,
                    "name": "ScrollBadgeSelfAttest",
                    "nameLocations": [
                      "792:21:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1197,
                    "src": "792:21:10"
                  },
                  "id": 926,
                  "nodeType": "InheritanceSpecifier",
                  "src": "792:21:10"
                },
                {
                  "baseName": {
                    "id": 927,
                    "name": "ScrollBadgeSingleton",
                    "nameLocations": [
                      "819:20:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1256,
                    "src": "819:20:10"
                  },
                  "id": 928,
                  "nodeType": "InheritanceSpecifier",
                  "src": "819:20:10"
                }
              ],
              "canonicalName": "ScrollBadgePermissionless",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 920,
                "nodeType": "StructuredDocumentation",
                "src": "577:113:10",
                "text": "@title ScrollBadgePermissionless\n @notice A simple badge that anyone can mint in a permissionless manner."
              },
              "fullyImplemented": true,
              "id": 981,
              "linearizedBaseContracts": [
                981,
                1256,
                1197,
                1076,
                1054,
                905,
                646
              ],
              "name": "ScrollBadgePermissionless",
              "nameLocation": "699:25:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "992:24:10",
                    "statements": []
                  },
                  "id": 942,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 935,
                          "name": "resolver_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "929:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 936,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 934,
                        "name": "ScrollBadge",
                        "nameLocations": [
                          "917:11:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 905,
                        "src": "917:11:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "917:22:10"
                    },
                    {
                      "arguments": [
                        {
                          "id": 938,
                          "name": "_defaultBadgeURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 932,
                          "src": "970:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 939,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 937,
                        "name": "ScrollBadgeDefaultURI",
                        "nameLocations": [
                          "948:21:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1054,
                        "src": "948:21:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "948:39:10"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 933,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "resolver_",
                        "nameLocation": "866:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 942,
                        "src": "858:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 932,
                        "mutability": "mutable",
                        "name": "_defaultBadgeURI",
                        "nameLocation": "891:16:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 942,
                        "src": "877:30:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "877:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:51:10"
                  },
                  "returnParameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "992:0:10"
                  },
                  "scope": 981,
                  "src": "846:170:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    828,
                    1180,
                    1239
                  ],
                  "body": {
                    "id": 960,
                    "nodeType": "Block",
                    "src": "1246:55:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 957,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "1282:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            ],
                            "expression": {
                              "id": 955,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "1263:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ScrollBadgePermissionless_$981_$",
                                "typeString": "type(contract super ScrollBadgePermissionless)"
                              }
                            },
                            "id": 956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1269:12:10",
                            "memberName": "onIssueBadge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1239,
                            "src": "1263:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct Attestation calldata) returns (bool)"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1263:31:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 954,
                        "id": 959,
                        "nodeType": "Return",
                        "src": "1256:38:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 943,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:27:10",
                    "text": "@inheritdoc ScrollBadge"
                  },
                  "id": 961,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onIssueBadge",
                  "nameLocation": "1063:12:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 951,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 948,
                        "name": "ScrollBadge",
                        "nameLocations": [
                          "1161:11:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 905,
                        "src": "1161:11:10"
                      },
                      {
                        "id": 949,
                        "name": "ScrollBadgeSelfAttest",
                        "nameLocations": [
                          "1174:21:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1197,
                        "src": "1174:21:10"
                      },
                      {
                        "id": 950,
                        "name": "ScrollBadgeSingleton",
                        "nameLocations": [
                          "1197:20:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1256,
                        "src": "1197:20:10"
                      }
                    ],
                    "src": "1151:67:10"
                  },
                  "parameters": {
                    "id": 947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 946,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "1097:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 961,
                        "src": "1076:32:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 945,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 944,
                            "name": "Attestation",
                            "nameLocations": [
                              "1076:11:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "1076:11:10"
                          },
                          "referencedDeclaration": 47,
                          "src": "1076:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1075:34:10"
                  },
                  "returnParameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 953,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 961,
                        "src": "1236:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 952,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1236:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1235:6:10"
                  },
                  "scope": 981,
                  "src": "1054:247:10",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    840,
                    1196,
                    1255
                  ],
                  "body": {
                    "id": 979,
                    "nodeType": "Block",
                    "src": "1532:56:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 976,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 965,
                              "src": "1569:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            ],
                            "expression": {
                              "id": 974,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "1549:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ScrollBadgePermissionless_$981_$",
                                "typeString": "type(contract super ScrollBadgePermissionless)"
                              }
                            },
                            "id": 975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1555:13:10",
                            "memberName": "onRevokeBadge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1255,
                            "src": "1549:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct Attestation calldata) returns (bool)"
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1549:32:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 973,
                        "id": 978,
                        "nodeType": "Return",
                        "src": "1542:39:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 962,
                    "nodeType": "StructuredDocumentation",
                    "src": "1307:27:10",
                    "text": "@inheritdoc ScrollBadge"
                  },
                  "id": 980,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onRevokeBadge",
                  "nameLocation": "1348:13:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 970,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 967,
                        "name": "ScrollBadge",
                        "nameLocations": [
                          "1447:11:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 905,
                        "src": "1447:11:10"
                      },
                      {
                        "id": 968,
                        "name": "ScrollBadgeSelfAttest",
                        "nameLocations": [
                          "1460:21:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1197,
                        "src": "1460:21:10"
                      },
                      {
                        "id": 969,
                        "name": "ScrollBadgeSingleton",
                        "nameLocations": [
                          "1483:20:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1256,
                        "src": "1483:20:10"
                      }
                    ],
                    "src": "1437:67:10"
                  },
                  "parameters": {
                    "id": 966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 965,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "1383:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 980,
                        "src": "1362:32:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 964,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 963,
                            "name": "Attestation",
                            "nameLocations": [
                              "1362:11:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "1362:11:10"
                          },
                          "referencedDeclaration": 47,
                          "src": "1362:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1361:34:10"
                  },
                  "returnParameters": {
                    "id": 973,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 972,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 980,
                        "src": "1522:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 971,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1522:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1521:6:10"
                  },
                  "scope": 981,
                  "src": "1339:249:10",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 982,
              "src": "690:900:10",
              "usedErrors": [
                514,
                536,
                542
              ]
            }
          ],
          "src": "33:1558:10"
        },
        "id": 10
      },
      "contracts/extensions/IScrollBadgeUpgradeable.sol": {
        "ast": {
          "absolutePath": "contracts/extensions/IScrollBadgeUpgradeable.sol",
          "exportedSymbols": {
            "IScrollBadgeUpgradeable": [
              999
            ]
          },
          "id": 1000,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 983,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IScrollBadgeUpgradeable",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 984,
                "nodeType": "StructuredDocumentation",
                "src": "58:110:11",
                "text": "@title IScrollBadgeUpgradeable\n @notice This interface defines functions to facilitate badge upgrades."
              },
              "fullyImplemented": false,
              "id": 999,
              "linearizedBaseContracts": [
                999
              ],
              "name": "IScrollBadgeUpgradeable",
              "nameLocation": "178:23:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 985,
                    "nodeType": "StructuredDocumentation",
                    "src": "208:169:11",
                    "text": "@notice Checks if a badge can be upgraded.\n @param uid The unique identifier of the badge.\n @return True if the badge can be upgraded, false otherwise."
                  },
                  "functionSelector": "f942ebd6",
                  "id": 992,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canUpgrade",
                  "nameLocation": "391:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 988,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 987,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "410:3:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "402:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "402:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "401:13:11"
                  },
                  "returnParameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "438:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "438:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "437:6:11"
                  },
                  "scope": 999,
                  "src": "382:62:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 993,
                    "nodeType": "StructuredDocumentation",
                    "src": "450:270:11",
                    "text": "@notice Upgrades a badge.\n @param uid The unique identifier of the badge.\n @dev Should revert with CannotUpgrade (from Errors.sol) if the badge cannot be upgraded.\n @dev Should emit an Upgrade event (custom defined) if the upgrade is successful."
                  },
                  "functionSelector": "bc444e13",
                  "id": 998,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgrade",
                  "nameLocation": "734:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 996,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 995,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "750:3:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 998,
                        "src": "742:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "742:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "741:13:11"
                  },
                  "returnParameters": {
                    "id": 997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "763:0:11"
                  },
                  "scope": 999,
                  "src": "725:39:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1000,
              "src": "168:598:11",
              "usedErrors": []
            }
          ],
          "src": "33:734:11"
        },
        "id": 11
      },
      "contracts/extensions/ScrollBadgeDefaultURI.sol": {
        "ast": {
          "absolutePath": "contracts/extensions/ScrollBadgeDefaultURI.sol",
          "exportedSymbols": {
            "ScrollBadge": [
              905
            ],
            "ScrollBadgeDefaultURI": [
              1054
            ]
          },
          "id": 1055,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1001,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:12"
            },
            {
              "absolutePath": "contracts/ScrollBadge.sol",
              "file": "../ScrollBadge.sol",
              "id": 1003,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1055,
              "sourceUnit": 906,
              "src": "58:47:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1002,
                    "name": "ScrollBadge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 905,
                    "src": "66:11:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1005,
                    "name": "ScrollBadge",
                    "nameLocations": [
                      "235:11:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 905,
                    "src": "235:11:12"
                  },
                  "id": 1006,
                  "nodeType": "InheritanceSpecifier",
                  "src": "235:11:12"
                }
              ],
              "canonicalName": "ScrollBadgeDefaultURI",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1004,
                "nodeType": "StructuredDocumentation",
                "src": "107:85:12",
                "text": "@title ScrollBadgeDefaultURI\n @notice This contract sets a default badge URI."
              },
              "fullyImplemented": true,
              "id": 1054,
              "linearizedBaseContracts": [
                1054,
                905,
                646
              ],
              "name": "ScrollBadgeDefaultURI",
              "nameLocation": "210:21:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "b1a3a35f",
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "defaultBadgeURI",
                  "nameLocation": "267:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "253:29:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1017,
                    "nodeType": "Block",
                    "src": "333:51:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1013,
                            "name": "defaultBadgeURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1008,
                            "src": "343:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1014,
                            "name": "_defaultBadgeURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "361:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "343:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1016,
                        "nodeType": "ExpressionStatement",
                        "src": "343:34:12"
                      }
                    ]
                  },
                  "id": 1018,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1011,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "_defaultBadgeURI",
                        "nameLocation": "315:16:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1018,
                        "src": "301:30:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "301:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "300:32:12"
                  },
                  "returnParameters": {
                    "id": 1012,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "333:0:12"
                  },
                  "scope": 1054,
                  "src": "289:95:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    889
                  ],
                  "body": {
                    "id": 1041,
                    "nodeType": "Block",
                    "src": "503:125:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1027,
                            "name": "uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "517:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "532:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "524:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 1028,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "524:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "524:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "517:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1036,
                        "nodeType": "IfStatement",
                        "src": "513:70:12",
                        "trueBody": {
                          "id": 1035,
                          "nodeType": "Block",
                          "src": "536:47:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 1033,
                                "name": "defaultBadgeURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "557:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "functionReturnParameters": 1026,
                              "id": 1034,
                              "nodeType": "Return",
                              "src": "550:22:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1038,
                              "name": "uid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "617:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1037,
                            "name": "getBadgeTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "600:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (bytes32) view returns (string memory)"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "600:21:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1026,
                        "id": 1040,
                        "nodeType": "Return",
                        "src": "593:28:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1019,
                    "nodeType": "StructuredDocumentation",
                    "src": "390:27:12",
                    "text": "@inheritdoc ScrollBadge"
                  },
                  "functionSelector": "24830563",
                  "id": 1042,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "badgeTokenURI",
                  "nameLocation": "431:13:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1023,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "470:8:12"
                  },
                  "parameters": {
                    "id": 1022,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "453:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "445:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "444:13:12"
                  },
                  "returnParameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1025,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "488:13:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1024,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "488:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "487:15:12"
                  },
                  "scope": 1054,
                  "src": "422:206:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1052,
                    "nodeType": "Block",
                    "src": "888:39:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1050,
                          "name": "defaultBadgeURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "905:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1049,
                        "id": 1051,
                        "nodeType": "Return",
                        "src": "898:22:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1043,
                    "nodeType": "StructuredDocumentation",
                    "src": "634:168:12",
                    "text": "@notice Returns the token URI corresponding to a certain badge UID.\n @param {uid} The badge UID.\n @return The badge token URI (same format as ERC721)."
                  },
                  "id": 1053,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBadgeTokenURI",
                  "nameLocation": "816:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1046,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "833:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "833:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "832:9:12"
                  },
                  "returnParameters": {
                    "id": 1049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1048,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "873:13:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "873:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "872:15:12"
                  },
                  "scope": 1054,
                  "src": "807:120:12",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1055,
              "src": "192:737:12",
              "usedErrors": [
                514,
                542
              ]
            }
          ],
          "src": "33:897:12"
        },
        "id": 12
      },
      "contracts/extensions/ScrollBadgeEligibilityCheck.sol": {
        "ast": {
          "absolutePath": "contracts/extensions/ScrollBadgeEligibilityCheck.sol",
          "exportedSymbols": {
            "ScrollBadge": [
              905
            ],
            "ScrollBadgeEligibilityCheck": [
              1076
            ]
          },
          "id": 1077,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1056,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:13"
            },
            {
              "absolutePath": "contracts/ScrollBadge.sol",
              "file": "../ScrollBadge.sol",
              "id": 1058,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1077,
              "sourceUnit": 906,
              "src": "58:47:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1057,
                    "name": "ScrollBadge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 905,
                    "src": "66:11:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1060,
                    "name": "ScrollBadge",
                    "nameLocations": [
                      "269:11:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 905,
                    "src": "269:11:13"
                  },
                  "id": 1061,
                  "nodeType": "InheritanceSpecifier",
                  "src": "269:11:13"
                }
              ],
              "canonicalName": "ScrollBadgeEligibilityCheck",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1059,
                "nodeType": "StructuredDocumentation",
                "src": "107:113:13",
                "text": "@title ScrollBadgeEligibilityCheck\n @notice This contract adds a standard on-chain eligibility check API."
              },
              "fullyImplemented": false,
              "id": 1076,
              "linearizedBaseContracts": [
                1076,
                905,
                646
              ],
              "name": "ScrollBadgeEligibilityCheck",
              "nameLocation": "238:27:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1074,
                    "nodeType": "Block",
                    "src": "526:44:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "543:20:13",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1070,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1064,
                                "src": "553:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1069,
                              "name": "hasBadge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "544:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 1071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "544:19:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1068,
                        "id": 1073,
                        "nodeType": "Return",
                        "src": "536:27:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1062,
                    "nodeType": "StructuredDocumentation",
                    "src": "287:163:13",
                    "text": "@notice Check if user is eligible to mint this badge.\n @param recipient The user's wallet address.\n @return Whether the user is eligible to mint."
                  },
                  "functionSelector": "66e305fd",
                  "id": 1075,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isEligible",
                  "nameLocation": "464:10:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "483:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "475:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "475:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "474:19:13"
                  },
                  "returnParameters": {
                    "id": 1068,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1067,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "520:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1066,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "520:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "519:6:13"
                  },
                  "scope": 1076,
                  "src": "455:115:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 1077,
              "src": "220:352:13",
              "usedErrors": [
                514,
                542
              ]
            }
          ],
          "src": "33:540:13"
        },
        "id": 13
      },
      "contracts/extensions/ScrollBadgeNoExpiry.sol": {
        "ast": {
          "absolutePath": "contracts/extensions/ScrollBadgeNoExpiry.sol",
          "exportedSymbols": {
            "Attestation": [
              47
            ],
            "ExpirationDisabled": [
              528
            ],
            "NO_EXPIRATION_TIME": [
              7
            ],
            "ScrollBadge": [
              905
            ],
            "ScrollBadgeNoExpiry": [
              1137
            ]
          },
          "id": 1138,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1078,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:14"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "file": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "id": 1080,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1138,
              "sourceUnit": 361,
              "src": "58:91:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1079,
                    "name": "Attestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "66:11:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/Common.sol",
              "file": "@ethereum-attestation-service/eas-contracts/contracts/Common.sol",
              "id": 1082,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1138,
              "sourceUnit": 64,
              "src": "150:100:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1081,
                    "name": "NO_EXPIRATION_TIME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "158:18:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ScrollBadge.sol",
              "file": "../ScrollBadge.sol",
              "id": 1084,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1138,
              "sourceUnit": 906,
              "src": "252:47:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1083,
                    "name": "ScrollBadge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 905,
                    "src": "260:11:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Errors.sol",
              "file": "../Errors.sol",
              "id": 1086,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1138,
              "sourceUnit": 591,
              "src": "300:49:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1085,
                    "name": "ExpirationDisabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 528,
                    "src": "308:18:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1088,
                    "name": "ScrollBadge",
                    "nameLocations": [
                      "485:11:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 905,
                    "src": "485:11:14"
                  },
                  "id": 1089,
                  "nodeType": "InheritanceSpecifier",
                  "src": "485:11:14"
                }
              ],
              "canonicalName": "ScrollBadgeNoExpiry",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1087,
                "nodeType": "StructuredDocumentation",
                "src": "351:93:14",
                "text": "@title ScrollBadgeNoExpiry\n @notice This contract disables expiration for this badge."
              },
              "fullyImplemented": false,
              "id": 1137,
              "linearizedBaseContracts": [
                1137,
                905,
                646
              ],
              "name": "ScrollBadgeNoExpiry",
              "nameLocation": "462:19:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    828
                  ],
                  "body": {
                    "id": 1119,
                    "nodeType": "Block",
                    "src": "632:229:14",
                    "statements": [
                      {
                        "condition": {
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "646:32:14",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1101,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1093,
                                "src": "666:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              ],
                              "expression": {
                                "id": 1099,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "647:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_ScrollBadgeNoExpiry_$1137_$",
                                  "typeString": "type(contract super ScrollBadgeNoExpiry)"
                                }
                              },
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "653:12:14",
                              "memberName": "onIssueBadge",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 828,
                              "src": "647:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function (struct Attestation calldata) returns (bool)"
                              }
                            },
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "647:31:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1107,
                        "nodeType": "IfStatement",
                        "src": "642:75:14",
                        "trueBody": {
                          "id": 1106,
                          "nodeType": "Block",
                          "src": "680:37:14",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "701:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1098,
                              "id": 1105,
                              "nodeType": "Return",
                              "src": "694:12:14"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1108,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "731:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            },
                            "id": 1109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "743:14:14",
                            "memberName": "expirationTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "731:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1110,
                            "name": "NO_EXPIRATION_TIME",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "761:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "731:48:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1116,
                        "nodeType": "IfStatement",
                        "src": "727:106:14",
                        "trueBody": {
                          "id": 1115,
                          "nodeType": "Block",
                          "src": "781:52:14",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1112,
                                  "name": "ExpirationDisabled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 528,
                                  "src": "802:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "802:20:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1114,
                              "nodeType": "RevertStatement",
                              "src": "795:27:14"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "850:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1098,
                        "id": 1118,
                        "nodeType": "Return",
                        "src": "843:11:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1090,
                    "nodeType": "StructuredDocumentation",
                    "src": "503:27:14",
                    "text": "@inheritdoc ScrollBadge"
                  },
                  "id": 1120,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onIssueBadge",
                  "nameLocation": "544:12:14",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1095,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "608:8:14"
                  },
                  "parameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "578:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "557:32:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 1092,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1091,
                            "name": "Attestation",
                            "nameLocations": [
                              "557:11:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "557:11:14"
                          },
                          "referencedDeclaration": 47,
                          "src": "557:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "556:34:14"
                  },
                  "returnParameters": {
                    "id": 1098,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1097,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "626:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1096,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "626:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "625:6:14"
                  },
                  "scope": 1137,
                  "src": "535:326:14",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    840
                  ],
                  "body": {
                    "id": 1135,
                    "nodeType": "Block",
                    "src": "997:56:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1132,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1124,
                              "src": "1034:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            ],
                            "expression": {
                              "id": 1130,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "1014:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ScrollBadgeNoExpiry_$1137_$",
                                "typeString": "type(contract super ScrollBadgeNoExpiry)"
                              }
                            },
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1020:13:14",
                            "memberName": "onRevokeBadge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 840,
                            "src": "1014:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct Attestation calldata) returns (bool)"
                            }
                          },
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1014:32:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1129,
                        "id": 1134,
                        "nodeType": "Return",
                        "src": "1007:39:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1121,
                    "nodeType": "StructuredDocumentation",
                    "src": "867:27:14",
                    "text": "@inheritdoc ScrollBadge"
                  },
                  "id": 1136,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onRevokeBadge",
                  "nameLocation": "908:13:14",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1126,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "973:8:14"
                  },
                  "parameters": {
                    "id": 1125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "943:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "922:32:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 1123,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1122,
                            "name": "Attestation",
                            "nameLocations": [
                              "922:11:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "922:11:14"
                          },
                          "referencedDeclaration": 47,
                          "src": "922:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "921:34:14"
                  },
                  "returnParameters": {
                    "id": 1129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "991:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "991:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "990:6:14"
                  },
                  "scope": 1137,
                  "src": "899:154:14",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1138,
              "src": "444:611:14",
              "usedErrors": [
                514,
                528,
                542
              ]
            }
          ],
          "src": "33:1023:14"
        },
        "id": 14
      },
      "contracts/extensions/ScrollBadgeSelfAttest.sol": {
        "ast": {
          "absolutePath": "contracts/extensions/ScrollBadgeSelfAttest.sol",
          "exportedSymbols": {
            "Attestation": [
              47
            ],
            "ScrollBadge": [
              905
            ],
            "ScrollBadgeSelfAttest": [
              1197
            ],
            "Unauthorized": [
              514
            ]
          },
          "id": 1198,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1139,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:15"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "file": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "id": 1141,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 361,
              "src": "114:91:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1140,
                    "name": "Attestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "122:11:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ScrollBadge.sol",
              "file": "../ScrollBadge.sol",
              "id": 1143,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 906,
              "src": "207:47:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1142,
                    "name": "ScrollBadge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 905,
                    "src": "215:11:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Errors.sol",
              "file": "../Errors.sol",
              "id": 1145,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 591,
              "src": "255:43:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1144,
                    "name": "Unauthorized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 514,
                    "src": "263:12:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1147,
                    "name": "ScrollBadge",
                    "nameLocations": [
                      "452:11:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 905,
                    "src": "452:11:15"
                  },
                  "id": 1148,
                  "nodeType": "InheritanceSpecifier",
                  "src": "452:11:15"
                }
              ],
              "canonicalName": "ScrollBadgeSelfAttest",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1146,
                "nodeType": "StructuredDocumentation",
                "src": "300:109:15",
                "text": "@title ScrollBadgeSelfAttest\n @notice This contract ensures that only the badge recipient can attest."
              },
              "fullyImplemented": false,
              "id": 1197,
              "linearizedBaseContracts": [
                1197,
                905,
                646
              ],
              "name": "ScrollBadgeSelfAttest",
              "nameLocation": "427:21:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    828
                  ],
                  "body": {
                    "id": 1179,
                    "nodeType": "Block",
                    "src": "599:220:15",
                    "statements": [
                      {
                        "condition": {
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "613:32:15",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1160,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1152,
                                "src": "633:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              ],
                              "expression": {
                                "id": 1158,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "614:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_ScrollBadgeSelfAttest_$1197_$",
                                  "typeString": "type(contract super ScrollBadgeSelfAttest)"
                                }
                              },
                              "id": 1159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "620:12:15",
                              "memberName": "onIssueBadge",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 828,
                              "src": "614:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function (struct Attestation calldata) returns (bool)"
                              }
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "614:31:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1166,
                        "nodeType": "IfStatement",
                        "src": "609:75:15",
                        "trueBody": {
                          "id": 1165,
                          "nodeType": "Block",
                          "src": "647:37:15",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "668:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1157,
                              "id": 1164,
                              "nodeType": "Return",
                              "src": "661:12:15"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1167,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1152,
                              "src": "698:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            },
                            "id": 1168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "710:9:15",
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40,
                            "src": "698:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1169,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1152,
                              "src": "723:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            },
                            "id": 1170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "735:8:15",
                            "memberName": "attester",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42,
                            "src": "723:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "698:45:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1176,
                        "nodeType": "IfStatement",
                        "src": "694:97:15",
                        "trueBody": {
                          "id": 1175,
                          "nodeType": "Block",
                          "src": "745:46:15",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1172,
                                  "name": "Unauthorized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 514,
                                  "src": "766:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "766:14:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1174,
                              "nodeType": "RevertStatement",
                              "src": "759:21:15"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "808:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1157,
                        "id": 1178,
                        "nodeType": "Return",
                        "src": "801:11:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1149,
                    "nodeType": "StructuredDocumentation",
                    "src": "470:27:15",
                    "text": "@inheritdoc ScrollBadge"
                  },
                  "id": 1180,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onIssueBadge",
                  "nameLocation": "511:12:15",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1154,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "575:8:15"
                  },
                  "parameters": {
                    "id": 1153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1152,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "545:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "524:32:15",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 1151,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1150,
                            "name": "Attestation",
                            "nameLocations": [
                              "524:11:15"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "524:11:15"
                          },
                          "referencedDeclaration": 47,
                          "src": "524:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "523:34:15"
                  },
                  "returnParameters": {
                    "id": 1157,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1156,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "593:4:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1155,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "593:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "592:6:15"
                  },
                  "scope": 1197,
                  "src": "502:317:15",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    840
                  ],
                  "body": {
                    "id": 1195,
                    "nodeType": "Block",
                    "src": "955:56:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1192,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1184,
                              "src": "992:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            ],
                            "expression": {
                              "id": 1190,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "972:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ScrollBadgeSelfAttest_$1197_$",
                                "typeString": "type(contract super ScrollBadgeSelfAttest)"
                              }
                            },
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "978:13:15",
                            "memberName": "onRevokeBadge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 840,
                            "src": "972:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct Attestation calldata) returns (bool)"
                            }
                          },
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "972:32:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1189,
                        "id": 1194,
                        "nodeType": "Return",
                        "src": "965:39:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1181,
                    "nodeType": "StructuredDocumentation",
                    "src": "825:27:15",
                    "text": "@inheritdoc ScrollBadge"
                  },
                  "id": 1196,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onRevokeBadge",
                  "nameLocation": "866:13:15",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1186,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "931:8:15"
                  },
                  "parameters": {
                    "id": 1185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1184,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "901:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "880:32:15",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 1183,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1182,
                            "name": "Attestation",
                            "nameLocations": [
                              "880:11:15"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "880:11:15"
                          },
                          "referencedDeclaration": 47,
                          "src": "880:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "879:34:15"
                  },
                  "returnParameters": {
                    "id": 1189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1188,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "949:4:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "949:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "948:6:15"
                  },
                  "scope": 1197,
                  "src": "857:154:15",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1198,
              "src": "409:604:15",
              "usedErrors": [
                514,
                542
              ]
            }
          ],
          "src": "33:981:15"
        },
        "id": 15
      },
      "contracts/extensions/ScrollBadgeSingleton.sol": {
        "ast": {
          "absolutePath": "contracts/extensions/ScrollBadgeSingleton.sol",
          "exportedSymbols": {
            "Attestation": [
              47
            ],
            "ScrollBadge": [
              905
            ],
            "ScrollBadgeSingleton": [
              1256
            ],
            "SingletonBadge": [
              536
            ]
          },
          "id": 1257,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1199,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:16"
            },
            {
              "absolutePath": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "file": "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol",
              "id": 1201,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1257,
              "sourceUnit": 361,
              "src": "114:91:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1200,
                    "name": "Attestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "122:11:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ScrollBadge.sol",
              "file": "../ScrollBadge.sol",
              "id": 1203,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1257,
              "sourceUnit": 906,
              "src": "207:47:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1202,
                    "name": "ScrollBadge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 905,
                    "src": "215:11:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Errors.sol",
              "file": "../Errors.sol",
              "id": 1205,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1257,
              "sourceUnit": 591,
              "src": "255:45:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1204,
                    "name": "SingletonBadge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 536,
                    "src": "263:14:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1207,
                    "name": "ScrollBadge",
                    "nameLocations": [
                      "443:11:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 905,
                    "src": "443:11:16"
                  },
                  "id": 1208,
                  "nodeType": "InheritanceSpecifier",
                  "src": "443:11:16"
                }
              ],
              "canonicalName": "ScrollBadgeSingleton",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1206,
                "nodeType": "StructuredDocumentation",
                "src": "302:99:16",
                "text": "@title ScrollBadgeSingleton\n @notice This contract only allows one active badge per wallet."
              },
              "fullyImplemented": false,
              "id": 1256,
              "linearizedBaseContracts": [
                1256,
                905,
                646
              ],
              "name": "ScrollBadgeSingleton",
              "nameLocation": "419:20:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    828
                  ],
                  "body": {
                    "id": 1238,
                    "nodeType": "Block",
                    "src": "590:208:16",
                    "statements": [
                      {
                        "condition": {
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "604:32:16",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1220,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1212,
                                "src": "624:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              ],
                              "expression": {
                                "id": 1218,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "605:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_ScrollBadgeSingleton_$1256_$",
                                  "typeString": "type(contract super ScrollBadgeSingleton)"
                                }
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "611:12:16",
                              "memberName": "onIssueBadge",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 828,
                              "src": "605:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function (struct Attestation calldata) returns (bool)"
                              }
                            },
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "605:31:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1226,
                        "nodeType": "IfStatement",
                        "src": "600:75:16",
                        "trueBody": {
                          "id": 1225,
                          "nodeType": "Block",
                          "src": "638:37:16",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "659:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1217,
                              "id": 1224,
                              "nodeType": "Return",
                              "src": "652:12:16"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1228,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1212,
                                "src": "698:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                  "typeString": "struct Attestation calldata"
                                }
                              },
                              "id": 1229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "710:9:16",
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "698:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1227,
                            "name": "hasBadge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "689:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "689:31:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1235,
                        "nodeType": "IfStatement",
                        "src": "685:85:16",
                        "trueBody": {
                          "id": 1234,
                          "nodeType": "Block",
                          "src": "722:48:16",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1231,
                                  "name": "SingletonBadge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "743:14:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "743:16:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1233,
                              "nodeType": "RevertStatement",
                              "src": "736:23:16"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "787:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1217,
                        "id": 1237,
                        "nodeType": "Return",
                        "src": "780:11:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1209,
                    "nodeType": "StructuredDocumentation",
                    "src": "461:27:16",
                    "text": "@inheritdoc ScrollBadge"
                  },
                  "id": 1239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onIssueBadge",
                  "nameLocation": "502:12:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1214,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "566:8:16"
                  },
                  "parameters": {
                    "id": 1213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1212,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "536:11:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "515:32:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 1211,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1210,
                            "name": "Attestation",
                            "nameLocations": [
                              "515:11:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "515:11:16"
                          },
                          "referencedDeclaration": 47,
                          "src": "515:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "514:34:16"
                  },
                  "returnParameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "584:4:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "584:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "583:6:16"
                  },
                  "scope": 1256,
                  "src": "493:305:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    840
                  ],
                  "body": {
                    "id": 1254,
                    "nodeType": "Block",
                    "src": "934:56:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1251,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1243,
                              "src": "971:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                                "typeString": "struct Attestation calldata"
                              }
                            ],
                            "expression": {
                              "id": 1249,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "951:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ScrollBadgeSingleton_$1256_$",
                                "typeString": "type(contract super ScrollBadgeSingleton)"
                              }
                            },
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "957:13:16",
                            "memberName": "onRevokeBadge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 840,
                            "src": "951:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Attestation_$47_calldata_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct Attestation calldata) returns (bool)"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "951:32:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1248,
                        "id": 1253,
                        "nodeType": "Return",
                        "src": "944:39:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1240,
                    "nodeType": "StructuredDocumentation",
                    "src": "804:27:16",
                    "text": "@inheritdoc ScrollBadge"
                  },
                  "id": 1255,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onRevokeBadge",
                  "nameLocation": "845:13:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1245,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "910:8:16"
                  },
                  "parameters": {
                    "id": 1244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1243,
                        "mutability": "mutable",
                        "name": "attestation",
                        "nameLocation": "880:11:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "859:32:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$47_calldata_ptr",
                          "typeString": "struct Attestation"
                        },
                        "typeName": {
                          "id": 1242,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1241,
                            "name": "Attestation",
                            "nameLocations": [
                              "859:11:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47,
                            "src": "859:11:16"
                          },
                          "referencedDeclaration": 47,
                          "src": "859:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$47_storage_ptr",
                            "typeString": "struct Attestation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "858:34:16"
                  },
                  "returnParameters": {
                    "id": 1248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1247,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "928:4:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1246,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "928:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "927:6:16"
                  },
                  "scope": 1256,
                  "src": "836:154:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1257,
              "src": "401:591:16",
              "usedErrors": [
                514,
                536,
                542
              ]
            }
          ],
          "src": "33:960:16"
        },
        "id": 16
      }
    },
    "contracts": {
      "@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol": {
        "IEAS": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ],
              "name": "Attested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ],
              "name": "Revoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "revoker",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "data",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint64",
                  "name": "timestamp",
                  "type": "uint64"
                }
              ],
              "name": "RevokedOffchain",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "data",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint64",
                  "name": "timestamp",
                  "type": "uint64"
                }
              ],
              "name": "Timestamped",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "recipient",
                          "type": "address"
                        },
                        {
                          "internalType": "uint64",
                          "name": "expirationTime",
                          "type": "uint64"
                        },
                        {
                          "internalType": "bool",
                          "name": "revocable",
                          "type": "bool"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "refUID",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct AttestationRequestData",
                      "name": "data",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct AttestationRequest",
                  "name": "request",
                  "type": "tuple"
                }
              ],
              "name": "attest",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "recipient",
                          "type": "address"
                        },
                        {
                          "internalType": "uint64",
                          "name": "expirationTime",
                          "type": "uint64"
                        },
                        {
                          "internalType": "bool",
                          "name": "revocable",
                          "type": "bool"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "refUID",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct AttestationRequestData",
                      "name": "data",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "v",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "s",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct Signature",
                      "name": "signature",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "uint64",
                      "name": "deadline",
                      "type": "uint64"
                    }
                  ],
                  "internalType": "struct DelegatedAttestationRequest",
                  "name": "delegatedRequest",
                  "type": "tuple"
                }
              ],
              "name": "attestByDelegation",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAttestation",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "revoker",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "data",
                  "type": "bytes32"
                }
              ],
              "name": "getRevokeOffchain",
              "outputs": [
                {
                  "internalType": "uint64",
                  "name": "",
                  "type": "uint64"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSchemaRegistry",
              "outputs": [
                {
                  "internalType": "contract ISchemaRegistry",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "data",
                  "type": "bytes32"
                }
              ],
              "name": "getTimestamp",
              "outputs": [
                {
                  "internalType": "uint64",
                  "name": "",
                  "type": "uint64"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "isAttestationValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "recipient",
                          "type": "address"
                        },
                        {
                          "internalType": "uint64",
                          "name": "expirationTime",
                          "type": "uint64"
                        },
                        {
                          "internalType": "bool",
                          "name": "revocable",
                          "type": "bool"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "refUID",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct AttestationRequestData[]",
                      "name": "data",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct MultiAttestationRequest[]",
                  "name": "multiRequests",
                  "type": "tuple[]"
                }
              ],
              "name": "multiAttest",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "recipient",
                          "type": "address"
                        },
                        {
                          "internalType": "uint64",
                          "name": "expirationTime",
                          "type": "uint64"
                        },
                        {
                          "internalType": "bool",
                          "name": "revocable",
                          "type": "bool"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "refUID",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct AttestationRequestData[]",
                      "name": "data",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "v",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "s",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct Signature[]",
                      "name": "signatures",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "uint64",
                      "name": "deadline",
                      "type": "uint64"
                    }
                  ],
                  "internalType": "struct MultiDelegatedAttestationRequest[]",
                  "name": "multiDelegatedRequests",
                  "type": "tuple[]"
                }
              ],
              "name": "multiAttestByDelegation",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "uid",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct RevocationRequestData[]",
                      "name": "data",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct MultiRevocationRequest[]",
                  "name": "multiRequests",
                  "type": "tuple[]"
                }
              ],
              "name": "multiRevoke",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "uid",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct RevocationRequestData[]",
                      "name": "data",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "v",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "s",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct Signature[]",
                      "name": "signatures",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "address",
                      "name": "revoker",
                      "type": "address"
                    },
                    {
                      "internalType": "uint64",
                      "name": "deadline",
                      "type": "uint64"
                    }
                  ],
                  "internalType": "struct MultiDelegatedRevocationRequest[]",
                  "name": "multiDelegatedRequests",
                  "type": "tuple[]"
                }
              ],
              "name": "multiRevokeByDelegation",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "multiRevokeOffchain",
              "outputs": [
                {
                  "internalType": "uint64",
                  "name": "",
                  "type": "uint64"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "multiTimestamp",
              "outputs": [
                {
                  "internalType": "uint64",
                  "name": "",
                  "type": "uint64"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "uid",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct RevocationRequestData",
                      "name": "data",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct RevocationRequest",
                  "name": "request",
                  "type": "tuple"
                }
              ],
              "name": "revoke",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "uid",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct RevocationRequestData",
                      "name": "data",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "v",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "s",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct Signature",
                      "name": "signature",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "revoker",
                      "type": "address"
                    },
                    {
                      "internalType": "uint64",
                      "name": "deadline",
                      "type": "uint64"
                    }
                  ],
                  "internalType": "struct DelegatedRevocationRequest",
                  "name": "delegatedRequest",
                  "type": "tuple"
                }
              ],
              "name": "revokeByDelegation",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "data",
                  "type": "bytes32"
                }
              ],
              "name": "revokeOffchain",
              "outputs": [
                {
                  "internalType": "uint64",
                  "name": "",
                  "type": "uint64"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "data",
                  "type": "bytes32"
                }
              ],
              "name": "timestamp",
              "outputs": [
                {
                  "internalType": "uint64",
                  "name": "",
                  "type": "uint64"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))": "f17325e7",
              "attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))": "3c042715",
              "getAttestation(bytes32)": "a3112a64",
              "getRevokeOffchain(address,bytes32)": "b469318d",
              "getSchemaRegistry()": "f10b5cc8",
              "getTimestamp(bytes32)": "d45c4435",
              "isAttestationValid(bytes32)": "e30bb563",
              "multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])": "44adc90e",
              "multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": "95411525",
              "multiRevoke((bytes32,(bytes32,uint256)[])[])": "4cb7e9e5",
              "multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])": "0eabf660",
              "multiRevokeOffchain(bytes32[])": "13893f61",
              "multiTimestamp(bytes32[])": "e71ff365",
              "revoke((bytes32,(bytes32,uint256)))": "46926267",
              "revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))": "a6d4dbc7",
              "revokeOffchain(bytes32)": "cf190f34",
              "timestamp(bytes32)": "4d003070",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"name\":\"Attested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"RevokedOffchain\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"Timestamped\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct AttestationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData\",\"name\":\"data\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct DelegatedAttestationRequest\",\"name\":\"delegatedRequest\",\"type\":\"tuple\"}],\"name\":\"attestByDelegation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"getRevokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchemaRegistry\",\"outputs\":[{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"isAttestationValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"internalType\":\"struct MultiAttestationRequest[]\",\"name\":\"multiRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct MultiDelegatedAttestationRequest[]\",\"name\":\"multiDelegatedRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiAttestByDelegation\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"internalType\":\"struct MultiRevocationRequest[]\",\"name\":\"multiRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiRevoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct MultiDelegatedRevocationRequest[]\",\"name\":\"multiDelegatedRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiRevokeByDelegation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"multiRevokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"multiTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct RevocationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData\",\"name\":\"data\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct DelegatedRevocationRequest\",\"name\":\"delegatedRequest\",\"type\":\"tuple\"}],\"name\":\"revokeByDelegation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"revokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"timestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Attested(address,address,bytes32,bytes32)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"schemaUID\":\"The UID of the schema.\",\"uid\":\"The UID of the new attestation.\"}},\"Revoked(address,address,bytes32,bytes32)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"schemaUID\":\"The UID of the schema.\",\"uid\":\"The UID the revoked attestation.\"}},\"RevokedOffchain(address,bytes32,uint64)\":{\"params\":{\"data\":\"The data.\",\"revoker\":\"The address of the revoker.\",\"timestamp\":\"The timestamp.\"}},\"Timestamped(bytes32,uint64)\":{\"params\":{\"data\":\"The data.\",\"timestamp\":\"The timestamp.\"}}},\"kind\":\"dev\",\"methods\":{\"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))\":{\"params\":{\"request\":\"The arguments of the attestation request.\"},\"returns\":{\"_0\":\"The UID of the new attestation. Example:     attest({         schema: \\\"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\\\",         data: {             recipient: \\\"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\\\",             expirationTime: 0,             revocable: true,             refUID: \\\"0x0000000000000000000000000000000000000000000000000000000000000000\\\",             data: \\\"0xF00D\\\",             value: 0         }     })\"}},\"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"params\":{\"delegatedRequest\":\"The arguments of the delegated attestation request.\"},\"returns\":{\"_0\":\"The UID of the new attestation. Example:     attestByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         signature: {             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',         deadline: 1673891048     })\"}},\"getAttestation(bytes32)\":{\"params\":{\"uid\":\"The UID of the attestation to retrieve.\"},\"returns\":{\"_0\":\"The attestation data members.\"}},\"getRevokeOffchain(address,bytes32)\":{\"params\":{\"data\":\"The data to query.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"getSchemaRegistry()\":{\"returns\":{\"_0\":\"The address of the global schema registry.\"}},\"getTimestamp(bytes32)\":{\"params\":{\"data\":\"The data to query.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"isAttestationValid(bytes32)\":{\"params\":{\"uid\":\"The UID of the attestation to retrieve.\"},\"returns\":{\"_0\":\"Whether an attestation exists.\"}},\"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])\":{\"params\":{\"multiRequests\":\"The arguments of the multi attestation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization.\"},\"returns\":{\"_0\":\"The UIDs of the new attestations. Example:     multiAttest([{         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 1000         },         {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 0,             revocable: false,             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',             data: '0x00',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: true,             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',             data: '0x12345678',             value: 0         },     }])\"}},\"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"params\":{\"multiDelegatedRequests\":\"The arguments of the delegated multi attestation requests. The requests should be     grouped by distinct schema ids to benefit from the best batching optimization.\"},\"returns\":{\"_0\":\"The UIDs of the new attestations. Example:     multiAttestByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         {             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: false,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x00',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',         deadline: 1673891048     }])\"}},\"multiRevoke((bytes32,(bytes32,uint256)[])[])\":{\"params\":{\"multiRequests\":\"The arguments of the multi revocation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization. Example:     multiRevoke([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',             value: 0         },     }])\"}},\"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"params\":{\"multiDelegatedRequests\":\"The arguments of the delegated multi revocation attestation requests. The requests     should be grouped by distinct schema ids to benefit from the best batching optimization. Example:     multiRevokeByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     }])\"}},\"multiRevokeOffchain(bytes32[])\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was revoked with.\"}},\"multiTimestamp(bytes32[])\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"revoke((bytes32,(bytes32,uint256)))\":{\"params\":{\"request\":\"The arguments of the revocation request. Example:     revoke({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',             value: 0         }     })\"}},\"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"params\":{\"delegatedRequest\":\"The arguments of the delegated revocation request. Example:     revokeByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',             value: 0         },         signature: {             v: 27,             r: '0xb593...7142',             s: '0x0f5b...2cce'         },         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     })\"}},\"revokeOffchain(bytes32)\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was revoked with.\"}},\"timestamp(bytes32)\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"IEAS\",\"version\":1},\"userdoc\":{\"events\":{\"Attested(address,address,bytes32,bytes32)\":{\"notice\":\"Emitted when an attestation has been made.\"},\"Revoked(address,address,bytes32,bytes32)\":{\"notice\":\"Emitted when an attestation has been revoked.\"},\"RevokedOffchain(address,bytes32,uint64)\":{\"notice\":\"Emitted when a data has been revoked.\"},\"Timestamped(bytes32,uint64)\":{\"notice\":\"Emitted when a data has been timestamped.\"}},\"kind\":\"user\",\"methods\":{\"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))\":{\"notice\":\"Attests to a specific schema.\"},\"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"notice\":\"Attests to a specific schema via the provided ECDSA signature.\"},\"getAttestation(bytes32)\":{\"notice\":\"Returns an existing attestation by UID.\"},\"getRevokeOffchain(address,bytes32)\":{\"notice\":\"Returns the timestamp that the specified data was timestamped with.\"},\"getSchemaRegistry()\":{\"notice\":\"Returns the address of the global schema registry.\"},\"getTimestamp(bytes32)\":{\"notice\":\"Returns the timestamp that the specified data was timestamped with.\"},\"isAttestationValid(bytes32)\":{\"notice\":\"Checks whether an attestation exists.\"},\"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])\":{\"notice\":\"Attests to multiple schemas.\"},\"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"notice\":\"Attests to multiple schemas using via provided ECDSA signatures.\"},\"multiRevoke((bytes32,(bytes32,uint256)[])[])\":{\"notice\":\"Revokes existing attestations to multiple schemas.\"},\"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"notice\":\"Revokes existing attestations to multiple schemas via provided ECDSA signatures.\"},\"multiRevokeOffchain(bytes32[])\":{\"notice\":\"Revokes the specified multiple bytes32 data.\"},\"multiTimestamp(bytes32[])\":{\"notice\":\"Timestamps the specified multiple bytes32 data.\"},\"revoke((bytes32,(bytes32,uint256)))\":{\"notice\":\"Revokes an existing attestation to a specific schema.\"},\"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"notice\":\"Revokes an existing attestation to a specific schema via the provided ECDSA signature.\"},\"revokeOffchain(bytes32)\":{\"notice\":\"Revokes the specified bytes32 data.\"},\"timestamp(bytes32)\":{\"notice\":\"Timestamps the specified bytes32 data.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"EAS - Ethereum Attestation Service interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":\"IEAS\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]}},\"version\":1}"
        }
      },
      "@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol": {
        "ISchemaRegistry": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "registerer",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "contract ISchemaResolver",
                      "name": "resolver",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "string",
                      "name": "schema",
                      "type": "string"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct SchemaRecord",
                  "name": "schema",
                  "type": "tuple"
                }
              ],
              "name": "Registered",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getSchema",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "contract ISchemaResolver",
                      "name": "resolver",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "string",
                      "name": "schema",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct SchemaRecord",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "name": "register",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getSchema(bytes32)": "a2ea7c6e",
              "register(string,address,bool)": "60d7a278",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registerer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct SchemaRecord\",\"name\":\"schema\",\"type\":\"tuple\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"params\":{\"registerer\":\"The address of the account used to register the schema.\",\"schema\":\"The schema data.\",\"uid\":\"The schema UID.\"}}},\"kind\":\"dev\",\"methods\":{\"getSchema(bytes32)\":{\"params\":{\"uid\":\"The UID of the schema to retrieve.\"},\"returns\":{\"_0\":\"The schema data members.\"}},\"register(string,address,bool)\":{\"params\":{\"resolver\":\"An optional schema resolver.\",\"revocable\":\"Whether the schema allows revocations explicitly.\",\"schema\":\"The schema data schema.\"},\"returns\":{\"_0\":\"The UID of the new schema.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"ISchemaRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"notice\":\"Emitted when a new schema has been registered\"}},\"kind\":\"user\",\"methods\":{\"getSchema(bytes32)\":{\"notice\":\"Returns an existing schema by UID\"},\"register(string,address,bool)\":{\"notice\":\"Submits and reserves a new schema\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The interface of global attestation schemas for the Ethereum Attestation Service protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":\"ISchemaRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]}},\"version\":1}"
        }
      },
      "@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol": {
        "ISemver": {
          "abi": [
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"ISemver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"A semver interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":\"ISemver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]}},\"version\":1}"
        }
      },
      "@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "ISchemaResolver": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "attest",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isPayable",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation[]",
                  "name": "attestations",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "multiAttest",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation[]",
                  "name": "attestations",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "multiRevoke",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "revoke",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
              "isPayable()": "ce46e046",
              "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
              "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
              "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"ISchemaResolver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The interface of an optional schema resolver.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":\"ISchemaResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]}},\"version\":1}"
        }
      },
      "contracts/IScrollBadge.sol": {
        "IScrollBadge": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "IssueBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "RevokeBadge",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "badgeTokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAndValidateBadge",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "hasBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "issueBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "revokeBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "badgeTokenURI(bytes32)": "24830563",
              "getAndValidateBadge(bytes32)": "8c6f12f0",
              "hasBadge(address)": "5e50864f",
              "issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "d753a63d",
              "revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "8298b030"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"IssueBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"RevokeBadge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"badgeTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAndValidateBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"issueBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revokeBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"params\":{\"uid\":\"The badge UID, or 0x0.\"},\"returns\":{\"_0\":\"The badge token URI (same format as ERC721).\"}},\"getAndValidateBadge(bytes32)\":{\"params\":{\"uid\":\"The attestation UID.\"},\"returns\":{\"_0\":\"The attestation.\"}},\"hasBadge(address)\":{\"params\":{\"user\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"True if the user has one or more of this badge.\"}},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"notice\":\"Returns the token URI corresponding to a certain badge UID, or the default         badge token URI if the pass UID is 0x0.\"},\"getAndValidateBadge(bytes32)\":{\"notice\":\"Validate and return a Scroll badge attestation.\"},\"hasBadge(address)\":{\"notice\":\"Returns true if the user has one or more of this badge.\"},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `issueBadge` function in the parent contract.\"},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `revokeBadge` function in the parent contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IScrollBadge.sol\":\"IScrollBadge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]},\"contracts/IScrollBadge.sol\":{\"keccak256\":\"0xafb4fc95ca0ce61b55bfb6438f2b11a985cd9096e576b3008942bdac5a04c509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc926a9ae7de4a52906d71fa10b8c095756fe7b67ccc87694ba7ef7c5fce7ef9\",\"dweb:/ipfs/QmcPkS1H4ASYwXofo6CNENC1JedvLa1JUBJEyc3xMk4H4Z\"]}},\"version\":1}"
        }
      },
      "contracts/IScrollBadgeResolver.sol": {
        "IScrollBadgeResolver": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "IssueBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "RevokeBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "badge",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "bool",
                  "name": "enable",
                  "type": "bool"
                }
              ],
              "name": "UpdateAutoAttachWhitelist",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "eas",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAndValidateBadge",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "schema",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "eas()": "8150864d",
              "getAndValidateBadge(bytes32)": "8c6f12f0",
              "registry()": "7b103999",
              "schema()": "f8895cc8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"IssueBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"RevokeBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"badge\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"UpdateAutoAttachWhitelist\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eas\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAndValidateBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schema\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"IssueBadge(bytes32)\":{\"details\":\"Emitted when a new badge is issued.\",\"params\":{\"uid\":\"The UID of the new badge attestation.\"}},\"RevokeBadge(bytes32)\":{\"details\":\"Emitted when a badge is revoked.\",\"params\":{\"uid\":\"The UID of the revoked badge attestation.\"}},\"UpdateAutoAttachWhitelist(address,bool)\":{\"details\":\"Emitted when the auto-attach status of a badge is updated.\",\"params\":{\"badge\":\"The address of the badge contract.\",\"enable\":\"Auto-attach was enabled if true, disabled if false.\"}}},\"kind\":\"dev\",\"methods\":{\"eas()\":{\"returns\":{\"_0\":\"The address of the global EAS contract.\"}},\"getAndValidateBadge(bytes32)\":{\"params\":{\"uid\":\"The attestation UID.\"},\"returns\":{\"_0\":\"The attestation.\"}},\"registry()\":{\"returns\":{\"_0\":\"The address of the profile registry.\"}},\"schema()\":{\"returns\":{\"_0\":\"The GUID of the Scroll badge attestation schema.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"eas()\":{\"notice\":\"The global EAS contract.\"},\"getAndValidateBadge(bytes32)\":{\"notice\":\"Validate and return a Scroll badge attestation.\"},\"registry()\":{\"notice\":\"The profile registry contract.\"},\"schema()\":{\"notice\":\"Return the Scroll badge attestation schema.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IScrollBadgeResolver.sol\":\"IScrollBadgeResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]},\"contracts/IScrollBadgeResolver.sol\":{\"keccak256\":\"0xcf3de4a34d41be4a85bd881b6afc63266a6c75f9d331acbb68fcdb3940d5ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62ccab5967a3e41b23e6ac5126ed42d919e30c7fc6f44e8caf13bc0d6a2f2ec2\",\"dweb:/ipfs/QmaZYwipyk91w5BK6AD5X6cpaea78x8xyCkNLECT1dTTNX\"]}},\"version\":1}"
        }
      },
      "contracts/ScrollBadge.sol": {
        "ScrollBadge": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "AttestationBadgeMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "IssueBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "RevokeBadge",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "badgeTokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAndValidateBadge",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "hasBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "issueBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resolver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "revokeBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "badgeTokenURI(bytes32)": "24830563",
              "getAndValidateBadge(bytes32)": "8c6f12f0",
              "hasBadge(address)": "5e50864f",
              "issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "d753a63d",
              "resolver()": "04f3bcec",
              "revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "8298b030"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"AttestationBadgeMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"IssueBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"RevokeBadge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"badgeTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAndValidateBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"issueBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revokeBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"params\":{\"uid\":\"The badge UID, or 0x0.\"},\"returns\":{\"_0\":\"The badge token URI (same format as ERC721).\"}},\"constructor\":{\"details\":\"Creates a new ScrollBadge instance.\",\"params\":{\"resolver_\":\"The address of the global Scroll badge resolver contract.\"}},\"getAndValidateBadge(bytes32)\":{\"params\":{\"uid\":\"The attestation UID.\"},\"returns\":{\"_0\":\"The attestation.\"}},\"hasBadge(address)\":{\"params\":{\"user\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"True if the user has one or more of this badge.\"}},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"title\":\"ScrollBadge\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"notice\":\"Returns the token URI corresponding to a certain badge UID, or the default         badge token URI if the pass UID is 0x0.\"},\"getAndValidateBadge(bytes32)\":{\"notice\":\"Validate and return a Scroll badge attestation.\"},\"hasBadge(address)\":{\"notice\":\"Returns true if the user has one or more of this badge.\"},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `issueBadge` function in the parent contract.\"},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `revokeBadge` function in the parent contract.\"}},\"notice\":\"This contract implements the basic functionalities of a Scroll badge.         It serves as the base contract for more complex badge functionalities.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ScrollBadge.sol\":\"ScrollBadge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]},\"contracts/Common.sol\":{\"keccak256\":\"0x0c5e0fa565efa769b21bd71d86640477679c7606df8381f948ddee83bfc95378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f61fde3179f370665a5b9046348b4d3d5af22a905b942520c1c922db9e4f15c5\",\"dweb:/ipfs/QmZREGKUfuUvSRo1C4YgM6BCLrQrKc9jsZEtKEufx3qpPt\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x303aaebfdda209e07e8857ea25216827286914342cc913c192e5ec7ba42f1294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1185fa7c17e059eeb43193f335882aba18ddaee8ad3add6fdb432bf2b88f0d41\",\"dweb:/ipfs/QmaCzcLUHCP3XTveHwRpF3Vws3sHsvxSEWQXkXj4uaLj32\"]},\"contracts/IScrollBadge.sol\":{\"keccak256\":\"0xafb4fc95ca0ce61b55bfb6438f2b11a985cd9096e576b3008942bdac5a04c509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc926a9ae7de4a52906d71fa10b8c095756fe7b67ccc87694ba7ef7c5fce7ef9\",\"dweb:/ipfs/QmcPkS1H4ASYwXofo6CNENC1JedvLa1JUBJEyc3xMk4H4Z\"]},\"contracts/IScrollBadgeResolver.sol\":{\"keccak256\":\"0xcf3de4a34d41be4a85bd881b6afc63266a6c75f9d331acbb68fcdb3940d5ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62ccab5967a3e41b23e6ac5126ed42d919e30c7fc6f44e8caf13bc0d6a2f2ec2\",\"dweb:/ipfs/QmaZYwipyk91w5BK6AD5X6cpaea78x8xyCkNLECT1dTTNX\"]},\"contracts/ScrollBadge.sol\":{\"keccak256\":\"0x8b775c1aecaf003f41c6a319d2a0a4353a84b1a02788d1d628eae2f94c30c216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8290ec81d595022f455abd1d83eac7eae27e402a513048eed177972506f81197\",\"dweb:/ipfs/QmUVwMBHno5bysxTs1j3AWeWnHeMCU7uUhuHjLhXmdatA3\"]}},\"version\":1}"
        }
      },
      "contracts/ScrollBadgePermissionless.sol": {
        "ScrollBadgePermissionless": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "resolver_",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_defaultBadgeURI",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "AttestationBadgeMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SingletonBadge",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "IssueBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "RevokeBadge",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "badgeTokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "defaultBadgeURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAndValidateBadge",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "hasBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "isEligible",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "issueBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resolver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "revokeBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1018": {
                  "entryPoint": null,
                  "id": 1018,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_728": {
                  "entryPoint": null,
                  "id": 728,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_942": {
                  "entryPoint": null,
                  "id": 942,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory": {
                  "entryPoint": 112,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 418,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 501,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 358,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 90,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3946:17",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:17",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46:95:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "63:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "70:3:17",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "75:10:17",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "66:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "66:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "56:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "56:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "56:31:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "103:1:17",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "106:4:17",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "96:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "96:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "127:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "130:4:17",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "120:15:17"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14:127:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "254:1101:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "300:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "309:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "312:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "302:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "302:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "302:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "275:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "284:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "271:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "271:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "296:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "267:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "267:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "264:52:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "325:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "344:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "338:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "338:16:17"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "329:5:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "417:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "426:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "429:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "419:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "419:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "419:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "376:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "387:5:17"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "402:3:17",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "407:1:17",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "398:3:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "398:11:17"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "411:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "394:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "394:19:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "383:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "383:31:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "373:42:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "366:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "366:50:17"
                              },
                              "nodeType": "YulIf",
                              "src": "363:70:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "442:15:17",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "452:5:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "442:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "466:12:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "476:2:17",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "470:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "487:39:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "511:9:17"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "522:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "507:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "507:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "501:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "501:25:17"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "491:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "535:28:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "553:2:17",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "557:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "549:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "549:10:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "561:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "545:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "545:18:17"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "539:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "590:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "599:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "602:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "592:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "592:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "592:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:17"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "586:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "575:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "575:14:17"
                              },
                              "nodeType": "YulIf",
                              "src": "572:34:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "615:32:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "629:9:17"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "640:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "625:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "625:22:17"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "619:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "695:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "704:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "707:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "697:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "697:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "697:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "674:2:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "678:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "670:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "670:13:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "685:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "666:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "666:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "659:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "659:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "656:55:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "720:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "736:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "730:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "730:9:17"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "724:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "762:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "764:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "764:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "764:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "754:2:17"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "758:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "751:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "751:10:17"
                              },
                              "nodeType": "YulIf",
                              "src": "748:36:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "793:17:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "807:2:17",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "803:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "803:7:17"
                              },
                              "variables": [
                                {
                                  "name": "_5",
                                  "nodeType": "YulTypedName",
                                  "src": "797:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "819:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "839:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "833:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "833:9:17"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "823:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "851:71:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "873:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_4",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "897:2:17"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "901:4:17",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "893:3:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "893:13:17"
                                              },
                                              {
                                                "name": "_5",
                                                "nodeType": "YulIdentifier",
                                                "src": "908:2:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "889:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "889:22:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "913:2:17",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "885:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "885:31:17"
                                      },
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "918:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "881:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "881:40:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "869:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "869:53:17"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "855:10:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "981:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "983:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "983:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "983:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "940:10:17"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "952:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "937:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "937:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "960:10:17"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "972:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "957:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "957:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "934:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "934:46:17"
                              },
                              "nodeType": "YulIf",
                              "src": "931:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1019:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1023:10:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1012:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1012:22:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1012:22:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1050:6:17"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1058:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1043:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1043:18:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1043:18:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1107:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1116:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1119:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1109:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1109:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1109:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1084:2:17"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "1088:2:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1080:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1080:11:17"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1093:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1076:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1076:20:17"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1098:7:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1073:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1073:33:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1070:53:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1132:10:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1141:1:17",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1136:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1197:83:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "memPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1226:6:17"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1234:1:17"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1222:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1222:14:17"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "1238:2:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1218:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1218:23:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "_3",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1257:2:17"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1261:1:17"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1253:3:17"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "1253:10:17"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1265:2:17"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1249:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1249:19:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1243:5:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1243:26:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1211:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1211:59:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1211:59:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1162:1:17"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1165:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1159:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1159:9:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1169:19:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1171:15:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1180:1:17"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1183:2:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1176:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1176:10:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1171:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1155:3:17",
                                "statements": []
                              },
                              "src": "1151:129:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "1304:6:17"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "1312:2:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1300:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1300:15:17"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1317:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1296:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1296:24:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1322:1:17",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1289:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1289:35:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1289:35:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1333:16:17",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1343:6:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1333:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "212:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "223:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "235:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "243:6:17",
                            "type": ""
                          }
                        ],
                        "src": "146:1209:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1415:325:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1425:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1439:1:17",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "1442:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1435:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1435:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1425:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1456:38:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "1486:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1492:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1482:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1482:12:17"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "1460:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1533:31:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1535:27:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "1549:6:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1557:4:17",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "1545:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1545:17:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1535:6:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "1513:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1506:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1506:26:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1503:61:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1623:111:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1644:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1651:3:17",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1656:10:17",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "1647:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1647:20:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1637:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1637:31:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1637:31:17"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1688:1:17",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1691:4:17",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1681:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1681:15:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1681:15:17"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1716:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1719:4:17",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1709:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1709:15:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1709:15:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "1579:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1602:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1610:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1599:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1599:14:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "1576:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1576:38:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1573:161:17"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "1395:4:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1404:6:17",
                            "type": ""
                          }
                        ],
                        "src": "1360:380:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1801:65:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1818:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1821:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1811:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1811:14:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1811:14:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1834:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1852:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1855:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1842:9:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1842:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "1834:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "1784:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "1792:4:17",
                            "type": ""
                          }
                        ],
                        "src": "1745:121:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1952:464:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1985:425:17",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1999:11:17",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2009:1:17",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "2003:2:17",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2030:2:17"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "2034:5:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2023:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2023:17:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2023:17:17"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2053:31:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2075:2:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2079:4:17",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nodeType": "YulIdentifier",
                                        "src": "2065:9:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2065:19:17"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulTypedName",
                                        "src": "2057:4:17",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2097:57:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "2120:4:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2130:1:17",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2137:10:17"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2149:2:17",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2133:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2133:19:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "2126:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2126:27:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2116:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2116:38:17"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nodeType": "YulTypedName",
                                        "src": "2101:11:17",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2191:23:17",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "2193:19:17",
                                          "value": {
                                            "name": "data",
                                            "nodeType": "YulIdentifier",
                                            "src": "2208:4:17"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "2193:11:17"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "2173:10:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2185:4:17",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "2170:2:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2170:20:17"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "2167:47:17"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2227:41:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "2241:4:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2251:1:17",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2258:3:17"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2263:2:17",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2254:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2254:12:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "2247:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2247:20:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2237:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2237:31:17"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "2231:2:17",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2281:24:17",
                                    "value": {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2294:11:17"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulTypedName",
                                        "src": "2285:5:17",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2379:21:17",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "2388:5:17"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "2395:2:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "2381:6:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2381:17:17"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2381:17:17"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nodeType": "YulIdentifier",
                                          "src": "2329:5:17"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2336:2:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "2326:2:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2326:13:17"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "2340:26:17",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "2342:22:17",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "2355:5:17"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2362:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2351:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2351:13:17"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nodeType": "YulIdentifier",
                                              "src": "2342:5:17"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "2322:3:17",
                                      "statements": []
                                    },
                                    "src": "2318:82:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "1968:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1973:2:17",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1965:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1965:11:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1962:448:17"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1924:5:17",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "1931:3:17",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulTypedName",
                            "src": "1936:10:17",
                            "type": ""
                          }
                        ],
                        "src": "1871:545:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2506:81:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2516:65:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "2531:4:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2549:1:17",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2552:3:17"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2545:3:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2545:11:17"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2562:1:17",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2558:3:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2558:6:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nodeType": "YulIdentifier",
                                              "src": "2541:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2541:24:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "2537:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2537:29:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2527:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2527:40:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2573:1:17",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "2576:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2569:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2569:11:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "2524:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2524:57:17"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nodeType": "YulIdentifier",
                                  "src": "2516:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "2483:4:17",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "2489:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nodeType": "YulTypedName",
                            "src": "2497:4:17",
                            "type": ""
                          }
                        ],
                        "src": "2421:166:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2688:1256:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2698:24:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "2718:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2712:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2712:10:17"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "2702:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2765:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "2767:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2767:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2767:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "2737:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2753:2:17",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2757:1:17",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "2749:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2749:10:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2761:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2745:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2745:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2734:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2734:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "2731:56:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "2840:4:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "2878:4:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2872:5:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2872:11:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2846:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2846:38:17"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "2886:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "2796:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2796:97:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2796:97:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2902:18:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2919:1:17",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "2906:9:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2929:23:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2948:4:17",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2933:11:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2961:24:17",
                              "value": {
                                "name": "srcOffset_1",
                                "nodeType": "YulIdentifier",
                                "src": "2974:11:17"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "2961:9:17"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3031:656:17",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3045:35:17",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "3064:6:17"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3076:2:17",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "3072:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3072:7:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "3060:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3060:20:17"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "3049:7:17",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3093:49:17",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "3137:4:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "3107:29:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3107:35:17"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "3097:6:17",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3155:10:17",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3164:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "3159:1:17",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "3242:172:17",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3267:6:17"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "3285:3:17"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "3290:9:17"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3281:3:17"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3281:19:17"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3275:5:17"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3275:26:17"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3260:6:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3260:42:17"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3260:42:17"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "3319:24:17",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3333:6:17"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3341:1:17",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3329:3:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3329:14:17"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3319:6:17"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "3360:40:17",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3377:9:17"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3388:11:17"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3373:3:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3373:27:17"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3360:9:17"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "3189:1:17"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "3192:7:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "3186:2:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3186:14:17"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "3201:28:17",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "3203:24:17",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3212:1:17"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3215:11:17"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3208:3:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3208:19:17"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3203:1:17"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "3182:3:17",
                                          "statements": []
                                        },
                                        "src": "3178:236:17"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "3462:166:17",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "3480:43:17",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3507:3:17"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3512:9:17"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3503:3:17"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3503:19:17"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3497:5:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3497:26:17"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "3484:9:17",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3547:6:17"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3559:9:17"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "3586:1:17",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3589:6:17"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "3582:3:17"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3582:14:17"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "3598:3:17",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "3578:3:17"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "3578:24:17"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "3608:1:17",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "3604:3:17"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "3604:6:17"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "3574:3:17"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3574:37:17"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3570:3:17"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3570:42:17"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3555:3:17"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3555:58:17"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3540:6:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3540:74:17"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3540:74:17"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "3433:7:17"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "3442:6:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "3430:2:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3430:19:17"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "3427:201:17"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "3648:4:17"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3662:1:17",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3665:6:17"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3658:3:17"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3658:14:17"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3674:1:17",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3654:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3654:22:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "3641:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3641:36:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3641:36:17"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "3024:663:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3029:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3704:234:17",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3718:14:17",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3731:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "3722:5:17",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "3767:67:17",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "3785:35:17",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3804:3:17"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3809:9:17"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3800:3:17"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3800:19:17"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3794:5:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3794:26:17"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3785:5:17"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "3748:6:17"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "3745:89:17"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "3854:4:17"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3913:5:17"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3920:6:17"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "3860:52:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3860:67:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "3847:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3847:81:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3847:81:17"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "3696:242:17",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "3004:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3012:2:17",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3001:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3001:14:17"
                              },
                              "nodeType": "YulSwitch",
                              "src": "2994:944:17"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "2673:4:17",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "2679:3:17",
                            "type": ""
                          }
                        ],
                        "src": "2592:1352:17"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value1 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
                  "id": 17,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a06040523480156200001157600080fd5b5060405162000e6838038062000e68833981016040819052620000349162000070565b6001600160a01b038216608052806001620000508282620001f5565b50505050620002c1565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200008457600080fd5b82516001600160a01b03811681146200009c57600080fd5b602084810151919350906001600160401b0380821115620000bc57600080fd5b818601915086601f830112620000d157600080fd5b815181811115620000e657620000e66200005a565b604051601f8201601f19908116603f011681019083821181831017156200011157620001116200005a565b8160405282815289868487010111156200012a57600080fd5b600093505b828410156200014e57848401860151818501870152928501926200012f565b60008684830101528096505050505050509250929050565b600181811c908216806200017b57607f821691505b6020821081036200019c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001f057600081815260208120601f850160051c81016020861015620001cb5750805b601f850160051c820191505b81811015620001ec57828155600101620001d7565b5050505b505050565b81516001600160401b038111156200021157620002116200005a565b620002298162000222845462000166565b84620001a2565b602080601f831160018114620002615760008415620002485750858301515b600019600386901b1c1916600185901b178555620001ec565b600085815260208120601f198616915b82811015620002925788860151825594840194600190910190840162000271565b5085821015620002b15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610b77620002f1600039600081816092015281816102590152818161039701526104ed0152610b776000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638298b0301161005b5780638298b030146101565780638c6f12f014610169578063b1a3a35f14610189578063d753a63d1461019157600080fd5b806304f3bcec1461008d57806324830563146100d15780635e50864f146100f157806366e305fd1461012c575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e46100df3660046106b8565b6101a4565b6040516100c89190610721565b61011c6100ff366004610753565b6001600160a01b0316600090815260208190526040902054151590565b60405190151581526020016100c8565b61011c61013a366004610753565b6001600160a01b03166000908152602081905260409020541590565b61011c610164366004610770565b61024c565b61017c6101773660046106b8565b610328565b6040516100c891906107ac565b6100e4610452565b61011c61019f366004610770565b6104e0565b60608161023d57600180546101b890610883565b80601f01602080910402602001604051908101604052809291908181526020018280546101e490610883565b80156102315780601f1061020657610100808354040283529160200191610231565b820191906000526020600020905b81548152906001019060200180831161021457829003601f168201915b50505050509050919050565b610246826105bc565b92915050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610296576040516282b42960e81b815260040160405180910390fd5b61029f826105cb565b6102ab57506000919050565b60016000806102c060e0860160c08701610753565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546102ef91906108d3565b90915550506040518235907f504e4727721de18c6bf7f66448a6ff6da00aa4b1f00b6034e71723ae7ce6373a90600090a2506001919050565b604080516101408101825260008082526020820181905281830181905260608083018290526080830182905260a0830182905260c0830182905260e08301829052610100830182905261012083015291516308c6f12f60e41b8152600481018490529091906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638c6f12f090602401600060405180830381865afa1580156103de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261040691908101906109e6565b905060006104188261012001516105d6565b5090506001600160a01b038116301461044b5760405163b923d26160e01b81526004810185905260240160405180910390fd5b5092915050565b6001805461045f90610883565b80601f016020809104026020016040519081016040528092919081815260200182805461048b90610883565b80156104d85780601f106104ad576101008083540402835291602001916104d8565b820191906000526020600020905b8154815290600101906020018083116104bb57829003601f168201915b505050505081565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461052a576040516282b42960e81b815260040160405180910390fd5b610533826105f7565b61053f57506000919050565b600160008061055460e0860160c08701610753565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105839190610add565b90915550506040518235907fa0785ec0b9bf31a5475d33c716fb9f500f0ea0bb9e4bc10ec39d5db763c1da1590600090a2506001919050565b6060600180546101b890610883565b600061024682610602565b60006060828060200190518101906105ee9190610af0565b91509150915091565b60006102468261060d565b60006102468261065d565b600061061882610666565b61062457506000919050565b6106376100ff60e0840160c08501610753565b1561065557604051630c59311960e11b815260040160405180910390fd5b506001919050565b60006001610246565b6000610679610100830160e08401610753565b6001600160a01b031661069260e0840160c08501610753565b6001600160a01b031614610655576040516282b42960e81b815260040160405180910390fd5b6000602082840312156106ca57600080fd5b5035919050565b60005b838110156106ec5781810151838201526020016106d4565b50506000910152565b6000815180845261070d8160208601602086016106d1565b601f01601f19169290920160200192915050565b60208152600061073460208301846106f5565b9392505050565b6001600160a01b038116811461075057600080fd5b50565b60006020828403121561076557600080fd5b81356107348161073b565b60006020828403121561078257600080fd5b813567ffffffffffffffff81111561079957600080fd5b8201610140818503121561073457600080fd5b602081528151602082015260208201516040820152600060408301516107de606084018267ffffffffffffffff169052565b50606083015167ffffffffffffffff8116608084015250608083015167ffffffffffffffff811660a08401525060a083015160c083015260c083015161082f60e08401826001600160a01b03169052565b5060e083015161010061084c818501836001600160a01b03169052565b84015190506101206108618482018315159052565b84015161014084810152905061087b6101608401826106f5565b949350505050565b600181811c9082168061089757607f821691505b6020821081036108b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610246576102466108bd565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610920576109206108e6565b60405290565b805167ffffffffffffffff8116811461093e57600080fd5b919050565b805161093e8161073b565b8051801515811461093e57600080fd5b600082601f83011261096f57600080fd5b815167ffffffffffffffff8082111561098a5761098a6108e6565b604051601f8301601f19908116603f011681019082821181831017156109b2576109b26108e6565b816040528381528660208588010111156109cb57600080fd5b6109dc8460208301602089016106d1565b9695505050505050565b6000602082840312156109f857600080fd5b815167ffffffffffffffff80821115610a1057600080fd5b908301906101408286031215610a2557600080fd5b610a2d6108fc565b8251815260208301516020820152610a4760408401610926565b6040820152610a5860608401610926565b6060820152610a6960808401610926565b608082015260a083015160a0820152610a8460c08401610943565b60c0820152610a9560e08401610943565b60e0820152610100610aa881850161094e565b908201526101208381015183811115610ac057600080fd5b610acc8882870161095e565b918301919091525095945050505050565b80820180821115610246576102466108bd565b60008060408385031215610b0357600080fd5b8251610b0e8161073b565b602084015190925067ffffffffffffffff811115610b2b57600080fd5b610b378582860161095e565b915050925092905056fea26469706673582212203fda17baf8bb98c2c1f8045301cbdedc5ed2e4eacc358484ecde745dac7ad5ab64736f6c63430008130033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE68 CODESIZE SUB DUP1 PUSH3 0xE68 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x80 MSTORE DUP1 PUSH1 0x1 PUSH3 0x50 DUP3 DUP3 PUSH3 0x1F5 JUMP JUMPDEST POP POP POP POP PUSH3 0x2C1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP2 SWAP4 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0xE6 JUMPI PUSH3 0xE6 PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x111 JUMPI PUSH3 0x111 PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x14E JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x12F JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x17B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x19C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1F0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1CB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1EC JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1D7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x211 JUMPI PUSH3 0x211 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x229 DUP2 PUSH3 0x222 DUP5 SLOAD PUSH3 0x166 JUMP JUMPDEST DUP5 PUSH3 0x1A2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x261 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x248 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1EC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x292 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x271 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2B1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xB77 PUSH3 0x2F1 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x92 ADD MSTORE DUP2 DUP2 PUSH2 0x259 ADD MSTORE DUP2 DUP2 PUSH2 0x397 ADD MSTORE PUSH2 0x4ED ADD MSTORE PUSH2 0xB77 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8298B030 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8298B030 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x8C6F12F0 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xB1A3A35F EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xD753A63D EQ PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F3BCEC EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x24830563 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5E50864F EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x66E305FD EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x11C PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x23D JUMPI PUSH1 0x1 DUP1 SLOAD PUSH2 0x1B8 SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E4 SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x231 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x206 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x231 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x214 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x246 DUP3 PUSH2 0x5BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29F DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x2AB JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x2C0 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 CALLDATALOAD SWAP1 PUSH32 0x504E4727721DE18C6BF7F66448A6FF6DA00AA4B1F00B6034E71723AE7CE6373A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP4 ADD MSTORE SWAP2 MLOAD PUSH4 0x8C6F12F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x8C6F12F0 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x406 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x418 DUP3 PUSH2 0x120 ADD MLOAD PUSH2 0x5D6 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ADDRESS EQ PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH4 0xB923D261 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x45F SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x533 DUP3 PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x53F JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 CALLDATALOAD SWAP1 PUSH32 0xA0785EC0B9BF31A5475D33C716FB9F500F0EA0BB9E4BC10EC39D5DB763C1DA15 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1B8 SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x602 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x624 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x637 PUSH2 0xFF PUSH1 0xE0 DUP5 ADD PUSH1 0xC0 DUP6 ADD PUSH2 0x753 JUMP JUMPDEST ISZERO PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC593119 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x679 PUSH2 0x100 DUP4 ADD PUSH1 0xE0 DUP5 ADD PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x692 PUSH1 0xE0 DUP5 ADD PUSH1 0xC0 DUP6 ADD PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6EC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6D4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x70D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x734 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x734 DUP2 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH2 0x140 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x7DE PUSH1 0x60 DUP5 ADD DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0x80 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x82F PUSH1 0xE0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x100 PUSH2 0x84C DUP2 DUP6 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST DUP5 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0x861 DUP5 DUP3 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP5 ADD MLOAD PUSH2 0x140 DUP5 DUP2 ADD MSTORE SWAP1 POP PUSH2 0x87B PUSH2 0x160 DUP5 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x897 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x246 JUMPI PUSH2 0x246 PUSH2 0x8BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x920 JUMPI PUSH2 0x920 PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x93E DUP2 PUSH2 0x73B JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x98A JUMPI PUSH2 0x98A PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B2 PUSH2 0x8E6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x9CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DC DUP5 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x6D1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x140 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA2D PUSH2 0x8FC JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA47 PUSH1 0x40 DUP5 ADD PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xA58 PUSH1 0x60 DUP5 ADD PUSH2 0x926 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA69 PUSH1 0x80 DUP5 ADD PUSH2 0x926 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xA84 PUSH1 0xC0 DUP5 ADD PUSH2 0x943 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xA95 PUSH1 0xE0 DUP5 ADD PUSH2 0x943 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xAA8 DUP2 DUP6 ADD PUSH2 0x94E JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP4 DUP2 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xACC DUP9 DUP3 DUP8 ADD PUSH2 0x95E JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH2 0x246 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0xB0E DUP2 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB37 DUP6 DUP3 DUP7 ADD PUSH2 0x95E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xDA OR 0xBA 0xF8 0xBB SWAP9 0xC2 0xC1 0xF8 DIV MSTORE8 ADD 0xCB 0xDE 0xDC 0x5E 0xD2 0xE4 0xEA 0xCC CALLDATALOAD DUP5 DUP5 0xEC 0xDE PUSH21 0x5DAC7AD5AB64736F6C634300081300330000000000 ",
              "sourceMap": "690:900:10:-:0;;;846:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1036:20:9;;;;970:16:10;343:15:12;:34;970:16:10;343:15:12;:34;:::i;:::-;;289:95;846:170:10;;690:900;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1209;235:6;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;338:16;;-1:-1:-1;;;;;383:31:17;;373:42;;363:70;;429:1;426;419:12;363:70;476:2;507:18;;;501:25;452:5;;-1:-1:-1;476:2:17;-1:-1:-1;;;;;575:14:17;;;572:34;;;602:1;599;592:12;572:34;640:6;629:9;625:22;615:32;;685:7;678:4;674:2;670:13;666:27;656:55;;707:1;704;697:12;656:55;736:2;730:9;758:2;754;751:10;748:36;;;764:18;;:::i;:::-;839:2;833:9;807:2;893:13;;-1:-1:-1;;889:22:17;;;913:2;885:31;881:40;869:53;;;937:18;;;957:22;;;934:46;931:72;;;983:18;;:::i;:::-;1023:10;1019:2;1012:22;1058:2;1050:6;1043:18;1098:7;1093:2;1088;1084;1080:11;1076:20;1073:33;1070:53;;;1119:1;1116;1109:12;1070:53;1141:1;1132:10;;1151:129;1165:2;1162:1;1159:9;1151:129;;;1253:10;;;1249:19;;1243:26;1222:14;;;1218:23;;1211:59;1176:10;;;;1151:129;;;1322:1;1317:2;1312;1304:6;1300:15;1296:24;1289:35;1343:6;1333:16;;;;;;;;146:1209;;;;;:::o;1360:380::-;1439:1;1435:12;;;;1482;;;1503:61;;1557:4;1549:6;1545:17;1535:27;;1503:61;1610:2;1602:6;1599:14;1579:18;1576:38;1573:161;;1656:10;1651:3;1647:20;1644:1;1637:31;1691:4;1688:1;1681:15;1719:4;1716:1;1709:15;1573:161;;1360:380;;;:::o;1871:545::-;1973:2;1968:3;1965:11;1962:448;;;2009:1;2034:5;2030:2;2023:17;2079:4;2075:2;2065:19;2149:2;2137:10;2133:19;2130:1;2126:27;2120:4;2116:38;2185:4;2173:10;2170:20;2167:47;;;-1:-1:-1;2208:4:17;2167:47;2263:2;2258:3;2254:12;2251:1;2247:20;2241:4;2237:31;2227:41;;2318:82;2336:2;2329:5;2326:13;2318:82;;;2381:17;;;2362:1;2351:13;2318:82;;;2322:3;;;1962:448;1871:545;;;:::o;2592:1352::-;2712:10;;-1:-1:-1;;;;;2734:30:17;;2731:56;;;2767:18;;:::i;:::-;2796:97;2886:6;2846:38;2878:4;2872:11;2846:38;:::i;:::-;2840:4;2796:97;:::i;:::-;2948:4;;3012:2;3001:14;;3029:1;3024:663;;;;3731:1;3748:6;3745:89;;;-1:-1:-1;3800:19:17;;;3794:26;3745:89;-1:-1:-1;;2549:1:17;2545:11;;;2541:24;2537:29;2527:40;2573:1;2569:11;;;2524:57;3847:81;;2994:944;;3024:663;1818:1;1811:14;;;1855:4;1842:18;;-1:-1:-1;;3060:20:17;;;3178:236;3192:7;3189:1;3186:14;3178:236;;;3281:19;;;3275:26;3260:42;;3373:27;;;;3341:1;3329:14;;;;3208:19;;3178:236;;;3182:3;3442:6;3433:7;3430:19;3427:201;;;3503:19;;;3497:26;-1:-1:-1;;3586:1:17;3582:14;;;3598:3;3578:24;3574:37;3570:42;3555:58;3540:74;;3427:201;-1:-1:-1;;;;;3674:1:17;3658:14;;;3654:22;3641:36;;-1:-1:-1;2592:1352:17:o;:::-;690:900:10;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@badgeTokenURI_1042": {
                  "entryPoint": 420,
                  "id": 1042,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@decodeBadgeData_510": {
                  "entryPoint": 1494,
                  "id": 510,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "@defaultBadgeURI_1008": {
                  "entryPoint": 1106,
                  "id": 1008,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getAndValidateBadge_881": {
                  "entryPoint": 808,
                  "id": 881,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getBadgeTokenURI_1053": {
                  "entryPoint": 1468,
                  "id": 1053,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@hasBadge_904": {
                  "entryPoint": null,
                  "id": 904,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isEligible_1075": {
                  "entryPoint": null,
                  "id": 1075,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@issueBadge_772": {
                  "entryPoint": 1248,
                  "id": 772,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@onIssueBadge_1180": {
                  "entryPoint": 1638,
                  "id": 1180,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@onIssueBadge_1239": {
                  "entryPoint": 1549,
                  "id": 1239,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@onIssueBadge_828": {
                  "entryPoint": null,
                  "id": 828,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@onIssueBadge_961": {
                  "entryPoint": 1527,
                  "id": 961,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@onRevokeBadge_1196": {
                  "entryPoint": 1629,
                  "id": 1196,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@onRevokeBadge_1255": {
                  "entryPoint": 1538,
                  "id": 1255,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@onRevokeBadge_840": {
                  "entryPoint": null,
                  "id": 840,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@onRevokeBadge_980": {
                  "entryPoint": 1483,
                  "id": 980,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@resolver_713": {
                  "entryPoint": null,
                  "id": 713,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@revokeBadge_816": {
                  "entryPoint": 588,
                  "id": 816,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 2371,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 2382,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_bytes_fromMemory": {
                  "entryPoint": 2398,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 1875,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_payablet_bytes_memory_ptr_fromMemory": {
                  "entryPoint": 2800,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": 1720,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_struct$_Attestation_$47_calldata_ptr": {
                  "entryPoint": 1904,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_struct$_Attestation_$47_memory_ptr_fromMemory": {
                  "entryPoint": 2534,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint64_fromMemory": {
                  "entryPoint": 2342,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 1781,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1825,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_struct$_Attestation_$47_memory_ptr__to_t_struct$_Attestation_$47_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1964,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint64": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_memory": {
                  "entryPoint": 2300,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 2781,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 2259,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 1745,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 2179,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 2237,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2278,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 1851,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:8026:17",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:17",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "58:60:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "75:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "84:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "99:3:17",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "104:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "95:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "95:11:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "108:1:17",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "91:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "91:19:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "80:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "80:31:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "68:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "68:44:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "68:44:17"
                            }
                          ]
                        },
                        "name": "abi_encode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "42:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "49:3:17",
                            "type": ""
                          }
                        ],
                        "src": "14:104:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "224:102:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "234:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "246:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "257:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "242:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "242:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "234:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "276:9:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "291:6:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "307:3:17",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "312:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "303:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "303:11:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "316:1:17",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "299:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "299:19:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "287:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "287:32:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "269:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "269:51:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "269:51:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "193:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "204:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "215:4:17",
                            "type": ""
                          }
                        ],
                        "src": "123:203:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "401:110:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "447:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "456:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "459:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "449:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "449:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "449:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "422:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "431:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "418:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "418:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "443:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "414:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "414:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "411:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "472:33:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "495:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "482:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "482:23:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "472:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "367:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "378:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "390:6:17",
                            "type": ""
                          }
                        ],
                        "src": "331:180:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "582:184:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "592:10:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "601:1:17",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "596:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "661:63:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "686:3:17"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "691:1:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "682:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "682:11:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "705:3:17"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "710:1:17"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "701:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "701:11:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "695:5:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "695:18:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "675:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "675:39:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "675:39:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "622:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "625:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "619:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "619:13:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "633:19:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "635:15:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "644:1:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "647:2:17",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "640:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "640:10:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "635:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "615:3:17",
                                "statements": []
                              },
                              "src": "611:113:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "744:3:17"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "749:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "740:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "740:16:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "758:1:17",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "733:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "733:27:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "733:27:17"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory_with_cleanup",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "560:3:17",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "565:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "570:6:17",
                            "type": ""
                          }
                        ],
                        "src": "516:250:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "821:221:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "831:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "851:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "845:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "845:12:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "835:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "873:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "878:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "866:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "866:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "866:19:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "933:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "940:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "929:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "929:16:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "951:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "956:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "947:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "947:14:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "963:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "894:34:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "894:76:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "894:76:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "979:57:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "994:3:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "1007:6:17"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1015:2:17",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1003:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1003:15:17"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1024:2:17",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "1020:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1020:7:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "999:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "999:29:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "990:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "990:39:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1031:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "986:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "986:50:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "979:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_string",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "798:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "805:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "813:3:17",
                            "type": ""
                          }
                        ],
                        "src": "771:271:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1168:99:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1185:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1196:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1178:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1178:21:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1178:21:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1208:53:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1234:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1246:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1257:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1242:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1242:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "1216:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1216:45:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1208:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1137:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1148:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1159:4:17",
                            "type": ""
                          }
                        ],
                        "src": "1047:220:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1317:86:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1381:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1390:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1393:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1383:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1383:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1383:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1340:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1351:5:17"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1366:3:17",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1371:1:17",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1362:3:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1362:11:17"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1375:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "1358:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1358:19:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1347:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1347:31:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1337:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1337:42:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1330:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1330:50:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1327:70:17"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1306:5:17",
                            "type": ""
                          }
                        ],
                        "src": "1272:131:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1478:177:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1524:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1533:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1536:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1526:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1526:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1526:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1499:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1508:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1495:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1495:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1520:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1491:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1491:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1488:52:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1549:36:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1575:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1562:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1562:23:17"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1553:5:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1619:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1594:24:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1594:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1594:31:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1634:15:17",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1644:5:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1634:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1444:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1455:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1467:6:17",
                            "type": ""
                          }
                        ],
                        "src": "1408:247:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1701:50:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1718:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1737:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1730:6:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1730:13:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1723:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1723:21:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1711:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1711:34:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1711:34:17"
                            }
                          ]
                        },
                        "name": "abi_encode_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1685:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1692:3:17",
                            "type": ""
                          }
                        ],
                        "src": "1660:91:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1851:92:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1861:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1873:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1884:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1869:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1869:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1861:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1903:9:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1928:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1921:6:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1921:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1914:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1914:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1896:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1896:41:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1896:41:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1820:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1831:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1842:4:17",
                            "type": ""
                          }
                        ],
                        "src": "1756:187:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2047:290:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2093:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2102:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2105:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2095:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2095:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2095:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2068:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2077:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2064:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2064:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2089:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2060:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2060:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "2057:52:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2118:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2145:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2132:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2132:23:17"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2122:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2198:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2207:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2210:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2200:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2200:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2200:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2170:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2178:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2167:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2167:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "2164:50:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2223:32:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2237:9:17"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2248:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2233:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2233:22:17"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2227:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2294:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2303:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2306:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2296:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2296:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2296:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2275:7:17"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2284:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2271:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2271:16:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2289:3:17",
                                    "type": "",
                                    "value": "320"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2267:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2267:26:17"
                              },
                              "nodeType": "YulIf",
                              "src": "2264:46:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2319:12:17",
                              "value": {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2329:2:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2319:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_struct$_Attestation_$47_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2013:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2024:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2036:6:17",
                            "type": ""
                          }
                        ],
                        "src": "1948:389:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2385:59:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2402:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2411:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2418:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2407:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2407:30:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2395:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2395:43:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2395:43:17"
                            }
                          ]
                        },
                        "name": "abi_encode_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2369:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2376:3:17",
                            "type": ""
                          }
                        ],
                        "src": "2342:102:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2604:1131:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2621:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2632:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2614:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2614:21:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2614:21:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2655:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2666:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2651:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2651:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2677:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2671:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2671:13:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2644:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2644:41:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2644:41:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2705:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2716:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2701:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2701:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2731:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2739:2:17",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2727:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2727:15:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2721:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2721:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2694:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2694:50:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2694:50:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2753:42:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2783:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2791:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2779:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2779:15:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2773:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2773:22:17"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulTypedName",
                                  "src": "2757:12:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2822:12:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2840:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2851:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2836:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2836:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "2804:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2804:51:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2804:51:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2864:44:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2896:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2904:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2892:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2892:15:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2886:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2886:22:17"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2868:14:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2935:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2955:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2966:3:17",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2951:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2951:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "2917:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2917:54:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2917:54:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2980:45:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3012:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3020:3:17",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3008:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3008:16:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3002:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3002:23:17"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_2",
                                  "nodeType": "YulTypedName",
                                  "src": "2984:14:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3052:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3072:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3083:3:17",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3068:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3068:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "3034:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3034:54:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3034:54:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3108:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3119:3:17",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3104:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3104:19:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "3135:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3143:3:17",
                                            "type": "",
                                            "value": "160"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3131:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3131:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3125:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3125:23:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3097:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3097:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3097:52:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3158:45:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3190:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3198:3:17",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3186:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3186:16:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3180:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3180:23:17"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_3",
                                  "nodeType": "YulTypedName",
                                  "src": "3162:14:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "3231:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3251:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3262:3:17",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3247:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3247:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3212:18:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3212:55:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3212:55:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3276:45:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3308:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3316:3:17",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3304:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3304:16:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3298:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3298:23:17"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_4",
                                  "nodeType": "YulTypedName",
                                  "src": "3280:14:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3330:13:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3340:3:17",
                                "type": "",
                                "value": "256"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3334:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3371:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3391:9:17"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3402:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3387:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3387:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3352:18:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3352:54:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3352:54:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3415:44:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3447:6:17"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3455:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3443:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3443:15:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3437:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3437:22:17"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_5",
                                  "nodeType": "YulTypedName",
                                  "src": "3419:14:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3468:13:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3478:3:17",
                                "type": "",
                                "value": "288"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "3472:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_5",
                                    "nodeType": "YulIdentifier",
                                    "src": "3506:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3526:9:17"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3537:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3522:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3522:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "3490:15:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3490:51:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3490:51:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3550:44:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3582:6:17"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3590:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3578:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3578:15:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3572:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3572:22:17"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_6",
                                  "nodeType": "YulTypedName",
                                  "src": "3554:14:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3603:16:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3613:6:17",
                                "type": "",
                                "value": "0x0140"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "3607:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3639:9:17"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "3650:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3635:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3635:18:17"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "3655:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3628:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3628:30:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3628:30:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3667:62:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_6",
                                    "nodeType": "YulIdentifier",
                                    "src": "3693:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3713:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3724:3:17",
                                        "type": "",
                                        "value": "352"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3709:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3709:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "3675:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3675:54:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3667:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Attestation_$47_memory_ptr__to_t_struct$_Attestation_$47_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2573:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2584:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2595:4:17",
                            "type": ""
                          }
                        ],
                        "src": "2449:1286:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3795:325:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3805:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3819:1:17",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "3822:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3815:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3815:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3805:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3836:38:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "3866:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3872:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3862:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3862:12:17"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "3840:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3913:31:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3915:27:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "3929:6:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3937:4:17",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "3925:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3925:17:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3915:6:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "3893:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3886:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3886:26:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3883:61:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4003:111:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4024:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4031:3:17",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4036:10:17",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "4027:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4027:20:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4017:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4017:31:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4017:31:17"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4068:1:17",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4071:4:17",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4061:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4061:15:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4061:15:17"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4096:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4099:4:17",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4089:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4089:15:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4089:15:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "3959:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3982:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3990:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3979:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3979:14:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "3956:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3956:38:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3953:161:17"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "3775:4:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3784:6:17",
                            "type": ""
                          }
                        ],
                        "src": "3740:380:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4157:95:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4174:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4181:3:17",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4186:10:17",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4177:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4177:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4167:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4167:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4167:31:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4214:1:17",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4217:4:17",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4207:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4207:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4207:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4238:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4241:4:17",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4231:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4231:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4231:15:17"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4125:127:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4306:79:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4316:17:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4328:1:17"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4331:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4324:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4324:9:17"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "4316:4:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4357:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4359:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4359:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4359:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nodeType": "YulIdentifier",
                                    "src": "4348:4:17"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4354:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4345:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4345:11:17"
                              },
                              "nodeType": "YulIf",
                              "src": "4342:37:17"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4288:1:17",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4291:1:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "4297:4:17",
                            "type": ""
                          }
                        ],
                        "src": "4257:128:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4491:76:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4501:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4513:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4524:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4509:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4509:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4501:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4543:9:17"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4554:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4536:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4536:25:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4536:25:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4460:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4471:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4482:4:17",
                            "type": ""
                          }
                        ],
                        "src": "4390:177:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4604:95:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4621:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4628:3:17",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4633:10:17",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4624:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4624:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4614:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4614:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4614:31:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4661:1:17",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4664:4:17",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4654:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4654:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4654:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4685:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4688:4:17",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4678:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4678:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4678:15:17"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4572:127:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4745:209:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4755:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4771:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4765:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4765:9:17"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4755:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4783:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4805:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4813:6:17",
                                    "type": "",
                                    "value": "0x0140"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4801:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4801:19:17"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "4787:10:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4895:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "4897:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4897:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4897:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4838:10:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4850:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4835:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4835:34:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4874:10:17"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4886:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4871:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4871:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "4832:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4832:62:17"
                              },
                              "nodeType": "YulIf",
                              "src": "4829:88:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4933:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4937:10:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4926:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4926:22:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4926:22:17"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "4734:6:17",
                            "type": ""
                          }
                        ],
                        "src": "4704:250:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5018:116:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5028:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5043:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5037:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5037:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5028:5:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5112:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5121:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5124:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5114:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5114:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5114:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5072:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5083:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5090:18:17",
                                            "type": "",
                                            "value": "0xffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "5079:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5079:30:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "5069:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5069:41:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5062:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5062:49:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5059:69:17"
                            }
                          ]
                        },
                        "name": "abi_decode_uint64_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "4997:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5008:5:17",
                            "type": ""
                          }
                        ],
                        "src": "4959:175:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5199:78:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5209:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5224:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5218:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5218:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5209:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5265:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5240:24:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5240:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5240:31:17"
                            }
                          ]
                        },
                        "name": "abi_decode_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "5178:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5189:5:17",
                            "type": ""
                          }
                        ],
                        "src": "5139:138:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5339:107:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5349:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5364:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5358:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5358:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5349:5:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5424:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5433:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5436:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5426:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5426:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5426:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5393:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "5414:5:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "5407:6:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5407:13:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "5400:6:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5400:21:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "5390:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5390:32:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5383:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5383:40:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5380:60:17"
                            }
                          ]
                        },
                        "name": "abi_decode_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "5318:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5329:5:17",
                            "type": ""
                          }
                        ],
                        "src": "5282:164:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5514:635:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5563:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5572:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5575:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5565:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5565:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5565:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5542:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5550:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5538:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5538:17:17"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "5557:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5534:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5534:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5527:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5527:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5524:55:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5588:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5604:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5598:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5598:13:17"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5592:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5620:28:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5630:18:17",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "5624:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5671:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "5673:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5673:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5673:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5663:2:17"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5667:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5660:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5660:10:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5657:36:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5702:17:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5716:2:17",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5712:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5712:7:17"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "5706:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5728:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5748:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5742:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5742:9:17"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "5732:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5760:71:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5782:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5806:2:17"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "5810:4:17",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5802:3:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5802:13:17"
                                              },
                                              {
                                                "name": "_3",
                                                "nodeType": "YulIdentifier",
                                                "src": "5817:2:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "5798:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5798:22:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5822:2:17",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5794:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5794:31:17"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "5827:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5790:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5790:40:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5778:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5778:53:17"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "5764:10:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5890:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "5892:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5892:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5892:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5849:10:17"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "5861:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5846:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5846:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5869:10:17"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5881:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5866:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5866:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "5843:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5843:46:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5840:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5928:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5932:10:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5921:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5921:22:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5921:22:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5959:6:17"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5967:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5952:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5952:18:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5952:18:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6018:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6027:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6030:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6020:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6020:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6020:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5993:6:17"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "6001:2:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5989:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5989:15:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6006:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5985:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5985:26:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "6013:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5982:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5982:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5979:55:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "6082:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6090:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6078:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6078:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6101:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6109:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6097:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6097:17:17"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6116:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "6043:34:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6043:76:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6043:76:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6128:15:17",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "6137:6:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "6128:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_bytes_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "5488:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5496:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "5504:5:17",
                            "type": ""
                          }
                        ],
                        "src": "5451:698:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6262:1156:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6308:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6317:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6320:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6310:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6310:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6310:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6283:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6292:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6279:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6279:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6304:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6275:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6275:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "6272:52:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6333:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6353:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6347:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6347:16:17"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "6337:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6372:28:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6382:18:17",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6376:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6427:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6436:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6439:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6429:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6429:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6429:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6415:6:17"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6423:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6412:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6412:14:17"
                              },
                              "nodeType": "YulIf",
                              "src": "6409:34:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6452:32:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6466:9:17"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6477:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6462:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6462:22:17"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "6456:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6526:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6535:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6538:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6528:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6528:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6528:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6504:7:17"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "6513:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6500:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6500:16:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6518:6:17",
                                    "type": "",
                                    "value": "0x0140"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6496:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6496:29:17"
                              },
                              "nodeType": "YulIf",
                              "src": "6493:49:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6551:30:17",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "6564:15:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6564:17:17"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "6555:5:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6597:5:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "6610:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6604:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6604:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6590:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6590:24:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6590:24:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6634:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6641:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6630:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6630:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "6656:2:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6660:2:17",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6652:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6652:11:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6646:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6646:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6623:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6623:42:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6623:42:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6685:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6692:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6681:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6681:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "6730:2:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6734:2:17",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6726:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6726:11:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_uint64_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "6697:28:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6697:41:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6674:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6674:65:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6674:65:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6759:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6766:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6755:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6755:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "6804:2:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6808:2:17",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6800:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6800:11:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_uint64_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "6771:28:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6771:41:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6748:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6748:65:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6748:65:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6833:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6840:3:17",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6829:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6829:15:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "6879:2:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6883:3:17",
                                            "type": "",
                                            "value": "128"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6875:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6875:12:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_uint64_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "6846:28:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6846:42:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6822:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6822:67:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6822:67:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6909:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6916:3:17",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6905:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6905:15:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "6932:2:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6936:3:17",
                                            "type": "",
                                            "value": "160"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6928:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6928:12:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6922:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6922:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6898:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6898:44:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6898:44:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6962:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6969:3:17",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6958:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6958:15:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "7009:2:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7013:3:17",
                                            "type": "",
                                            "value": "192"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7005:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7005:12:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "6975:29:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6975:43:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6951:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6951:68:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6951:68:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7039:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7046:3:17",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7035:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7035:15:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "7086:2:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7090:3:17",
                                            "type": "",
                                            "value": "224"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7082:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7082:12:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "7052:29:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7052:43:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7028:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7028:68:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7028:68:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7105:13:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7115:3:17",
                                "type": "",
                                "value": "256"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "7109:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7138:5:17"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "7145:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7134:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7134:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "7181:2:17"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "7185:2:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7177:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7177:11:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "7150:26:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7150:39:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7127:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7127:63:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7127:63:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7199:13:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7209:3:17",
                                "type": "",
                                "value": "288"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "7203:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7221:34:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "7247:2:17"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "7251:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7243:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7243:11:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7237:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7237:18:17"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7225:8:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7284:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7293:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7296:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7286:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7286:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7286:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7270:8:17"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7280:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7267:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7267:16:17"
                              },
                              "nodeType": "YulIf",
                              "src": "7264:36:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7320:5:17"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "7327:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7316:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7316:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "7364:2:17"
                                          },
                                          {
                                            "name": "offset_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "7368:8:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7360:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7360:17:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7379:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_bytes_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "7332:27:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7332:55:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7309:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7309:79:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7309:79:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7397:15:17",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7407:5:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7397:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_struct$_Attestation_$47_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6228:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6239:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6251:6:17",
                            "type": ""
                          }
                        ],
                        "src": "6154:1264:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7471:77:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7481:16:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7492:1:17"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7495:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7488:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7488:9:17"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "7481:3:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7520:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7522:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7522:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7522:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7512:1:17"
                                  },
                                  {
                                    "name": "sum",
                                    "nodeType": "YulIdentifier",
                                    "src": "7515:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7509:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7509:10:17"
                              },
                              "nodeType": "YulIf",
                              "src": "7506:36:17"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "7454:1:17",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "7457:1:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "7463:3:17",
                            "type": ""
                          }
                        ],
                        "src": "7423:125:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7668:356:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7714:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7723:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7726:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7716:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7716:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7716:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7689:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7698:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7685:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7685:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7710:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7681:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7681:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "7678:52:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7739:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7758:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7752:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7752:16:17"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "7743:5:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7802:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "7777:24:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7777:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7777:31:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7817:15:17",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7827:5:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7817:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7841:39:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7865:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7876:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7861:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7861:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7855:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7855:25:17"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "7845:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7923:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7932:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7935:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7925:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7925:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7925:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7895:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7903:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7892:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7892:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "7889:50:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7948:70:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7990:9:17"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8001:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7986:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7986:22:17"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8010:7:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "7958:27:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7958:60:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7948:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payablet_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7626:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7637:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7649:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7657:6:17",
                            "type": ""
                          }
                        ],
                        "src": "7553:471:17"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_struct$_Attestation_$47_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 320) { revert(0, 0) }\n        value0 := _1\n    }\n    function abi_encode_uint64(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_struct$_Attestation_$47_memory_ptr__to_t_struct$_Attestation_$47_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        mstore(add(headStart, 64), mload(add(value0, 32)))\n        let memberValue0 := mload(add(value0, 64))\n        abi_encode_uint64(memberValue0, add(headStart, 96))\n        let memberValue0_1 := mload(add(value0, 96))\n        abi_encode_uint64(memberValue0_1, add(headStart, 128))\n        let memberValue0_2 := mload(add(value0, 128))\n        abi_encode_uint64(memberValue0_2, add(headStart, 160))\n        mstore(add(headStart, 192), mload(add(value0, 160)))\n        let memberValue0_3 := mload(add(value0, 192))\n        abi_encode_address(memberValue0_3, add(headStart, 224))\n        let memberValue0_4 := mload(add(value0, 224))\n        let _1 := 256\n        abi_encode_address(memberValue0_4, add(headStart, _1))\n        let memberValue0_5 := mload(add(value0, _1))\n        let _2 := 288\n        abi_encode_bool(memberValue0_5, add(headStart, _2))\n        let memberValue0_6 := mload(add(value0, _2))\n        let _3 := 0x0140\n        mstore(add(headStart, _3), _3)\n        tail := abi_encode_string(memberValue0_6, add(headStart, 352))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0140)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_struct$_Attestation_$47_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x0140) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, mload(_2))\n        mstore(add(value, 32), mload(add(_2, 32)))\n        mstore(add(value, 64), abi_decode_uint64_fromMemory(add(_2, 64)))\n        mstore(add(value, 96), abi_decode_uint64_fromMemory(add(_2, 96)))\n        mstore(add(value, 128), abi_decode_uint64_fromMemory(add(_2, 128)))\n        mstore(add(value, 160), mload(add(_2, 160)))\n        mstore(add(value, 192), abi_decode_address_fromMemory(add(_2, 192)))\n        mstore(add(value, 224), abi_decode_address_fromMemory(add(_2, 224)))\n        let _3 := 256\n        mstore(add(value, _3), abi_decode_bool_fromMemory(add(_2, _3)))\n        let _4 := 288\n        let offset_1 := mload(add(_2, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, _4), abi_decode_bytes_fromMemory(add(_2, offset_1), dataEnd))\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_address_payablet_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes_fromMemory(add(headStart, offset), dataEnd)\n    }\n}",
                  "id": 17,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "713": [
                  {
                    "length": 32,
                    "start": 146
                  },
                  {
                    "length": 32,
                    "start": 601
                  },
                  {
                    "length": 32,
                    "start": 919
                  },
                  {
                    "length": 32,
                    "start": 1261
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638298b0301161005b5780638298b030146101565780638c6f12f014610169578063b1a3a35f14610189578063d753a63d1461019157600080fd5b806304f3bcec1461008d57806324830563146100d15780635e50864f146100f157806366e305fd1461012c575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e46100df3660046106b8565b6101a4565b6040516100c89190610721565b61011c6100ff366004610753565b6001600160a01b0316600090815260208190526040902054151590565b60405190151581526020016100c8565b61011c61013a366004610753565b6001600160a01b03166000908152602081905260409020541590565b61011c610164366004610770565b61024c565b61017c6101773660046106b8565b610328565b6040516100c891906107ac565b6100e4610452565b61011c61019f366004610770565b6104e0565b60608161023d57600180546101b890610883565b80601f01602080910402602001604051908101604052809291908181526020018280546101e490610883565b80156102315780601f1061020657610100808354040283529160200191610231565b820191906000526020600020905b81548152906001019060200180831161021457829003601f168201915b50505050509050919050565b610246826105bc565b92915050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610296576040516282b42960e81b815260040160405180910390fd5b61029f826105cb565b6102ab57506000919050565b60016000806102c060e0860160c08701610753565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546102ef91906108d3565b90915550506040518235907f504e4727721de18c6bf7f66448a6ff6da00aa4b1f00b6034e71723ae7ce6373a90600090a2506001919050565b604080516101408101825260008082526020820181905281830181905260608083018290526080830182905260a0830182905260c0830182905260e08301829052610100830182905261012083015291516308c6f12f60e41b8152600481018490529091906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638c6f12f090602401600060405180830381865afa1580156103de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261040691908101906109e6565b905060006104188261012001516105d6565b5090506001600160a01b038116301461044b5760405163b923d26160e01b81526004810185905260240160405180910390fd5b5092915050565b6001805461045f90610883565b80601f016020809104026020016040519081016040528092919081815260200182805461048b90610883565b80156104d85780601f106104ad576101008083540402835291602001916104d8565b820191906000526020600020905b8154815290600101906020018083116104bb57829003601f168201915b505050505081565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461052a576040516282b42960e81b815260040160405180910390fd5b610533826105f7565b61053f57506000919050565b600160008061055460e0860160c08701610753565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105839190610add565b90915550506040518235907fa0785ec0b9bf31a5475d33c716fb9f500f0ea0bb9e4bc10ec39d5db763c1da1590600090a2506001919050565b6060600180546101b890610883565b600061024682610602565b60006060828060200190518101906105ee9190610af0565b91509150915091565b60006102468261060d565b60006102468261065d565b600061061882610666565b61062457506000919050565b6106376100ff60e0840160c08501610753565b1561065557604051630c59311960e11b815260040160405180910390fd5b506001919050565b60006001610246565b6000610679610100830160e08401610753565b6001600160a01b031661069260e0840160c08501610753565b6001600160a01b031614610655576040516282b42960e81b815260040160405180910390fd5b6000602082840312156106ca57600080fd5b5035919050565b60005b838110156106ec5781810151838201526020016106d4565b50506000910152565b6000815180845261070d8160208601602086016106d1565b601f01601f19169290920160200192915050565b60208152600061073460208301846106f5565b9392505050565b6001600160a01b038116811461075057600080fd5b50565b60006020828403121561076557600080fd5b81356107348161073b565b60006020828403121561078257600080fd5b813567ffffffffffffffff81111561079957600080fd5b8201610140818503121561073457600080fd5b602081528151602082015260208201516040820152600060408301516107de606084018267ffffffffffffffff169052565b50606083015167ffffffffffffffff8116608084015250608083015167ffffffffffffffff811660a08401525060a083015160c083015260c083015161082f60e08401826001600160a01b03169052565b5060e083015161010061084c818501836001600160a01b03169052565b84015190506101206108618482018315159052565b84015161014084810152905061087b6101608401826106f5565b949350505050565b600181811c9082168061089757607f821691505b6020821081036108b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610246576102466108bd565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610920576109206108e6565b60405290565b805167ffffffffffffffff8116811461093e57600080fd5b919050565b805161093e8161073b565b8051801515811461093e57600080fd5b600082601f83011261096f57600080fd5b815167ffffffffffffffff8082111561098a5761098a6108e6565b604051601f8301601f19908116603f011681019082821181831017156109b2576109b26108e6565b816040528381528660208588010111156109cb57600080fd5b6109dc8460208301602089016106d1565b9695505050505050565b6000602082840312156109f857600080fd5b815167ffffffffffffffff80821115610a1057600080fd5b908301906101408286031215610a2557600080fd5b610a2d6108fc565b8251815260208301516020820152610a4760408401610926565b6040820152610a5860608401610926565b6060820152610a6960808401610926565b608082015260a083015160a0820152610a8460c08401610943565b60c0820152610a9560e08401610943565b60e0820152610100610aa881850161094e565b908201526101208381015183811115610ac057600080fd5b610acc8882870161095e565b918301919091525095945050505050565b80820180821115610246576102466108bd565b60008060408385031215610b0357600080fd5b8251610b0e8161073b565b602084015190925067ffffffffffffffff811115610b2b57600080fd5b610b378582860161095e565b915050925092905056fea26469706673582212203fda17baf8bb98c2c1f8045301cbdedc5ed2e4eacc358484ecde745dac7ad5ab64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8298B030 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8298B030 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x8C6F12F0 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xB1A3A35F EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xD753A63D EQ PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F3BCEC EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x24830563 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5E50864F EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x66E305FD EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x11C PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x23D JUMPI PUSH1 0x1 DUP1 SLOAD PUSH2 0x1B8 SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E4 SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x231 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x206 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x231 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x214 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x246 DUP3 PUSH2 0x5BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29F DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x2AB JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x2C0 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 CALLDATALOAD SWAP1 PUSH32 0x504E4727721DE18C6BF7F66448A6FF6DA00AA4B1F00B6034E71723AE7CE6373A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP4 ADD MSTORE SWAP2 MLOAD PUSH4 0x8C6F12F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x8C6F12F0 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x406 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x418 DUP3 PUSH2 0x120 ADD MLOAD PUSH2 0x5D6 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ADDRESS EQ PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH4 0xB923D261 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x45F SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x533 DUP3 PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x53F JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 CALLDATALOAD SWAP1 PUSH32 0xA0785EC0B9BF31A5475D33C716FB9F500F0EA0BB9E4BC10EC39D5DB763C1DA15 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1B8 SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x602 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x624 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x637 PUSH2 0xFF PUSH1 0xE0 DUP5 ADD PUSH1 0xC0 DUP6 ADD PUSH2 0x753 JUMP JUMPDEST ISZERO PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC593119 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x679 PUSH2 0x100 DUP4 ADD PUSH1 0xE0 DUP5 ADD PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x692 PUSH1 0xE0 DUP5 ADD PUSH1 0xC0 DUP6 ADD PUSH2 0x753 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6EC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6D4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x70D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x734 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x734 DUP2 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH2 0x140 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x7DE PUSH1 0x60 DUP5 ADD DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0x80 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x82F PUSH1 0xE0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x100 PUSH2 0x84C DUP2 DUP6 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST DUP5 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0x861 DUP5 DUP3 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP5 ADD MLOAD PUSH2 0x140 DUP5 DUP2 ADD MSTORE SWAP1 POP PUSH2 0x87B PUSH2 0x160 DUP5 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x897 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x246 JUMPI PUSH2 0x246 PUSH2 0x8BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x920 JUMPI PUSH2 0x920 PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x93E DUP2 PUSH2 0x73B JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x98A JUMPI PUSH2 0x98A PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B2 PUSH2 0x8E6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x9CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DC DUP5 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x6D1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x140 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA2D PUSH2 0x8FC JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA47 PUSH1 0x40 DUP5 ADD PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xA58 PUSH1 0x60 DUP5 ADD PUSH2 0x926 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA69 PUSH1 0x80 DUP5 ADD PUSH2 0x926 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xA84 PUSH1 0xC0 DUP5 ADD PUSH2 0x943 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xA95 PUSH1 0xE0 DUP5 ADD PUSH2 0x943 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xAA8 DUP2 DUP6 ADD PUSH2 0x94E JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP4 DUP2 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xACC DUP9 DUP3 DUP8 ADD PUSH2 0x95E JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH2 0x246 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0xB0E DUP2 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB37 DUP6 DUP3 DUP7 ADD PUSH2 0x95E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xDA OR 0xBA 0xF8 0xBB SWAP9 0xC2 0xC1 0xF8 DIV MSTORE8 ADD 0xCB 0xDE 0xDC 0x5E 0xD2 0xE4 0xEA 0xCC CALLDATALOAD DUP5 DUP5 0xEC 0xDE PUSH21 0x5DAC7AD5AB64736F6C634300081300330000000000 ",
              "sourceMap": "690:900:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:33:9;;;;;;;;-1:-1:-1;;;;;287:32:17;;;269:51;;257:2;242:18;728:33:9;;;;;;;;422:206:12;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3270:116:9:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3354:21:9;3331:4;3354:21;;;;;;;;;;;:25;;;3270:116;;;;1921:14:17;;1914:22;1896:41;;1884:2;1869:18;3270:116:9;1756:187:17;455:115:13;;;;;;:::i;:::-;-1:-1:-1;;;;;3354:21:9;520:4:13;3354:21:9;;;;;;;;;;;:25;;455:115:13;1593:455:9;;;;;;:::i;:::-;;:::i;2733:379::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;253:29:12:-;;;:::i;1102:452:9:-;;;;;;:::i;:::-;;:::i;422:206:12:-;488:13;517:3;513:70;;557:15;550:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;422:206;;;:::o;513:70::-;600:21;617:3;600:16;:21::i;:::-;593:28;422:206;-1:-1:-1;;422:206:12:o;1593:455:9:-;1664:4;1723:10;-1:-1:-1;;;;;1745:8:9;1723:31;;1719:83;;1777:14;;-1:-1:-1;;;1777:14:9;;;;;;;;;;;1719:83;1858:26;1872:11;1858:13;:26::i;:::-;1853:70;;-1:-1:-1;1907:5:9;;1593:455;-1:-1:-1;1593:455:9:o;1853:70::-;1975:1;1933:15;;1949:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1933:38:9;-1:-1:-1;;;;;1933:38:9;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;-1:-1:-1;;1992:28:9;;2004:15;;;1992:28;;2004:15;;1992:28;-1:-1:-1;2037:4:9;;1593:455;-1:-1:-1;1593:455:9:o;2733:379::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2859:55:9;;-1:-1:-1;;;2859:55:9;;;;;4536:25:17;;;-1:-1:-1;;;;;;;;2880:8:9;2859:50;;;;4509:18:17;;2859:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2859:55:9;;;;;;;;;;;;:::i;:::-;2826:88;;2926:13;2944:33;2960:11;:16;;;2944:15;:33::i;:::-;-1:-1:-1;2925:52:9;-1:-1:-1;;;;;;2992:22:9;;3009:4;2992:22;2988:89;;3037:29;;-1:-1:-1;;;3037:29:9;;;;;4536:25:17;;;4509:18;;3037:29:9;;;;;;;2988:89;-1:-1:-1;3094:11:9;2733:379;-1:-1:-1;;2733:379:9:o;253:29:12:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1102:452:9:-;1172:4;1231:10;-1:-1:-1;;;;;1253:8:9;1231:31;;1227:83;;1285:14;;-1:-1:-1;;;1285:14:9;;;;;;;;;;;1227:83;1366:25;1379:11;1366:12;:25::i;:::-;1361:69;;-1:-1:-1;1414:5:9;;1102:452;-1:-1:-1;1102:452:9:o;1361:69::-;1482:1;1440:15;;1456:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1440:38:9;-1:-1:-1;;;;;1440:38:9;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;-1:-1:-1;;1499:27:9;;1510:15;;;1499:27;;1510:15;;1499:27;-1:-1:-1;1543:4:9;;1102:452;-1:-1:-1;1102:452:9:o;807:120:12:-;873:13;905:15;898:22;;;;;:::i;1339:249:10:-;1522:4;1549:32;1569:11;1549:19;:32::i;176:131:5:-;234:7;243:12;281:4;270:34;;;;;;;;;;;;:::i;:::-;263:41;;;;176:131;;;:::o;1054:247:10:-;1236:4;1263:31;1282:11;1263:18;:31::i;836:154:16:-;928:4;951:32;971:11;951:19;:32::i;493:305::-;584:4;605:31;624:11;605:18;:31::i;:::-;600:75;;-1:-1:-1;659:5:16;;493:305;-1:-1:-1;493:305:16:o;600:75::-;689:31;698:21;;;;;;;;:::i;689:31::-;685:85;;;743:16;;-1:-1:-1;;;743:16:16;;;;;;;;;;;685:85;-1:-1:-1;787:4:16;;493:305;-1:-1:-1;493:305:16:o;857:154:15:-;949:4;2683::9;972:32:15;2572:122:9;502:317:15;593:4;723:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;698:45:15;:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;698:45:15;;694:97;;766:14;;-1:-1:-1;;;766:14:15;;;;;;;;;;;331:180:17;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;-1:-1:-1;482:23:17;;331:180;-1:-1:-1;331:180:17:o;516:250::-;601:1;611:113;625:6;622:1;619:13;611:113;;;701:11;;;695:18;682:11;;;675:39;647:2;640:10;611:113;;;-1:-1:-1;;758:1:17;740:16;;733:27;516:250::o;771:271::-;813:3;851:5;845:12;878:6;873:3;866:19;894:76;963:6;956:4;951:3;947:14;940:4;933:5;929:16;894:76;:::i;:::-;1024:2;1003:15;-1:-1:-1;;999:29:17;990:39;;;;1031:4;986:50;;771:271;-1:-1:-1;;771:271:17:o;1047:220::-;1196:2;1185:9;1178:21;1159:4;1216:45;1257:2;1246:9;1242:18;1234:6;1216:45;:::i;:::-;1208:53;1047:220;-1:-1:-1;;;1047:220:17:o;1272:131::-;-1:-1:-1;;;;;1347:31:17;;1337:42;;1327:70;;1393:1;1390;1383:12;1327:70;1272:131;:::o;1408:247::-;1467:6;1520:2;1508:9;1499:7;1495:23;1491:32;1488:52;;;1536:1;1533;1526:12;1488:52;1575:9;1562:23;1594:31;1619:5;1594:31;:::i;1948:389::-;2036:6;2089:2;2077:9;2068:7;2064:23;2060:32;2057:52;;;2105:1;2102;2095:12;2057:52;2145:9;2132:23;2178:18;2170:6;2167:30;2164:50;;;2210:1;2207;2200:12;2164:50;2233:22;;2289:3;2271:16;;;2267:26;2264:46;;;2306:1;2303;2296:12;2449:1286;2632:2;2621:9;2614:21;2677:6;2671:13;2666:2;2655:9;2651:18;2644:41;2739:2;2731:6;2727:15;2721:22;2716:2;2705:9;2701:18;2694:50;2595:4;2791:2;2783:6;2779:15;2773:22;2804:51;2851:2;2840:9;2836:18;2822:12;2418:18;2407:30;2395:43;;2342:102;2804:51;-1:-1:-1;2904:2:17;2892:15;;2886:22;2418:18;2407:30;;2966:3;2951:19;;2395:43;-1:-1:-1;3020:3:17;3008:16;;3002:23;2418:18;2407:30;;3083:3;3068:19;;2395:43;3034:54;3143:3;3135:6;3131:16;3125:23;3119:3;3108:9;3104:19;3097:52;3198:3;3190:6;3186:16;3180:23;3212:55;3262:3;3251:9;3247:19;3231:14;-1:-1:-1;;;;;80:31:17;68:44;;14:104;3212:55;;3316:3;3308:6;3304:16;3298:23;3340:3;3352:54;3402:2;3391:9;3387:18;3371:14;-1:-1:-1;;;;;80:31:17;68:44;;14:104;3352:54;3443:15;;3437:22;;-1:-1:-1;3478:3:17;3490:51;3522:18;;;3437:22;1730:13;1723:21;1711:34;;1660:91;3490:51;3578:15;;3572:22;3613:6;3635:18;;;3628:30;3572:22;-1:-1:-1;3675:54:17;3724:3;3709:19;;3572:22;3675:54;:::i;:::-;3667:62;2449:1286;-1:-1:-1;;;;2449:1286:17:o;3740:380::-;3819:1;3815:12;;;;3862;;;3883:61;;3937:4;3929:6;3925:17;3915:27;;3883:61;3990:2;3982:6;3979:14;3959:18;3956:38;3953:161;;4036:10;4031:3;4027:20;4024:1;4017:31;4071:4;4068:1;4061:15;4099:4;4096:1;4089:15;3953:161;;3740:380;;;:::o;4125:127::-;4186:10;4181:3;4177:20;4174:1;4167:31;4217:4;4214:1;4207:15;4241:4;4238:1;4231:15;4257:128;4324:9;;;4345:11;;;4342:37;;;4359:18;;:::i;4572:127::-;4633:10;4628:3;4624:20;4621:1;4614:31;4664:4;4661:1;4654:15;4688:4;4685:1;4678:15;4704:250;4771:2;4765:9;4813:6;4801:19;;4850:18;4835:34;;4871:22;;;4832:62;4829:88;;;4897:18;;:::i;:::-;4933:2;4926:22;4704:250;:::o;4959:175::-;5037:13;;5090:18;5079:30;;5069:41;;5059:69;;5124:1;5121;5114:12;5059:69;4959:175;;;:::o;5139:138::-;5218:13;;5240:31;5218:13;5240:31;:::i;5282:164::-;5358:13;;5407;;5400:21;5390:32;;5380:60;;5436:1;5433;5426:12;5451:698;5504:5;5557:3;5550:4;5542:6;5538:17;5534:27;5524:55;;5575:1;5572;5565:12;5524:55;5604:6;5598:13;5630:18;5667:2;5663;5660:10;5657:36;;;5673:18;;:::i;:::-;5748:2;5742:9;5716:2;5802:13;;-1:-1:-1;;5798:22:17;;;5822:2;5794:31;5790:40;5778:53;;;5846:18;;;5866:22;;;5843:46;5840:72;;;5892:18;;:::i;:::-;5932:10;5928:2;5921:22;5967:2;5959:6;5952:18;6013:3;6006:4;6001:2;5993:6;5989:15;5985:26;5982:35;5979:55;;;6030:1;6027;6020:12;5979:55;6043:76;6116:2;6109:4;6101:6;6097:17;6090:4;6082:6;6078:17;6043:76;:::i;:::-;6137:6;5451:698;-1:-1:-1;;;;;;5451:698:17:o;6154:1264::-;6251:6;6304:2;6292:9;6283:7;6279:23;6275:32;6272:52;;;6320:1;6317;6310:12;6272:52;6353:9;6347:16;6382:18;6423:2;6415:6;6412:14;6409:34;;;6439:1;6436;6429:12;6409:34;6462:22;;;;6518:6;6500:16;;;6496:29;6493:49;;;6538:1;6535;6528:12;6493:49;6564:17;;:::i;:::-;6610:2;6604:9;6597:5;6590:24;6660:2;6656;6652:11;6646:18;6641:2;6634:5;6630:14;6623:42;6697:41;6734:2;6730;6726:11;6697:41;:::i;:::-;6692:2;6685:5;6681:14;6674:65;6771:41;6808:2;6804;6800:11;6771:41;:::i;:::-;6766:2;6759:5;6755:14;6748:65;6846:42;6883:3;6879:2;6875:12;6846:42;:::i;:::-;6840:3;6833:5;6829:15;6822:67;6936:3;6932:2;6928:12;6922:19;6916:3;6909:5;6905:15;6898:44;6975:43;7013:3;7009:2;7005:12;6975:43;:::i;:::-;6969:3;6962:5;6958:15;6951:68;7052:43;7090:3;7086:2;7082:12;7052:43;:::i;:::-;7046:3;7039:5;7035:15;7028:68;7115:3;7150:39;7185:2;7181;7177:11;7150:39;:::i;:::-;7134:14;;;7127:63;7209:3;7243:11;;;7237:18;7267:16;;;7264:36;;;7296:1;7293;7286:12;7264:36;7332:55;7379:7;7368:8;7364:2;7360:17;7332:55;:::i;:::-;7316:14;;;7309:79;;;;-1:-1:-1;7320:5:17;6154:1264;-1:-1:-1;;;;;6154:1264:17:o;7423:125::-;7488:9;;;7509:10;;;7506:36;;;7522:18;;:::i;7553:471::-;7649:6;7657;7710:2;7698:9;7689:7;7685:23;7681:32;7678:52;;;7726:1;7723;7716:12;7678:52;7758:9;7752:16;7777:31;7802:5;7777:31;:::i;:::-;7876:2;7861:18;;7855:25;7827:5;;-1:-1:-1;7903:18:17;7892:30;;7889:50;;;7935:1;7932;7925:12;7889:50;7958:60;8010:7;8001:6;7990:9;7986:22;7958:60;:::i;:::-;7948:70;;;7553:471;;;;;:::o"
            },
            "methodIdentifiers": {
              "badgeTokenURI(bytes32)": "24830563",
              "defaultBadgeURI()": "b1a3a35f",
              "getAndValidateBadge(bytes32)": "8c6f12f0",
              "hasBadge(address)": "5e50864f",
              "isEligible(address)": "66e305fd",
              "issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "d753a63d",
              "resolver()": "04f3bcec",
              "revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "8298b030"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"resolver_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_defaultBadgeURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"AttestationBadgeMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SingletonBadge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"IssueBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"RevokeBadge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"badgeTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBadgeURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAndValidateBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"isEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"issueBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revokeBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"params\":{\"uid\":\"The badge UID, or 0x0.\"},\"returns\":{\"_0\":\"The badge token URI (same format as ERC721).\"}},\"getAndValidateBadge(bytes32)\":{\"params\":{\"uid\":\"The attestation UID.\"},\"returns\":{\"_0\":\"The attestation.\"}},\"hasBadge(address)\":{\"params\":{\"user\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"True if the user has one or more of this badge.\"}},\"isEligible(address)\":{\"params\":{\"recipient\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"Whether the user is eligible to mint.\"}},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"title\":\"ScrollBadgePermissionless\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"notice\":\"Returns the token URI corresponding to a certain badge UID, or the default         badge token URI if the pass UID is 0x0.\"},\"getAndValidateBadge(bytes32)\":{\"notice\":\"Validate and return a Scroll badge attestation.\"},\"hasBadge(address)\":{\"notice\":\"Returns true if the user has one or more of this badge.\"},\"isEligible(address)\":{\"notice\":\"Check if user is eligible to mint this badge.\"},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `issueBadge` function in the parent contract.\"},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `revokeBadge` function in the parent contract.\"}},\"notice\":\"A simple badge that anyone can mint in a permissionless manner.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ScrollBadgePermissionless.sol\":\"ScrollBadgePermissionless\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]},\"contracts/Common.sol\":{\"keccak256\":\"0x0c5e0fa565efa769b21bd71d86640477679c7606df8381f948ddee83bfc95378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f61fde3179f370665a5b9046348b4d3d5af22a905b942520c1c922db9e4f15c5\",\"dweb:/ipfs/QmZREGKUfuUvSRo1C4YgM6BCLrQrKc9jsZEtKEufx3qpPt\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x303aaebfdda209e07e8857ea25216827286914342cc913c192e5ec7ba42f1294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1185fa7c17e059eeb43193f335882aba18ddaee8ad3add6fdb432bf2b88f0d41\",\"dweb:/ipfs/QmaCzcLUHCP3XTveHwRpF3Vws3sHsvxSEWQXkXj4uaLj32\"]},\"contracts/IScrollBadge.sol\":{\"keccak256\":\"0xafb4fc95ca0ce61b55bfb6438f2b11a985cd9096e576b3008942bdac5a04c509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc926a9ae7de4a52906d71fa10b8c095756fe7b67ccc87694ba7ef7c5fce7ef9\",\"dweb:/ipfs/QmcPkS1H4ASYwXofo6CNENC1JedvLa1JUBJEyc3xMk4H4Z\"]},\"contracts/IScrollBadgeResolver.sol\":{\"keccak256\":\"0xcf3de4a34d41be4a85bd881b6afc63266a6c75f9d331acbb68fcdb3940d5ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62ccab5967a3e41b23e6ac5126ed42d919e30c7fc6f44e8caf13bc0d6a2f2ec2\",\"dweb:/ipfs/QmaZYwipyk91w5BK6AD5X6cpaea78x8xyCkNLECT1dTTNX\"]},\"contracts/ScrollBadge.sol\":{\"keccak256\":\"0x8b775c1aecaf003f41c6a319d2a0a4353a84b1a02788d1d628eae2f94c30c216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8290ec81d595022f455abd1d83eac7eae27e402a513048eed177972506f81197\",\"dweb:/ipfs/QmUVwMBHno5bysxTs1j3AWeWnHeMCU7uUhuHjLhXmdatA3\"]},\"contracts/ScrollBadgePermissionless.sol\":{\"keccak256\":\"0x53dd4019144f9a96ab6dcff2d6138c4c1bc323b1496a162e77612b4948ea614c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04adb8199c3be8a9ba379eada3aa689388519ec678f2f308ef0e23563916b6ff\",\"dweb:/ipfs/QmV1JadCosS4MTgVBWhr55eyfMqpKgYW29Gg64vWhnyj6W\"]},\"contracts/extensions/ScrollBadgeDefaultURI.sol\":{\"keccak256\":\"0x3b48277c2319dc27df90b816bfd8e47d6e35638ff1e40904765d2776d01c7e0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95b82b798d14ac760b49467fbc8837a0e650d4f7cb771c4979cd34d94d01067\",\"dweb:/ipfs/QmRbBtJc2jLXqQtQbgzcykJauFuM3Rw34MokTvxS4wzFdD\"]},\"contracts/extensions/ScrollBadgeEligibilityCheck.sol\":{\"keccak256\":\"0xfeb97695c12a77c04c24394ef451a83d6e481953e8e252d3a7cc95b8e8bb65c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://283dc5e58dd9a5261d0026a31ed775312b037f3a2c533edb615b0e82b31deb5a\",\"dweb:/ipfs/QmfCvDXi1simfsxuSr1bkjrPKg8qihNiratXqRyicASCBJ\"]},\"contracts/extensions/ScrollBadgeSelfAttest.sol\":{\"keccak256\":\"0x1d271ddd1ee649c1cab4a718fc9195f04cc74b219c840ad9ce7bd00097727c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af42767cb6cfcf4d0309d148011bf792195984b43554f375815fa2e227e1ee7e\",\"dweb:/ipfs/Qmaec9KgbT87Dx3tLHK1sQtdT8qSUkjJnSr3Mhwo7Ze56K\"]},\"contracts/extensions/ScrollBadgeSingleton.sol\":{\"keccak256\":\"0x62848f89ef3fb93ac0e1f7064aa356886521f84f91dee7da4afb1b533a14b7d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33cd14454ead7504af43d899f492579e7eb495663fd2e70c4cb51d127e125f8\",\"dweb:/ipfs/QmVsXpKu28zV163qxkbABGoubCVzjRKT14a2FjWetmCSB3\"]}},\"version\":1}"
        }
      },
      "contracts/extensions/IScrollBadgeUpgradeable.sol": {
        "IScrollBadgeUpgradeable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "canUpgrade",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "upgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "canUpgrade(bytes32)": "f942ebd6",
              "upgrade(bytes32)": "bc444e13"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"canUpgrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canUpgrade(bytes32)\":{\"params\":{\"uid\":\"The unique identifier of the badge.\"},\"returns\":{\"_0\":\"True if the badge can be upgraded, false otherwise.\"}},\"upgrade(bytes32)\":{\"details\":\"Should revert with CannotUpgrade (from Errors.sol) if the badge cannot be upgraded.Should emit an Upgrade event (custom defined) if the upgrade is successful.\",\"params\":{\"uid\":\"The unique identifier of the badge.\"}}},\"title\":\"IScrollBadgeUpgradeable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canUpgrade(bytes32)\":{\"notice\":\"Checks if a badge can be upgraded.\"},\"upgrade(bytes32)\":{\"notice\":\"Upgrades a badge.\"}},\"notice\":\"This interface defines functions to facilitate badge upgrades.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/IScrollBadgeUpgradeable.sol\":\"IScrollBadgeUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extensions/IScrollBadgeUpgradeable.sol\":{\"keccak256\":\"0x642da204064c0a207ae7d22c1d105c0f155d95ca34665e2048d8d0cd5550aeb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6974b47b80148cfada4cf003239f910318d94c02bce4a5104d47a20f57a5013\",\"dweb:/ipfs/QmdP44P937yYQdncC2DVAQT3ip3mqmqi44SN9KCt3GRoeT\"]}},\"version\":1}"
        }
      },
      "contracts/extensions/ScrollBadgeDefaultURI.sol": {
        "ScrollBadgeDefaultURI": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "AttestationBadgeMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "IssueBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "RevokeBadge",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "badgeTokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "defaultBadgeURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAndValidateBadge",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "hasBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "issueBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resolver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "revokeBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "badgeTokenURI(bytes32)": "24830563",
              "defaultBadgeURI()": "b1a3a35f",
              "getAndValidateBadge(bytes32)": "8c6f12f0",
              "hasBadge(address)": "5e50864f",
              "issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "d753a63d",
              "resolver()": "04f3bcec",
              "revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "8298b030"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"AttestationBadgeMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"IssueBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"RevokeBadge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"badgeTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBadgeURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAndValidateBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"issueBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revokeBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"params\":{\"uid\":\"The badge UID, or 0x0.\"},\"returns\":{\"_0\":\"The badge token URI (same format as ERC721).\"}},\"getAndValidateBadge(bytes32)\":{\"params\":{\"uid\":\"The attestation UID.\"},\"returns\":{\"_0\":\"The attestation.\"}},\"hasBadge(address)\":{\"params\":{\"user\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"True if the user has one or more of this badge.\"}},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"title\":\"ScrollBadgeDefaultURI\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"notice\":\"Returns the token URI corresponding to a certain badge UID, or the default         badge token URI if the pass UID is 0x0.\"},\"getAndValidateBadge(bytes32)\":{\"notice\":\"Validate and return a Scroll badge attestation.\"},\"hasBadge(address)\":{\"notice\":\"Returns true if the user has one or more of this badge.\"},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `issueBadge` function in the parent contract.\"},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `revokeBadge` function in the parent contract.\"}},\"notice\":\"This contract sets a default badge URI.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/ScrollBadgeDefaultURI.sol\":\"ScrollBadgeDefaultURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]},\"contracts/Common.sol\":{\"keccak256\":\"0x0c5e0fa565efa769b21bd71d86640477679c7606df8381f948ddee83bfc95378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f61fde3179f370665a5b9046348b4d3d5af22a905b942520c1c922db9e4f15c5\",\"dweb:/ipfs/QmZREGKUfuUvSRo1C4YgM6BCLrQrKc9jsZEtKEufx3qpPt\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x303aaebfdda209e07e8857ea25216827286914342cc913c192e5ec7ba42f1294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1185fa7c17e059eeb43193f335882aba18ddaee8ad3add6fdb432bf2b88f0d41\",\"dweb:/ipfs/QmaCzcLUHCP3XTveHwRpF3Vws3sHsvxSEWQXkXj4uaLj32\"]},\"contracts/IScrollBadge.sol\":{\"keccak256\":\"0xafb4fc95ca0ce61b55bfb6438f2b11a985cd9096e576b3008942bdac5a04c509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc926a9ae7de4a52906d71fa10b8c095756fe7b67ccc87694ba7ef7c5fce7ef9\",\"dweb:/ipfs/QmcPkS1H4ASYwXofo6CNENC1JedvLa1JUBJEyc3xMk4H4Z\"]},\"contracts/IScrollBadgeResolver.sol\":{\"keccak256\":\"0xcf3de4a34d41be4a85bd881b6afc63266a6c75f9d331acbb68fcdb3940d5ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62ccab5967a3e41b23e6ac5126ed42d919e30c7fc6f44e8caf13bc0d6a2f2ec2\",\"dweb:/ipfs/QmaZYwipyk91w5BK6AD5X6cpaea78x8xyCkNLECT1dTTNX\"]},\"contracts/ScrollBadge.sol\":{\"keccak256\":\"0x8b775c1aecaf003f41c6a319d2a0a4353a84b1a02788d1d628eae2f94c30c216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8290ec81d595022f455abd1d83eac7eae27e402a513048eed177972506f81197\",\"dweb:/ipfs/QmUVwMBHno5bysxTs1j3AWeWnHeMCU7uUhuHjLhXmdatA3\"]},\"contracts/extensions/ScrollBadgeDefaultURI.sol\":{\"keccak256\":\"0x3b48277c2319dc27df90b816bfd8e47d6e35638ff1e40904765d2776d01c7e0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95b82b798d14ac760b49467fbc8837a0e650d4f7cb771c4979cd34d94d01067\",\"dweb:/ipfs/QmRbBtJc2jLXqQtQbgzcykJauFuM3Rw34MokTvxS4wzFdD\"]}},\"version\":1}"
        }
      },
      "contracts/extensions/ScrollBadgeEligibilityCheck.sol": {
        "ScrollBadgeEligibilityCheck": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "AttestationBadgeMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "IssueBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "RevokeBadge",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "badgeTokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAndValidateBadge",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "hasBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "isEligible",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "issueBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resolver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "revokeBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "badgeTokenURI(bytes32)": "24830563",
              "getAndValidateBadge(bytes32)": "8c6f12f0",
              "hasBadge(address)": "5e50864f",
              "isEligible(address)": "66e305fd",
              "issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "d753a63d",
              "resolver()": "04f3bcec",
              "revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "8298b030"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"AttestationBadgeMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"IssueBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"RevokeBadge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"badgeTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAndValidateBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"isEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"issueBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revokeBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"params\":{\"uid\":\"The badge UID, or 0x0.\"},\"returns\":{\"_0\":\"The badge token URI (same format as ERC721).\"}},\"getAndValidateBadge(bytes32)\":{\"params\":{\"uid\":\"The attestation UID.\"},\"returns\":{\"_0\":\"The attestation.\"}},\"hasBadge(address)\":{\"params\":{\"user\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"True if the user has one or more of this badge.\"}},\"isEligible(address)\":{\"params\":{\"recipient\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"Whether the user is eligible to mint.\"}},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"title\":\"ScrollBadgeEligibilityCheck\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"notice\":\"Returns the token URI corresponding to a certain badge UID, or the default         badge token URI if the pass UID is 0x0.\"},\"getAndValidateBadge(bytes32)\":{\"notice\":\"Validate and return a Scroll badge attestation.\"},\"hasBadge(address)\":{\"notice\":\"Returns true if the user has one or more of this badge.\"},\"isEligible(address)\":{\"notice\":\"Check if user is eligible to mint this badge.\"},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `issueBadge` function in the parent contract.\"},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `revokeBadge` function in the parent contract.\"}},\"notice\":\"This contract adds a standard on-chain eligibility check API.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/ScrollBadgeEligibilityCheck.sol\":\"ScrollBadgeEligibilityCheck\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]},\"contracts/Common.sol\":{\"keccak256\":\"0x0c5e0fa565efa769b21bd71d86640477679c7606df8381f948ddee83bfc95378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f61fde3179f370665a5b9046348b4d3d5af22a905b942520c1c922db9e4f15c5\",\"dweb:/ipfs/QmZREGKUfuUvSRo1C4YgM6BCLrQrKc9jsZEtKEufx3qpPt\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x303aaebfdda209e07e8857ea25216827286914342cc913c192e5ec7ba42f1294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1185fa7c17e059eeb43193f335882aba18ddaee8ad3add6fdb432bf2b88f0d41\",\"dweb:/ipfs/QmaCzcLUHCP3XTveHwRpF3Vws3sHsvxSEWQXkXj4uaLj32\"]},\"contracts/IScrollBadge.sol\":{\"keccak256\":\"0xafb4fc95ca0ce61b55bfb6438f2b11a985cd9096e576b3008942bdac5a04c509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc926a9ae7de4a52906d71fa10b8c095756fe7b67ccc87694ba7ef7c5fce7ef9\",\"dweb:/ipfs/QmcPkS1H4ASYwXofo6CNENC1JedvLa1JUBJEyc3xMk4H4Z\"]},\"contracts/IScrollBadgeResolver.sol\":{\"keccak256\":\"0xcf3de4a34d41be4a85bd881b6afc63266a6c75f9d331acbb68fcdb3940d5ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62ccab5967a3e41b23e6ac5126ed42d919e30c7fc6f44e8caf13bc0d6a2f2ec2\",\"dweb:/ipfs/QmaZYwipyk91w5BK6AD5X6cpaea78x8xyCkNLECT1dTTNX\"]},\"contracts/ScrollBadge.sol\":{\"keccak256\":\"0x8b775c1aecaf003f41c6a319d2a0a4353a84b1a02788d1d628eae2f94c30c216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8290ec81d595022f455abd1d83eac7eae27e402a513048eed177972506f81197\",\"dweb:/ipfs/QmUVwMBHno5bysxTs1j3AWeWnHeMCU7uUhuHjLhXmdatA3\"]},\"contracts/extensions/ScrollBadgeEligibilityCheck.sol\":{\"keccak256\":\"0xfeb97695c12a77c04c24394ef451a83d6e481953e8e252d3a7cc95b8e8bb65c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://283dc5e58dd9a5261d0026a31ed775312b037f3a2c533edb615b0e82b31deb5a\",\"dweb:/ipfs/QmfCvDXi1simfsxuSr1bkjrPKg8qihNiratXqRyicASCBJ\"]}},\"version\":1}"
        }
      },
      "contracts/extensions/ScrollBadgeNoExpiry.sol": {
        "ScrollBadgeNoExpiry": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "AttestationBadgeMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpirationDisabled",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "IssueBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "RevokeBadge",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "badgeTokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAndValidateBadge",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "hasBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "issueBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resolver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "revokeBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "badgeTokenURI(bytes32)": "24830563",
              "getAndValidateBadge(bytes32)": "8c6f12f0",
              "hasBadge(address)": "5e50864f",
              "issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "d753a63d",
              "resolver()": "04f3bcec",
              "revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "8298b030"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"AttestationBadgeMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpirationDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"IssueBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"RevokeBadge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"badgeTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAndValidateBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"issueBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revokeBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"params\":{\"uid\":\"The badge UID, or 0x0.\"},\"returns\":{\"_0\":\"The badge token URI (same format as ERC721).\"}},\"getAndValidateBadge(bytes32)\":{\"params\":{\"uid\":\"The attestation UID.\"},\"returns\":{\"_0\":\"The attestation.\"}},\"hasBadge(address)\":{\"params\":{\"user\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"True if the user has one or more of this badge.\"}},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"title\":\"ScrollBadgeNoExpiry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"notice\":\"Returns the token URI corresponding to a certain badge UID, or the default         badge token URI if the pass UID is 0x0.\"},\"getAndValidateBadge(bytes32)\":{\"notice\":\"Validate and return a Scroll badge attestation.\"},\"hasBadge(address)\":{\"notice\":\"Returns true if the user has one or more of this badge.\"},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `issueBadge` function in the parent contract.\"},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `revokeBadge` function in the parent contract.\"}},\"notice\":\"This contract disables expiration for this badge.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/ScrollBadgeNoExpiry.sol\":\"ScrollBadgeNoExpiry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]},\"contracts/Common.sol\":{\"keccak256\":\"0x0c5e0fa565efa769b21bd71d86640477679c7606df8381f948ddee83bfc95378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f61fde3179f370665a5b9046348b4d3d5af22a905b942520c1c922db9e4f15c5\",\"dweb:/ipfs/QmZREGKUfuUvSRo1C4YgM6BCLrQrKc9jsZEtKEufx3qpPt\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x303aaebfdda209e07e8857ea25216827286914342cc913c192e5ec7ba42f1294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1185fa7c17e059eeb43193f335882aba18ddaee8ad3add6fdb432bf2b88f0d41\",\"dweb:/ipfs/QmaCzcLUHCP3XTveHwRpF3Vws3sHsvxSEWQXkXj4uaLj32\"]},\"contracts/IScrollBadge.sol\":{\"keccak256\":\"0xafb4fc95ca0ce61b55bfb6438f2b11a985cd9096e576b3008942bdac5a04c509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc926a9ae7de4a52906d71fa10b8c095756fe7b67ccc87694ba7ef7c5fce7ef9\",\"dweb:/ipfs/QmcPkS1H4ASYwXofo6CNENC1JedvLa1JUBJEyc3xMk4H4Z\"]},\"contracts/IScrollBadgeResolver.sol\":{\"keccak256\":\"0xcf3de4a34d41be4a85bd881b6afc63266a6c75f9d331acbb68fcdb3940d5ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62ccab5967a3e41b23e6ac5126ed42d919e30c7fc6f44e8caf13bc0d6a2f2ec2\",\"dweb:/ipfs/QmaZYwipyk91w5BK6AD5X6cpaea78x8xyCkNLECT1dTTNX\"]},\"contracts/ScrollBadge.sol\":{\"keccak256\":\"0x8b775c1aecaf003f41c6a319d2a0a4353a84b1a02788d1d628eae2f94c30c216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8290ec81d595022f455abd1d83eac7eae27e402a513048eed177972506f81197\",\"dweb:/ipfs/QmUVwMBHno5bysxTs1j3AWeWnHeMCU7uUhuHjLhXmdatA3\"]},\"contracts/extensions/ScrollBadgeNoExpiry.sol\":{\"keccak256\":\"0xa6fd1f22b980935f3b64db87745bcf81778ea6a087d916da5b40b4163be5048e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8714237bd59cf4aea57c042061580fe755e7e1e5e92512053002f74db8e3cf00\",\"dweb:/ipfs/QmQ777yXwymqvtpkpjYjrPzvAVpEG6YbvsX9Fwb1oyeuXn\"]}},\"version\":1}"
        }
      },
      "contracts/extensions/ScrollBadgeSelfAttest.sol": {
        "ScrollBadgeSelfAttest": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "AttestationBadgeMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "IssueBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "RevokeBadge",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "badgeTokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAndValidateBadge",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "hasBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "issueBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resolver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "revokeBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "badgeTokenURI(bytes32)": "24830563",
              "getAndValidateBadge(bytes32)": "8c6f12f0",
              "hasBadge(address)": "5e50864f",
              "issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "d753a63d",
              "resolver()": "04f3bcec",
              "revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "8298b030"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"AttestationBadgeMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"IssueBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"RevokeBadge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"badgeTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAndValidateBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"issueBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revokeBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"params\":{\"uid\":\"The badge UID, or 0x0.\"},\"returns\":{\"_0\":\"The badge token URI (same format as ERC721).\"}},\"getAndValidateBadge(bytes32)\":{\"params\":{\"uid\":\"The attestation UID.\"},\"returns\":{\"_0\":\"The attestation.\"}},\"hasBadge(address)\":{\"params\":{\"user\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"True if the user has one or more of this badge.\"}},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"title\":\"ScrollBadgeSelfAttest\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"notice\":\"Returns the token URI corresponding to a certain badge UID, or the default         badge token URI if the pass UID is 0x0.\"},\"getAndValidateBadge(bytes32)\":{\"notice\":\"Validate and return a Scroll badge attestation.\"},\"hasBadge(address)\":{\"notice\":\"Returns true if the user has one or more of this badge.\"},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `issueBadge` function in the parent contract.\"},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `revokeBadge` function in the parent contract.\"}},\"notice\":\"This contract ensures that only the badge recipient can attest.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/ScrollBadgeSelfAttest.sol\":\"ScrollBadgeSelfAttest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]},\"contracts/Common.sol\":{\"keccak256\":\"0x0c5e0fa565efa769b21bd71d86640477679c7606df8381f948ddee83bfc95378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f61fde3179f370665a5b9046348b4d3d5af22a905b942520c1c922db9e4f15c5\",\"dweb:/ipfs/QmZREGKUfuUvSRo1C4YgM6BCLrQrKc9jsZEtKEufx3qpPt\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x303aaebfdda209e07e8857ea25216827286914342cc913c192e5ec7ba42f1294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1185fa7c17e059eeb43193f335882aba18ddaee8ad3add6fdb432bf2b88f0d41\",\"dweb:/ipfs/QmaCzcLUHCP3XTveHwRpF3Vws3sHsvxSEWQXkXj4uaLj32\"]},\"contracts/IScrollBadge.sol\":{\"keccak256\":\"0xafb4fc95ca0ce61b55bfb6438f2b11a985cd9096e576b3008942bdac5a04c509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc926a9ae7de4a52906d71fa10b8c095756fe7b67ccc87694ba7ef7c5fce7ef9\",\"dweb:/ipfs/QmcPkS1H4ASYwXofo6CNENC1JedvLa1JUBJEyc3xMk4H4Z\"]},\"contracts/IScrollBadgeResolver.sol\":{\"keccak256\":\"0xcf3de4a34d41be4a85bd881b6afc63266a6c75f9d331acbb68fcdb3940d5ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62ccab5967a3e41b23e6ac5126ed42d919e30c7fc6f44e8caf13bc0d6a2f2ec2\",\"dweb:/ipfs/QmaZYwipyk91w5BK6AD5X6cpaea78x8xyCkNLECT1dTTNX\"]},\"contracts/ScrollBadge.sol\":{\"keccak256\":\"0x8b775c1aecaf003f41c6a319d2a0a4353a84b1a02788d1d628eae2f94c30c216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8290ec81d595022f455abd1d83eac7eae27e402a513048eed177972506f81197\",\"dweb:/ipfs/QmUVwMBHno5bysxTs1j3AWeWnHeMCU7uUhuHjLhXmdatA3\"]},\"contracts/extensions/ScrollBadgeSelfAttest.sol\":{\"keccak256\":\"0x1d271ddd1ee649c1cab4a718fc9195f04cc74b219c840ad9ce7bd00097727c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af42767cb6cfcf4d0309d148011bf792195984b43554f375815fa2e227e1ee7e\",\"dweb:/ipfs/Qmaec9KgbT87Dx3tLHK1sQtdT8qSUkjJnSr3Mhwo7Ze56K\"]}},\"version\":1}"
        }
      },
      "contracts/extensions/ScrollBadgeSingleton.sol": {
        "ScrollBadgeSingleton": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "AttestationBadgeMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SingletonBadge",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "IssueBadge",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "RevokeBadge",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "badgeTokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "name": "getAndValidateBadge",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "hasBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "issueBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resolver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "uid",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "schema",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint64",
                      "name": "time",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "expirationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "revocationTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refUID",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "attester",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "revocable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Attestation",
                  "name": "attestation",
                  "type": "tuple"
                }
              ],
              "name": "revokeBadge",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "badgeTokenURI(bytes32)": "24830563",
              "getAndValidateBadge(bytes32)": "8c6f12f0",
              "hasBadge(address)": "5e50864f",
              "issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "d753a63d",
              "resolver()": "04f3bcec",
              "revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "8298b030"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"AttestationBadgeMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SingletonBadge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"IssueBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"RevokeBadge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"badgeTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAndValidateBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"issueBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revokeBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"params\":{\"uid\":\"The badge UID, or 0x0.\"},\"returns\":{\"_0\":\"The badge token URI (same format as ERC721).\"}},\"getAndValidateBadge(bytes32)\":{\"params\":{\"uid\":\"The attestation UID.\"},\"returns\":{\"_0\":\"The attestation.\"}},\"hasBadge(address)\":{\"params\":{\"user\":\"The user's wallet address.\"},\"returns\":{\"_0\":\"True if the user has one or more of this badge.\"}},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"title\":\"ScrollBadgeSingleton\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"badgeTokenURI(bytes32)\":{\"notice\":\"Returns the token URI corresponding to a certain badge UID, or the default         badge token URI if the pass UID is 0x0.\"},\"getAndValidateBadge(bytes32)\":{\"notice\":\"Validate and return a Scroll badge attestation.\"},\"hasBadge(address)\":{\"notice\":\"Returns true if the user has one or more of this badge.\"},\"issueBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `issueBadge` function in the parent contract.\"},\"revokeBadge((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"A resolver callback invoked in the `revokeBadge` function in the parent contract.\"}},\"notice\":\"This contract only allows one active badge per wallet.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/ScrollBadgeSingleton.sol\":\"ScrollBadgeSingleton\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0x479f39f03425df5385d790cd2c7447b8250aeb9733d13029d3da8c5982b6604b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c378654832e0e564f1ef502977253c243712501379ac6233caac05979713ba80\",\"dweb:/ipfs/QmbKdSGgniy45K2vEH93BJtJYo1syp3FL8JCMEUtZELpjx\"]},\"contracts/Common.sol\":{\"keccak256\":\"0x0c5e0fa565efa769b21bd71d86640477679c7606df8381f948ddee83bfc95378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f61fde3179f370665a5b9046348b4d3d5af22a905b942520c1c922db9e4f15c5\",\"dweb:/ipfs/QmZREGKUfuUvSRo1C4YgM6BCLrQrKc9jsZEtKEufx3qpPt\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x303aaebfdda209e07e8857ea25216827286914342cc913c192e5ec7ba42f1294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1185fa7c17e059eeb43193f335882aba18ddaee8ad3add6fdb432bf2b88f0d41\",\"dweb:/ipfs/QmaCzcLUHCP3XTveHwRpF3Vws3sHsvxSEWQXkXj4uaLj32\"]},\"contracts/IScrollBadge.sol\":{\"keccak256\":\"0xafb4fc95ca0ce61b55bfb6438f2b11a985cd9096e576b3008942bdac5a04c509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc926a9ae7de4a52906d71fa10b8c095756fe7b67ccc87694ba7ef7c5fce7ef9\",\"dweb:/ipfs/QmcPkS1H4ASYwXofo6CNENC1JedvLa1JUBJEyc3xMk4H4Z\"]},\"contracts/IScrollBadgeResolver.sol\":{\"keccak256\":\"0xcf3de4a34d41be4a85bd881b6afc63266a6c75f9d331acbb68fcdb3940d5ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62ccab5967a3e41b23e6ac5126ed42d919e30c7fc6f44e8caf13bc0d6a2f2ec2\",\"dweb:/ipfs/QmaZYwipyk91w5BK6AD5X6cpaea78x8xyCkNLECT1dTTNX\"]},\"contracts/ScrollBadge.sol\":{\"keccak256\":\"0x8b775c1aecaf003f41c6a319d2a0a4353a84b1a02788d1d628eae2f94c30c216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8290ec81d595022f455abd1d83eac7eae27e402a513048eed177972506f81197\",\"dweb:/ipfs/QmUVwMBHno5bysxTs1j3AWeWnHeMCU7uUhuHjLhXmdatA3\"]},\"contracts/extensions/ScrollBadgeSingleton.sol\":{\"keccak256\":\"0x62848f89ef3fb93ac0e1f7064aa356886521f84f91dee7da4afb1b533a14b7d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33cd14454ead7504af43d899f492579e7eb495663fd2e70c4cb51d127e125f8\",\"dweb:/ipfs/QmVsXpKu28zV163qxkbABGoubCVzjRKT14a2FjWetmCSB3\"]}},\"version\":1}"
        }
      }
    }
  }
}